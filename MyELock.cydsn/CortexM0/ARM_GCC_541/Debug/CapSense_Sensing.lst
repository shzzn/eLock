ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m0
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"CapSense_Sensing.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.CapSense_SsTrimIdacsSourcing,"ax",%progbits
  20              		.align	2
  21              		.code	16
  22              		.thumb_func
  23              		.type	CapSense_SsTrimIdacsSourcing, %function
  24              	CapSense_SsTrimIdacsSourcing:
  25              	.LFB18:
  26              		.file 1 "Generated_Source\\PSoC4\\CapSense_Sensing.c"
   1:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************************************************//**
   2:Generated_Source\PSoC4/CapSense_Sensing.c **** * \file CapSense_Sensing.c
   3:Generated_Source\PSoC4/CapSense_Sensing.c **** * \version 6.0
   4:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   5:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
   6:Generated_Source\PSoC4/CapSense_Sensing.c **** *   This file contains the source of functions common for
   7:Generated_Source\PSoC4/CapSense_Sensing.c **** *   different sensing methods.
   8:Generated_Source\PSoC4/CapSense_Sensing.c **** *
   9:Generated_Source\PSoC4/CapSense_Sensing.c **** * \see CapSense v6.0 Datasheet
  10:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  11:Generated_Source\PSoC4/CapSense_Sensing.c **** *//*****************************************************************************
  12:Generated_Source\PSoC4/CapSense_Sensing.c **** * Copyright (2016-2018), Cypress Semiconductor Corporation.
  13:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************
  14:Generated_Source\PSoC4/CapSense_Sensing.c **** * This software is owned by Cypress Semiconductor Corporation (Cypress) and is
  15:Generated_Source\PSoC4/CapSense_Sensing.c **** * protected by and subject to worldwide patent protection (United States and
  16:Generated_Source\PSoC4/CapSense_Sensing.c **** * foreign), United States copyright laws and international treaty provisions.
  17:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress hereby grants to licensee a personal, non-exclusive, non-transferable
  18:Generated_Source\PSoC4/CapSense_Sensing.c **** * license to copy, use, modify, create derivative works of, and compile the
  19:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress Source Code and derivative works for the sole purpose of creating
  20:Generated_Source\PSoC4/CapSense_Sensing.c **** * custom software in support of licensee product to be used only in conjunction
  21:Generated_Source\PSoC4/CapSense_Sensing.c **** * with a Cypress integrated circuit as specified in the applicable agreement.
  22:Generated_Source\PSoC4/CapSense_Sensing.c **** * Any reproduction, modification, translation, compilation, or representation of
  23:Generated_Source\PSoC4/CapSense_Sensing.c **** * this software except as specified above is prohibited without the express
  24:Generated_Source\PSoC4/CapSense_Sensing.c **** * written permission of Cypress.
  25:Generated_Source\PSoC4/CapSense_Sensing.c **** *
  26:Generated_Source\PSoC4/CapSense_Sensing.c **** * Disclaimer: CYPRESS MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, WITH
  27:Generated_Source\PSoC4/CapSense_Sensing.c **** * REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  28:Generated_Source\PSoC4/CapSense_Sensing.c **** * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  29:Generated_Source\PSoC4/CapSense_Sensing.c **** * Cypress reserves the right to make changes without further notice to the
  30:Generated_Source\PSoC4/CapSense_Sensing.c **** * materials described herein. Cypress does not assume any liability arising out
  31:Generated_Source\PSoC4/CapSense_Sensing.c **** * of the application or use of any product or circuit described herein. Cypress
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 2


  32:Generated_Source\PSoC4/CapSense_Sensing.c **** * does not authorize its products for use as critical components in life-support
  33:Generated_Source\PSoC4/CapSense_Sensing.c **** * systems where a malfunction or failure may reasonably be expected to result in
  34:Generated_Source\PSoC4/CapSense_Sensing.c **** * significant injury to the user. The inclusion of Cypress' product in a life-
  35:Generated_Source\PSoC4/CapSense_Sensing.c **** * support systems application implies that the manufacturer assumes all risk of
  36:Generated_Source\PSoC4/CapSense_Sensing.c **** * such use and in doing so indemnifies Cypress against all charges. Use may be
  37:Generated_Source\PSoC4/CapSense_Sensing.c **** * limited by and subject to the applicable Cypress software license agreement.
  38:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
  39:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  40:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "cyfitter.h"
  41:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Configuration.h"
  42:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Structure.h"
  43:Generated_Source\PSoC4/CapSense_Sensing.c **** #include "CapSense_Sensing.h"
  44:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
  45:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSX_LL.h"
  46:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
  47:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
  48:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingISX_LL.h"
  49:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
  50:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
  51:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SensingCSD_LL.h"
  52:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
  53:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
  54:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SmartSense_LL.h"
  55:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE) */
  56:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
  57:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_Adc.h"
  58:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
  59:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
  60:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_SelfTest.h"
  61:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
  62:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  63:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (0u != CapSense_ISX_EN)
  64:Generated_Source\PSoC4/CapSense_Sensing.c ****     #include "CapSense_DigPrt2.h"
  65:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_USES_PORT_3)
  66:Generated_Source\PSoC4/CapSense_Sensing.c ****         #include "CapSense_DigPrt3.h"
  67:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
  68:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (0u != CapSense_ISX_EN) */
  69:Generated_Source\PSoC4/CapSense_Sensing.c **** /***************************************
  70:Generated_Source\PSoC4/CapSense_Sensing.c **** * API Constants
  71:Generated_Source\PSoC4/CapSense_Sensing.c **** ***************************************/
  72:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  73:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MIN               (0u)
  74:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_IMO_FREQUENCY_OFFSET_MAX               (255u)
  75:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_RESOLUTION                 (12u)
  76:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CALIBRATION_FREQ_KHZ                   (1500u)
  77:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_LEVEL                 (CapSense_CSD_RAWCOUNT_CAL_LEVEL)
  78:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CSD_AUTOTUNE_CAL_UNITS                 (1000u)
  79:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MIN                                 (0u)
  80:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_MAX                                 (65000Lu)
  81:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CP_ERROR                               (4000Lu)
  82:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_CLK_SOURCE_LFSR_SCALE_OFFSET           (4u)
  83:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  84:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
  85:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (6000u)
  86:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
  87:Generated_Source\PSoC4/CapSense_Sensing.c ****     #define CapSense_CSD_SNS_FREQ_KHZ_MAX               (12600u)
  88:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 3


  89:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  90:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_FLIP_FLOP_DIV                          (1u)
  91:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  92:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_12000KHZ                   (12000uL)
  93:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_24000KHZ                   (24000uL)
  94:Generated_Source\PSoC4/CapSense_Sensing.c **** #define CapSense_MOD_CSD_CLK_48000KHZ                   (48000uL)
  95:Generated_Source\PSoC4/CapSense_Sensing.c **** 
  96:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  97:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Enumeration types definition                                              */
  98:Generated_Source\PSoC4/CapSense_Sensing.c **** /*****************************************************************************/
  99:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 100:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 101:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 102:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLUP_E   = 0x02u,
 103:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RES_PULLDOWN_E = 0x03u
 104:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_PORT_TEST_DM;
 105:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 106:Generated_Source\PSoC4/CapSense_Sensing.c **** typedef enum
 107:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 108:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_RESET      = 0x01u,
 109:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_STS_NO_RESET   = 0x02u
 110:Generated_Source\PSoC4/CapSense_Sensing.c **** } CapSense_TEST_TYPE;
 111:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 112:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 113:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 114:Generated_Source\PSoC4/CapSense_Sensing.c **** * Static Function Prototypes
 115:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 116:Generated_Source\PSoC4/CapSense_Sensing.c **** /**
 117:Generated_Source\PSoC4/CapSense_Sensing.c **** * \cond SECTION_C_INTERNAL
 118:Generated_Source\PSoC4/CapSense_Sensing.c **** * \addtogroup group_c_internal
 119:Generated_Source\PSoC4/CapSense_Sensing.c **** * \{
 120:Generated_Source\PSoC4/CapSense_Sensing.c **** */
 121:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 122:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
 123:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void);
 124:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 125:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 126:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
 127:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void);
 128:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 129:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
 130:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 131:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_ENABLE == CapSense_ISX_EN) || \
 132:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
 133:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void);
 134:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
 135:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
 136:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 138:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 139:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void);
 140:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 141:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 142:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void);
 143:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 144:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 145:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 4


 146:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 147:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 148:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
 149:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 150:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
 151:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)) ||\
 152:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
 153:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
 154:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
 155:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum);
 156:Generated_Source\PSoC4/CapSense_Sensing.c ****     static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize);
 157:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 159:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 160:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
 161:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 162:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 163:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
 164:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
 165:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 166:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 167:Generated_Source\PSoC4/CapSense_Sensing.c **** /** \}
 168:Generated_Source\PSoC4/CapSense_Sensing.c **** * \endcond */
 169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 170:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 171:Generated_Source\PSoC4/CapSense_Sensing.c **** * Defines module variables
 172:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 173:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 174:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_SENSE_METHOD_ENUM CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 175:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 176:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
 177:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Module variable keep track of multi-frequency scan channel index */
 178:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_scanFreqIndex = 0u;
 179:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Variable keep frequency offsets */
 180:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 CapSense_immunity[CapSense_NUM_SCAN_FREQS] = {0u, 0u, 0u};
 181:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
 182:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* const allows C-compiler to do optimization */
 183:Generated_Source\PSoC4/CapSense_Sensing.c ****     const uint8 CapSense_scanFreqIndex = 0u;
 184:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 185:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 186:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Global software variables */
 187:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_widgetIndex = 0u;    /* Index of the scanning widget */
 188:Generated_Source\PSoC4/CapSense_Sensing.c **** volatile uint8 CapSense_sensorIndex = 0u;    /* Index of the scanning sensor */
 189:Generated_Source\PSoC4/CapSense_Sensing.c **** uint8 CapSense_requestScanAllWidget = 0u;
 190:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 191:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to RAM_SNS_STRUCT structure */
 192:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_RAM_SNS_STRUCT *CapSense_curRamSnsPtr;
 193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 194:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) || \
 195:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSX_EN) || \
 196:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_ISX_EN))
 197:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding configuration of widget to be scanned */
 198:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_WD_STRUCT const *CapSense_curFlashWdgtPtr = 0u;
 199:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 200:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 201:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
 202:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Pointer to Flash structure holding info of sensor to be scanned */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 5


 203:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_SNS_STRUCT const *CapSense_curFlashSnsPtr = 0u;
 204:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif
 205:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 206:Generated_Source\PSoC4/CapSense_Sensing.c **** /* Pointer to Flash structure to hold Sns electrode that was connected previously */
 207:Generated_Source\PSoC4/CapSense_Sensing.c **** CapSense_FLASH_IO_STRUCT const *CapSense_curSnsIOPtr;
 208:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 209:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 210:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 211:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_IsBusy
 212:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 213:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 214:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component (Scan is completed or Scan is in
 216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  progress).
 217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function returns a status of the hardware block whether a scan is
 220:Generated_Source\PSoC4/CapSense_Sensing.c **** *  currently in progress or not. If the Component is busy, no new scan or setup
 221:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widgets is made. The critical section (i.e. disable global interrupt)
 222:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is recommended for the application when the device transitions from
 223:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the active mode to sleep or deep sleep modes.
 224:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 225:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 226:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the current status of the Component:
 227:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_NOT_BUSY - No scan is in progress and a next scan
 228:Generated_Source\PSoC4/CapSense_Sensing.c **** *      can be initiated.
 229:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CapSense_SW_STS_BUSY - The previous scanning is not completed
 230:Generated_Source\PSoC4/CapSense_Sensing.c **** *      and the hardware block is busy.
 231:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 232:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 233:Generated_Source\PSoC4/CapSense_Sensing.c **** uint32 CapSense_IsBusy(void)
 234:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 235:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 238:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 239:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetupWidget
 240:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 241:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 242:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 243:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs the initialization required to scan the specified widget.
 244:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 245:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 246:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function prepares the Component to scan all the sensors in the specified
 247:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget by executing the following tasks:
 248:Generated_Source\PSoC4/CapSense_Sensing.c **** *    1. Re-initialize the hardware if it is not configured to perform the
 249:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing method used by the specified widget, this happens only if multiple
 250:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensing methods are used in the Component.
 251:Generated_Source\PSoC4/CapSense_Sensing.c **** *    2. Initialize the hardware with specific sensing configuration (e.g.
 252:Generated_Source\PSoC4/CapSense_Sensing.c **** *       sensor clock, scan resolution) used by the widget.
 253:Generated_Source\PSoC4/CapSense_Sensing.c **** *    3. Disconnect all previously connected electrodes, if the electrodes
 254:Generated_Source\PSoC4/CapSense_Sensing.c **** *       connected by the
 255:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_C_HIGH_LEVEL
 256:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDSetupWidgetExt(), CapSense_CSXSetupWidgetExt(),
 257:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_CSDConnectSns() functions and not disconnected.
 258:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 259:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \if SECTION_I_REP
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 6


 260:Generated_Source\PSoC4/CapSense_Sensing.c **** *       CapSense_ISXSetupWidgetExt() function and not disconnected.
 261:Generated_Source\PSoC4/CapSense_Sensing.c **** *       \endif
 262:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 263:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function does not start sensor scanning, the CapSense_Scan()
 264:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function must be called to start the scan sensors in the widget. If this
 265:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called more than once, it does not break the Component operation,
 266:Generated_Source\PSoC4/CapSense_Sensing.c **** *  but only the last initialized widget is in effect.
 267:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 268:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 269:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID number of the widget to be initialized for scanning.
 270:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the
 271:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 272:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_<WidgetName>_WDGT_ID.
 273:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 274:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 275:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the widget setting up operation:
 276:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_SUCCESS - The operation is successfully completed.
 277:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_BAD_PARAM - The widget is invalid or if the specified widget is
 278:Generated_Source\PSoC4/CapSense_Sensing.c **** *      disabled
 279:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_INVALID_STATE - The previous scanning is not completed and the
 280:Generated_Source\PSoC4/CapSense_Sensing.c **** *      hardware block is busy.
 281:Generated_Source\PSoC4/CapSense_Sensing.c **** *    - CYRET_UNKNOWN - An unknown sensing method is used by the widget or any
 282:Generated_Source\PSoC4/CapSense_Sensing.c **** *      other spurious error occurred.
 283:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 284:Generated_Source\PSoC4/CapSense_Sensing.c **** **********************************************************************************/
 285:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SetupWidget(uint32 widgetId)
 286:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 287:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 290:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 291:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_INVALID_STATE;
 293:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 294:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 295:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  Check if widget id is valid, specified widget is enabled and widget did not
 296:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  detect any fault conditions if BIST is enabled. If all conditions are met,
 297:Generated_Source\PSoC4/CapSense_Sensing.c ****      *  set widgetStatus as good, if not, set widgetStatus as bad.
 298:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if ((CapSense_TOTAL_WIDGETS > widgetId) &&
 300:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 301:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 302:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_SUCCESS;
 304:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 305:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 306:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****         widgetStatus = CYRET_BAD_PARAM;
 308:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 309:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 310:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 311:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Check widgetStatus flag that is set earlier, if flag is good, then set up only
 312:Generated_Source\PSoC4/CapSense_Sensing.c ****      * widget
 313:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CYRET_SUCCESS == widgetStatus)
 315:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 316:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 7


 317:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 318:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 319:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 320:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSX scan */
 321:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXSetupWidget(widgetId);
 322:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 323:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 324:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 325:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 326:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for CSD scan */
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDSetupWidget(widgetId);
 328:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 329:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 330:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 331:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 332:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set up widget for ISX scan */
 333:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXSetupWidget(widgetId);
 334:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 335:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 336:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 337:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Sensing method is invalid, return error to caller */
 338:Generated_Source\PSoC4/CapSense_Sensing.c ****             widgetStatus = CYRET_UNKNOWN;
 339:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 340:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 341:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 342:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (widgetStatus);
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 344:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 346:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 347:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_Scan
 348:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 349:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 350:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 351:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initiates scanning of all the sensors in the widget initialized by
 352:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SetupWidget(), if no scan is in progress.
 353:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 354:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 355:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function is called only after the CapSense_SetupWidget()
 356:Generated_Source\PSoC4/CapSense_Sensing.c **** *  function is called to start the scanning of the sensors in the widget. The
 357:Generated_Source\PSoC4/CapSense_Sensing.c **** *  status of a sensor scan must be checked using the CapSense_IsBusy()
 358:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API prior to starting a next scan or setting up another widget.
 359:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 360:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the scan initiation operation:
 362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 363:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the
 364:Generated_Source\PSoC4/CapSense_Sensing.c **** *    hardware block is busy.
 365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - An unknown sensing method is used by the widget.
 366:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 367:Generated_Source\PSoC4/CapSense_Sensing.c **** ********************************************************************************/
 368:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_Scan(void)
 369:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 370:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 371:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_WDGT_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_WDGT_SW_STS_BUSY))
 373:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 8


 374:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 376:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 377:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 378:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_currentSenseMethod)
 380:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 381:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
 382:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
 383:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXScan();
 384:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 385:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 386:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 387:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDScan();
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 390:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 391:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
 392:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_ISX_E:
 393:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXScan();
 394:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 395:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 396:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CYRET_UNKNOWN;
 398:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 399:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 400:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 401:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 404:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 405:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 406:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_ScanAllWidgets
 407:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 408:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 409:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 410:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Initializes the first enabled widget and scanning of all the sensors in the
 411:Generated_Source\PSoC4/CapSense_Sensing.c **** *  widget, then the same process is repeated for all the widgets in the Component,
 412:Generated_Source\PSoC4/CapSense_Sensing.c **** *  i.e. scanning of all the widgets in the Component.
 413:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 414:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 415:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function initializes a widget and scans all the sensors in the widget,
 416:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and then repeats the same for all the widgets in the Component. The tasks of
 417:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_SetupWidget() and CapSense_Scan() functions are
 418:Generated_Source\PSoC4/CapSense_Sensing.c **** *  executed by these functions. The status of a sensor scan must be checked
 419:Generated_Source\PSoC4/CapSense_Sensing.c **** *  using the CapSense_IsBusy() API prior to starting a next scan
 420:Generated_Source\PSoC4/CapSense_Sensing.c **** *  or setting up another widget.
 421:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 422:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
 423:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
 424:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_SUCCESS - Scanning is successfully started.
 425:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_BAD_PARAM - All the widgets are disabled.
 426:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_INVALID_STATE - The previous scanning is not completed and the HW block is busy.
 427:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CYRET_UNKNOWN - There are unknown errors.
 428:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 429:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 430:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_ScanAllWidgets(void)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 9


 431:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 432:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 434:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 435:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
 437:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 438:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****         scanStatus = CYRET_INVALID_STATE;
 440:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 441:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
 442:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 443:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
 444:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  Set up widget first widget.
 445:Generated_Source\PSoC4/CapSense_Sensing.c ****          *  If widget returned error, set up next, continue same until widget does not return error
 446:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u;
 448:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex++)
 450:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 452:Generated_Source\PSoC4/CapSense_Sensing.c ****             scanStatus = CapSense_SetupWidget(wdgtIndex);
 453:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == scanStatus)
 455:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 456:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (0u != (CapSense_TOTAL_WIDGETS - 1u))
 457:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* If there are more than one widget to be scanned, request callback to scan ne
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_TOTAL_WIDGETS - 1u) > wdgtIndex)
 459:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 460:Generated_Source\PSoC4/CapSense_Sensing.c ****                          /* Request callback to scan next widget in ISR */
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_ENABLE;
 462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 463:Generated_Source\PSoC4/CapSense_Sensing.c ****                     else
 464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (Do not scan the next widgets) */
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
 469:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 470:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Request to exit in ISR (We have only one widget) */
 471:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_requestScanAllWidget = CapSense_DISABLE;
 472:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 473:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (0u != (CapSense_TOTAL_WIDGETS - 1u)) */
 474:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 475:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initiate scan and quit loop */
 476:Generated_Source\PSoC4/CapSense_Sensing.c ****                 scanStatus = CapSense_Scan();
 477:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 478:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 479:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 480:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 481:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 483:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (scanStatus);
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 485:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 487:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 10


 488:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitialize
 489:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 490:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 491:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 492:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 493:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 494:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 495:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 496:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 497:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Performs hardware and firmware initialization required for proper operation
 498:Generated_Source\PSoC4/CapSense_Sensing.c **** *  of the CapSense Component. This function is called from
 499:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense_Start() API prior to calling any other APIs of the Component.
 500:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Depending on the configuration, the function initializes the CSD block
 501:Generated_Source\PSoC4/CapSense_Sensing.c **** *     for the corresponding sensing mode.
 502:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. The function updates the dsRam.wdgtWorking variable with 1 when Self-test
 503:Generated_Source\PSoC4/CapSense_Sensing.c **** *     is enabled.
 504:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 505:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling the CapSense_Start API is the recommended method to initialize
 506:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the CapSense Component at power-up. The CapSense_SsInitialize()
 507:Generated_Source\PSoC4/CapSense_Sensing.c **** *  API should not be used for initialization, resume, or wake-up operations.
 508:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The dsRam.wdgtWorking variable is updated.
 509:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 510:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return status
 511:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns status of operation:
 512:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Indicates successful initialization.
 513:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in the initialization process.
 514:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 515:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 516:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsInitialize(void)
 517:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 518:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
 519:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 520:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 521:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_MFS_IMO == CapSense_MFS_METHOD))
 522:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 centerFreqTrim;
 523:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 524:Generated_Source\PSoC4/CapSense_Sensing.c ****         centerFreqTrim = (uint8)CY_GET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR);
 525:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_immunity[CapSense_FREQ_CHANNEL_0] = centerFreqTrim;
 526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (centerFreqTrim < CapSense_IMO_FREQUENCY_OFFSET_F1)
 528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 529:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 530:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + (CapSense_IMO_FREQUENCY_O
 531:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 532:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 533:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (centerFreqTrim > (CapSense_IMO_FREQUENCY_OFFSET_MAX - CapSense_IMO_FREQUENCY_OFFSE
 534:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 535:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 536:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim - (CapSense_IMO_FREQUENCY_O
 537:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                            CapSense
 538:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 539:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 540:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 541:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_1] = centerFreqTrim - CapSense_IMO_FREQUENCY_OF
 542:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_immunity[CapSense_FREQ_CHANNEL_2] = centerFreqTrim + CapSense_IMO_FREQUENCY_OF
 543:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 544:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 11


 545:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) &&\
 546:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_MFS_IMO == CapSense_MFS_METHOD)) */
 547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 548:Generated_Source\PSoC4/CapSense_Sensing.c ****     initStatus = CYRET_SUCCESS;
 549:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 550:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_DISABLE == CapSense_CSDV2)
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsTrimIdacs();
 552:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 554:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if((CapSense_ENABLE == CapSense_CSD_EN) ||\
 555:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)))
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsInitializeSourceSenseClk();
 557:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 558:Generated_Source\PSoC4/CapSense_Sensing.c ****               ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))) */
 559:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 560:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set all IO states to the default state */
 561:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetIOsInDefaultState();
 562:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 563:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_MANY_SENSE_MODES_EN)
 564:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Initialize CSD block for ADC scanning */
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_UNDEFINED_E);
 566:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 567:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSD_E);
 568:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSX_EN)
 569:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_CSX_E);
 570:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_ISX_EN)
 571:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ISX_E);
 572:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #error "No sensing method enabled, Component cannot work in this mode"
 574:Generated_Source\PSoC4/CapSense_Sensing.c ****         initStatus = CYRET_UNKNOWN;
 575:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 576:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 577:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (initStatus);
 578:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 579:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 580:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 581:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 582:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SetPinState
 583:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 584:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 585:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 586:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the state (drive mode and output state) of the port pin used by a sensor.
 587:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The possible states are GND, Shield, High-Z, Tx or Rx, Sensor. If the sensor
 588:Generated_Source\PSoC4/CapSense_Sensing.c **** *  specified in the input parameter is a ganged sensor, then the state of all pins
 589:Generated_Source\PSoC4/CapSense_Sensing.c **** *  associated with the ganged sensor is updated.
 590:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 591:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 592:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets a specified state for a specified sensor element. For the
 593:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CSD widgets, sensor element is a sensor ID, for the CSX widgets, it is either
 594:Generated_Source\PSoC4/CapSense_Sensing.c **** *  an Rx or Tx electrode ID. If the specified sensor is a ganged sensor, then
 595:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the specified state is set for all the electrodes belong to the sensor.
 596:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function must not be called while the Component is in the busy state.
 597:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 598:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function accepts the CapSense_SHIELD and
 599:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense_SENSOR states as an input only if there is at least
 600:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSD widget. Similarly, this function accepts the CapSense_TX_PIN
 601:Generated_Source\PSoC4/CapSense_Sensing.c **** *  and CapSense_RX_PIN states as an input only if there is at least
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 12


 602:Generated_Source\PSoC4/CapSense_Sensing.c **** *  one CSX widget in the project.
 603:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 604:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Calling this function directly from the application layer is not
 605:Generated_Source\PSoC4/CapSense_Sensing.c **** *  recommended. This function is used to implement only the custom-specific
 606:Generated_Source\PSoC4/CapSense_Sensing.c **** *  use cases. Functions that perform a setup and scan of a sensor/widget
 607:Generated_Source\PSoC4/CapSense_Sensing.c **** *  automatically set the required pin states. They ignore changes
 608:Generated_Source\PSoC4/CapSense_Sensing.c **** *  in the design made by the CapSense_SetPinState() function.
 609:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function neither check wdgtIndex nor sensorElement for the correctness.
 610:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 611:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param widgetId
 612:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the widget to change the pin state of the specified
 613:Generated_Source\PSoC4/CapSense_Sensing.c **** *  sensor.
 614:Generated_Source\PSoC4/CapSense_Sensing.c **** *  A macro for the widget ID can be found in the CapSense Configuration
 615:Generated_Source\PSoC4/CapSense_Sensing.c **** *  header file defined as CapSense_<WidgetName>_WDGT_ID.
 616:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 617:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param sensorElement
 618:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the ID of the sensor element within the widget to change
 619:Generated_Source\PSoC4/CapSense_Sensing.c **** *  its pin state.
 620:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \if SECTION_C_LOW_LEVEL
 621:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSD widgets, sensorElement is the sensor ID and can be found in the
 622:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as
 623:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_SNS<SensorNumber>_ID.
 624:Generated_Source\PSoC4/CapSense_Sensing.c **** *  For the CSX widgets, sensorElement is defined either as Rx ID or Tx ID.
 625:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The first Rx in a widget corresponds to sensorElement = 0, the second
 626:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Rx in a widget corresponds to sensorElement = 1, and so on.
 627:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The last Tx in a widget corresponds to sensorElement = (RxNum + TxNum).
 628:Generated_Source\PSoC4/CapSense_Sensing.c **** *  \endif
 629:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Macros for Rx and Tx IDs can be found in the
 630:Generated_Source\PSoC4/CapSense_Sensing.c **** *  CapSense Configuration header file defined as:
 631:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_RX<RXNumber>_ID
 632:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_<WidgetName>_TX<TXNumber>_ID.
 633:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 634:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param state
 635:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the state of the sensor to be set:
 636:Generated_Source\PSoC4/CapSense_Sensing.c **** *     1. CapSense_GROUND - The pin is connected to the ground.
 637:Generated_Source\PSoC4/CapSense_Sensing.c **** *     2. CapSense_HIGHZ - The drive mode of the pin is set to High-Z
 638:Generated_Source\PSoC4/CapSense_Sensing.c **** *        Analog.
 639:Generated_Source\PSoC4/CapSense_Sensing.c **** *     3. CapSense_SHIELD - The shield signal is routed to the pin
 640:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method with shield electrode is enabled).
 641:Generated_Source\PSoC4/CapSense_Sensing.c **** *     4. CapSense_SENSOR - The pin is connected to the scanning bus
 642:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSD sensing method is enabled).
 643:Generated_Source\PSoC4/CapSense_Sensing.c **** *     5. CapSense_TX_PIN - The Tx signal is routed to the sensor
 644:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 645:Generated_Source\PSoC4/CapSense_Sensing.c **** *     6. CapSense_RX_PIN - The pin is connected to the scanning bus
 646:Generated_Source\PSoC4/CapSense_Sensing.c **** *        (available only if CSX sensing method is enabled).
 647:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 648:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 649:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SetPinState(uint32 widgetId, uint32 sensorElement, uint32 state)
 650:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 651:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 652:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdIndex;
 653:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8  interruptState;
 654:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr;
 655:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 656:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
 657:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 658:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 13


 659:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Getting sensor element pointer and number of electrodes */
 660:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_GANGED_SNS_EN)
 661:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check the ganged sns flag */
 662:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[widgetId].staticConfig & CapSen
 663:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 664:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr = CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash;
 665:Generated_Source\PSoC4/CapSense_Sensing.c ****             curFlashSnsPtr += sensorElement;
 666:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId];
 667:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = curFlashSnsPtr->numPins;
 668:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 669:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 670:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 671:Generated_Source\PSoC4/CapSense_Sensing.c ****             ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsF
 672:Generated_Source\PSoC4/CapSense_Sensing.c ****             eltdNum = 1u;
 673:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 674:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr = (CapSense_FLASH_IO_STRUCT const *)CapSense_dsFlash.wdgtArray[widgetId].ptr2SnsFlash
 676:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
 677:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif
 678:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 679:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes of the specified sensor element */
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (eltdIndex = 0u; eltdIndex < eltdNum; eltdIndex++)
 681:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 682:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Reset HSIOM and PC registers */
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****         interruptState = CyEnterCriticalSection();
 684:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 686:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 687:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (state)
 689:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 690:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_GROUND:
 691:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 693:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 696:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 698:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_HIGHZ:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             interruptState = CyEnterCriticalSection();
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 702:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 703:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 704:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
 705:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSOR:
 706:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Enable sensor */
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSDConnectSns(ioPtr);
 708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 709:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 710:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_SHIELD_EN)
 711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 case CapSense_SHIELD:
 712:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set appropriate bit in HSIOM register to configure pin to shield mode */
 713:Generated_Source\PSoC4/CapSense_Sensing.c ****                     interruptState = CyEnterCriticalSection();
 714:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_S
 715:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CyExitCriticalSection(interruptState);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 14


 716:Generated_Source\PSoC4/CapSense_Sensing.c ****                     break;
 717:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) */
 718:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 719:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 720:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) || \
 721:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_ISX_EN))
 722:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_TX_PIN:
 723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 724:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_C
 725:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_GPIO_STRGDRV << i
 726:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 727:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 728:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 729:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_RX_PIN:
 730:Generated_Source\PSoC4/CapSense_Sensing.c ****                 interruptState = CyEnterCriticalSection();
 731:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) | (CapSense_HSIOM_SEL_A
 732:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << 
 733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CyExitCriticalSection(interruptState);
 734:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 735:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 737:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
 738:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wrong state */
 739:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 740:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 741:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
 743:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 745:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 746:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
 747:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 748:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDDisableMode
 749:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 750:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 751:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 752:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSD mode.
 753:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 754:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 755:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSD mode the following tasks are performed:
 756:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect Cmod from AMUXBUS-A.
 757:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 758:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. Disconnect Csh from AMUXBUS-B.
 759:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  4. Disable Shield Electrodes.
 760:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 761:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 762:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsCSDDisableMode(void)
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 764:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 765:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 766:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Cmod from AMUXBUS-A using HSIOM registers */
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CMOD_HSIOM_PTR);
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 769:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 770:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 771:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSDV2) && \
 772:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 15


 773:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN)))
 774:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Disconnect IDACA and IDACB */
 775:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_SW_REFGEN_SEL_PTR);
 776:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~CapSense_SW_REFGEN_SEL_SW_IAIB_MASK);
 777:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_SW_REFGEN_SEL_PTR, newRegValue);
 778:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSDV2) && \
 779:Generated_Source\PSoC4/CapSense_Sensing.c ****                    ((CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) && \
 780:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_DEDICATED_IDAC_COMP_EN))) */
 781:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 782:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSD electrode if it has been connected */
 783:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_SsCSDElectrodeCheck();
 784:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 785:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect Csh from AMUXBUS-B */
 786:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 787:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN))
 788:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue = CY_GET_REG32(CapSense_CSH_HSIOM_PTR);
 789:Generated_Source\PSoC4/CapSense_Sensing.c ****             newRegValue &= (uint32)(~(uint32)(CapSense_CSH_TO_AMUXBUS_B_MASK << CapSense_CSH_HSIOM_
 790:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_CSH_HSIOM_PTR, newRegValue);
 791:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 792:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (CapSense_ENABLE == CapSense_CSD_SHIELD_TANK_EN)) */
 793:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 794:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 795:Generated_Source\PSoC4/CapSense_Sensing.c ****              (0u != CapSense_CSD_TOTAL_SHIELD_COUNT))
 796:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableShieldElectrodes();
 797:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_SHIELD_EN) && \
 798:Generated_Source\PSoC4/CapSense_Sensing.c ****                    (0u != CapSense_CSD_TOTAL_SHIELD_COUNT)) */
 799:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 800:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 801:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 802:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 803:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSX_EN)
 804:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 805:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableCSXMode
 806:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 807:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 808:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 809:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables CSX mode.
 810:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 811:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 812:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable CSX mode the following tasks are performed:
 813:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A.
 814:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous CSX electrode if it has been connected.
 815:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 816:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 817:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableCSXMode(void)
 818:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 819:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 820:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 821:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers */
 822:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 823:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 824:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 825:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 826:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers */
 827:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 828:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 829:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 16


 830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 831:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous CSX electrode if it has been connected */
 832:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_CSXElectrodeCheck();
 833:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 834:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 835:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 836:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ISX_EN)
 837:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
 838:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsDisableISXMode
 839:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
 840:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 841:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
 842:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function disables ISX mode.
 843:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 844:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
 845:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  To disable ISX mode the following tasks are performed:
 846:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Disconnect CintA and CintB from AMUXBUS-A
 847:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Disconnect previous ISX electrode if it has been connected
 848:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
 849:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
 850:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsDisableISXMode(void)
 851:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 852:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 853:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 854:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintA from AMUXBUS-A using HSIOM registers.   */
 855:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintA_HSIOM_PTR);
 856:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintA_HSIOM_MASK);
 857:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintA_HSIOM_PTR, newRegValue);
 858:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 859:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect CintB from AMUXBUS-A using HSIOM registers.   */
 860:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_CintB_HSIOM_PTR);
 861:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CintB_HSIOM_MASK);
 862:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CintB_HSIOM_PTR, newRegValue);
 863:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 864:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Disconnect previous ISX electrode if it has been connected */
 865:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXElectrodeCheck();
 866:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_DigPrt2_Stop();
 867:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_USES_PORT_3)
 868:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DigPrt3_Stop();
 869:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* CapSense_USES_PORT_3 */
 870:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 871:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 872:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 873:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 874:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSwitchSensingMode
 875:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 876:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 877:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 878:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function changes the mode for case when both CSD and CSX widgets are
 879:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanned.
 880:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 881:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 882:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSD mode the following tasks are performed:
 883:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect CintA and CintB from AMUXBUS-A.
 884:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSD electrode if it has been connected.
 885:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSD mode.
 886:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 17


 887:Generated_Source\PSoC4/CapSense_Sensing.c **** *  To switch to the CSX mode the following tasks are performed:
 888:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Disconnect Cmod from AMUXBUS-A.
 889:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnect previous CSX electrode if it has been connected.
 890:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Initialize CSX mode.
 891:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 892:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param mode
 893:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Specifies the scan mode:
 894:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSD_E
 895:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_CSX_E
 896:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_ISX_E
 897:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_SENSE_METHOD_BIST_E
 898:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - CapSense_UNDEFINED_E
 899:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 900:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
 901:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSwitchSensingMode(CapSense_SENSE_METHOD_ENUM mode)
 902:Generated_Source\PSoC4/CapSense_Sensing.c **** {
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 904:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 905:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* The requested mode differes to the current one. Disable the current mode */
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == CapSense_currentSenseMethod)
 907:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 908:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDDisableMode();
 910:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 911:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == CapSense_currentSenseMethod)
 913:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 914:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableCSXMode();
 916:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 917:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == CapSense_currentSenseMethod)
 919:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 920:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 921:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsDisableISXMode();
 922:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 923:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == CapSense_currentSenseMethod)
 925:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 926:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 927:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistDisableMode();
 928:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 929:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 930:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 931:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 932:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ADC_EN)
 933:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Release ADC resources */
 934:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_AdcReleaseResources();
 935:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
 936:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 937:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 938:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Enable the specified mode */
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****         if (CapSense_SENSE_METHOD_CSD_E == mode)
 940:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 941:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_EN)
 942:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSD mode to guarantee configured CSD mode */
 943:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsCSDInitialize();
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 18


 944:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 945:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 946:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_CSX_E == mode)
 948:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 949:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSX_EN)
 950:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize CSX mode to guarantee configured CSX mode */
 951:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXInitialize();
 952:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSX_E;
 953:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
 954:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_ISX_E == mode)
 956:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 957:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_ISX_EN)
 958:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Initialize ISX mode to guarantee configured ISX mode */
 959:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXInitialize();
 960:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_ISX_E;
 961:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
 962:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         else if (CapSense_SENSE_METHOD_BIST_E == mode)
 964:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 965:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
 966:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_BistInitialize();
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 968:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 969:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 970:Generated_Source\PSoC4/CapSense_Sensing.c ****         else
 971:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
 973:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 974:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 975:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 976:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 977:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 978:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
 979:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetIOsInDefaultState
 980:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
 981:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 982:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
 983:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all electrodes into a default state.
 984:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 985:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
 986:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the CSD/CSX IOs into a default state:
 987:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 988:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - Strong drive.
 989:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 990:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 991:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets all the ADC channels into a default state:
 992:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - HSIOM   - Disconnected, the GPIO mode.
 993:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - DM      - HiZ-Analog.
 994:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - State   - Zero.
 995:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 996:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly from the application
 997:Generated_Source\PSoC4/CapSense_Sensing.c **** *  layer.
 998:Generated_Source\PSoC4/CapSense_Sensing.c **** *
 999:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1000:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetIOsInDefaultState(void)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 19


1001:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
1003:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
1004:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 regValue;
1005:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1006:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Loop through all electrodes */
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (loopIndex = 0u; loopIndex < CapSense_TOTAL_ELECTRODES; loopIndex++)
1008:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1009:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1010:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 1. Disconnect HSIOM.
1011:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 2. Set strong DM.
1012:Generated_Source\PSoC4/CapSense_Sensing.c ****         * 3. Set pin state to logic 0.
1013:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->hsiomPtr);
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
1016:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
1017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->pcPtr);
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
1021:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
1022:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue = CY_GET_REG32 (ioPtr->drPtr);
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
1025:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
1026:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1027:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get next electrode */
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****         ioPtr++;
1029:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1030:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1031:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ADC_EN)
1032:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ClearAdcChannels();
1033:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1034:Generated_Source\PSoC4/CapSense_Sensing.c ****     
1035:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if(CapSense_ENABLE == CapSense_ISX_EN)
1036:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_ISXSetDefaultDigital();
1037:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1038:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1039:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1040:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_ADC_EN)
1041:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1042:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsReleaseResources()
1043:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1044:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1045:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1046:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This function sets the resources that do not belong to the sensing HW block to
1047:Generated_Source\PSoC4/CapSense_Sensing.c **** *  default state.
1048:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1049:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1050:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The function performs following tasks:
1051:Generated_Source\PSoC4/CapSense_Sensing.c **** *  1. Checks if CSD block busy and returns error if it is busy
1052:Generated_Source\PSoC4/CapSense_Sensing.c **** *  2. Disconnects integration capacitors (CintA, CintB for CSX mode and
1053:Generated_Source\PSoC4/CapSense_Sensing.c **** *     Cmod for CSD mode)
1054:Generated_Source\PSoC4/CapSense_Sensing.c **** *  3. Disconnect electroded if they have been connected.
1055:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1056:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
1057:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the status of the operation:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 20


1058:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Zero        - Resources released successfully.
1059:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - Non-zero    - One or more errors occurred in releasing process.
1060:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1061:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1062:Generated_Source\PSoC4/CapSense_Sensing.c **** cystatus CapSense_SsReleaseResources(void)
1063:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1064:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus busyStatus = CYRET_SUCCESS;
1065:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1066:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_SW_STS_BUSY == (CapSense_dsRam.status & CapSense_SW_STS_BUSY))
1067:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1068:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Previous widget is being scanned. Return error. */
1069:Generated_Source\PSoC4/CapSense_Sensing.c ****         busyStatus = CYRET_INVALID_STATE;
1070:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1071:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
1072:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1073:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN)
1074:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableCSXMode();
1075:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1076:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1077:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_ISX_EN)
1078:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsDisableISXMode();
1079:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_ISX_EN) */
1080:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1081:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
1082:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDDisableMode();
1083:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
1084:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1085:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1086:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_BistDisableMode();
1087:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1088:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1089:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSD_EN) && \
1090:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_ENABLE == CapSense_CSD_SHIELD_EN) &&  \
1091:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION))
1092:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsSetIOsInDefaultState();
1093:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) && \
1094:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE != CapSense_CSD_SHIELD_EN) &&  \
1095:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_SNS_CONNECTION_SHIELD == CapSense_CSD_INACTIVE_SNS_CONNECTION)) */
1096:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1097:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1098:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Reset of the currentSenseMethod variable to make sure that the next
1099:Generated_Source\PSoC4/CapSense_Sensing.c ****          * call of SetupWidget() API setups the correct widget mode
1100:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1101:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_currentSenseMethod = CapSense_UNDEFINED_E;
1102:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1103:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1104:Generated_Source\PSoC4/CapSense_Sensing.c ****     return busyStatus;
1105:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1106:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_ADC_EN) */
1107:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1108:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1109:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1110:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsPostAllWidgetsScan
1111:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1112:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1113:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1114:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The ISR function for multiple widget scanning implementation.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 21


1115:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1116:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1117:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is the function used by the CapSense ISR to implement multiple widget
1118:Generated_Source\PSoC4/CapSense_Sensing.c **** *  scanning.
1119:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Should not be used by the application layer.
1120:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1121:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1122:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsPostAllWidgetsScan(void)
1123:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1124:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1125:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  1. Increment widget index
1126:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  2. Check if all the widgets are scanned
1127:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  3. If all the widgets are not scanned, set up and scan next widget
1128:Generated_Source\PSoC4/CapSense_Sensing.c ****     */
1129:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (1u != CapSense_TOTAL_WIDGETS)
1130:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus postScanStatus;
1131:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1132:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1133:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1134:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_widgetIndex++;
1135:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1136:Generated_Source\PSoC4/CapSense_Sensing.c ****             postScanStatus = CapSense_SetupWidget((uint32)CapSense_widgetIndex);
1137:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS == postScanStatus)
1139:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1141:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1142:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* The last widget will be scanned. Reset flag to skip configuring the next wid
1143:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_requestScanAllWidget = CapSense_DISABLE;
1144:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_Scan();
1146:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if((CapSense_TOTAL_WIDGETS - 1u) == CapSense_widgetIndex)
1148:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1149:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1150:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (CapSense_ENABLE == CapSense_CSD_EN))
1151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1152:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]
1153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1154:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable the CSD block */
1155:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CY_SET_REG32(CapSense_CONFIG_PTR, CapSense_configCsd);
1156:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1157:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* ((CapSense_ENABLE == CapSense_BLOCK_OFF_AFTER_SCAN_EN) && \
1158:Generated_Source\PSoC4/CapSense_Sensing.c ****                            (CapSense_ENABLE == CapSense_CSD_EN)) */
1159:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1160:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update scan Counter */
1161:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.scanCounter++;
1162:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
1163:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_SW_STS_BUSY;
1164:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1165:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure */
1166:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1167:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1168:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1169:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set postScanStatus to exit the while loop */
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****                 postScanStatus = CYRET_SUCCESS;
1171:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 22


1172:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1173:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1174:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Update status with with the failure. Configure the next widget in while() loop *
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status &= ~CapSense_STATUS_ERR_MASK;
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
1177:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (CYRET_SUCCESS != postScanStatus);
1179:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
1180:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1181:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1182:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1183:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1184:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsIsrInitialize
1185:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1186:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1187:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1188:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Enables and initializes for the function pointer for a callback for the ISR.
1189:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1190:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1191:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The "address" is a special type cyisraddress defined by Cylib. This function
1192:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is used by Component APIs and should not be used by an application program for
1193:Generated_Source\PSoC4/CapSense_Sensing.c **** *  proper working of the Component.
1194:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1195:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param address
1196:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The address of the function to be called when interrupt is fired.
1197:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1198:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1199:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsIsrInitialize(cyisraddress address)
1200:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1201:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1203:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1204:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1205:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1206:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetModClkClockDivider
1207:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1208:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1209:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1210:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the modulator clock and then starts
1211:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1212:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1213:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1214:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1215:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1216:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1217:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1218:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param modClk
1219:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The divider value for the modulator clock.
1220:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1221:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1222:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetModClkClockDivider(uint32 modClk)
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1224:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1225:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Stop modulator clock */
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1227:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
1228:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CapSense_MODCLK_CMD_DIV_SHIFT)|
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 23


1229:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_MODCLK_CMD_DISABLE_MASK));
1230:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1231:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1232:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense modClk.
1233:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value 0 corresponds
1234:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1235:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1236:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, ((modClk - 1u) << 8u));
1237:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1238:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Check whether previous modulator clock start command has finished. */
1239:Generated_Source\PSoC4/CapSense_Sensing.c ****     while(0u != (CY_GET_REG32(CapSense_MODCLK_CMD_PTR) & CapSense_MODCLK_CMD_ENABLE_MASK))
1240:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1241:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Wait until previous modulator clock start command has finished */
1242:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1243:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1244:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Start modulator clock, aligned to HFCLK */
1245:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1246:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
1247:Generated_Source\PSoC4/CapSense_Sensing.c ****                   ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_MODCLK_CMD_PA_DIV_SHIFT) |
1248:Generated_Source\PSoC4/CapSense_Sensing.c ****                   CapSense_MODCLK_CMD_ENABLE_MASK));
1249:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1250:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1252:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Clear bit to disable ModClk clock. */
1253:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1254:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) &
1255:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(~CapSense_ModClk__ENABLE_MASK));
1256:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1257:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1258:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Update ModClk clock divider.
1259:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from modClk because Divider register value has range (0-65535).
1260:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1261:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_MODCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_ModClk__DIVIDE
1262:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= (modClk - 1u);
1263:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_DIV_PTR, newRegValue);
1264:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1265:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Set bit to enable ModClk clock. */
1266:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_MODCLK_CMD_PTR,
1267:Generated_Source\PSoC4/CapSense_Sensing.c ****                  CY_GET_REG32(CapSense_MODCLK_CMD_PTR) |
1268:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ModClk__ENABLE_MASK);
1269:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1270:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1271:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1272:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1273:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1274:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetSnsClockDivider
1275:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1276:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1277:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1278:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for the sense clock and then starts
1279:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the sense clock.
1280:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1281:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1282:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1283:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1284:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1285:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 24


1286:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1287:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1288:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1289:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1290:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetSnsClockDivider(uint32 snsClk)
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1292:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
1293:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 newRegValue;
1294:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1295:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
1296:Generated_Source\PSoC4/CapSense_Sensing.c ****      * Set divider value for sense clock.
1297:Generated_Source\PSoC4/CapSense_Sensing.c ****      * 1u is subtracted from snsClk because SENSE_DIV value 0 corresponds
1298:Generated_Source\PSoC4/CapSense_Sensing.c ****      * to dividing by 1.
1299:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
1300:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue = CY_GET_REG32(CapSense_SENSE_PERIOD_PTR);
1301:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue &= (uint32)(~CapSense_SENSE_PERIOD_SENSE_DIV_MASK);
1302:Generated_Source\PSoC4/CapSense_Sensing.c ****     newRegValue |= snsClk - 1u;
1303:Generated_Source\PSoC4/CapSense_Sensing.c ****     CY_SET_REG32(CapSense_SENSE_PERIOD_PTR, newRegValue);
1304:Generated_Source\PSoC4/CapSense_Sensing.c **** #else
1305:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1306:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Stop sense clock clock   */
1307:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1308:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
1309:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CapSense_SNSCLK_CMD_DIV_SHIFT)|
1310:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SNSCLK_CMD_DISABLE_MASK));
1311:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1312:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1313:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Set divider value for sense clock.
1314:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value 0 corresponds
1315:Generated_Source\PSoC4/CapSense_Sensing.c ****          * to dividing by 1.
1316:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1317:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, ((snsClk - 1u) << 8u));
1318:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1319:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Check whether previous sense clock start command has finished. */
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(0u != (CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) & CapSense_SNSCLK_CMD_ENABLE_MASK))
1321:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1322:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Wait until previous sense clock start command has finished. */
1323:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1324:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1325:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Start sense clock aligned to previously started modulator clock. */
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1327:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
1328:Generated_Source\PSoC4/CapSense_Sensing.c ****                       ((uint32)CapSense_ModClk__PA_DIV_ID << CapSense_SNSCLK_CMD_PA_DIV_SHIFT) |
1329:Generated_Source\PSoC4/CapSense_Sensing.c ****                       CapSense_SNSCLK_CMD_ENABLE_MASK));
1330:Generated_Source\PSoC4/CapSense_Sensing.c ****     #else
1331:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
1332:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1333:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Clear bit to disable SnsClk clock. */
1334:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1335:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) &
1336:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(~(uint32)CapSense_SnsClk__ENABLE_MASK));
1337:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1338:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1339:Generated_Source\PSoC4/CapSense_Sensing.c ****          * Update snsClk clock divider.
1340:Generated_Source\PSoC4/CapSense_Sensing.c ****          * 1u is subtracted from snsClk because Divider register value has range (0-65535).
1341:Generated_Source\PSoC4/CapSense_Sensing.c ****          */
1342:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue = CY_GET_REG32(CapSense_SNSCLK_DIV_PTR) & (uint32)(~(uint32)CapSense_SnsClk__DI
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 25


1343:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue |= (snsClk - 1u);
1344:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_DIV_PTR, newRegValue);
1345:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1346:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Set bit to enable SnsClk clock. */
1347:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_SNSCLK_CMD_PTR,
1348:Generated_Source\PSoC4/CapSense_Sensing.c ****                      CY_GET_REG32(CapSense_SNSCLK_CMD_PTR) |
1349:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_SnsClk__ENABLE_MASK);
1350:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) */
1351:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1352:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1353:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1354:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1355:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
1356:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsSetClockDividers
1357:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
1358:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1359:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
1360:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets the divider values for sense and modulator clocks and then starts
1361:Generated_Source\PSoC4/CapSense_Sensing.c **** *  a modulator clock-phase aligned to HFCLK and sense clock-phase aligned to
1362:Generated_Source\PSoC4/CapSense_Sensing.c **** *  the modulator clock.
1363:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1364:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
1365:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is not recommended to call this function directly by the application layer.
1366:Generated_Source\PSoC4/CapSense_Sensing.c **** *  It is used by initialization, widget APIs or wakeup functions to
1367:Generated_Source\PSoC4/CapSense_Sensing.c **** *  enable the clocks.
1368:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1369:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
1370:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClk The divider value for the sense clock.
1371:Generated_Source\PSoC4/CapSense_Sensing.c **** *  modClk The divider value for the modulator clock.
1372:Generated_Source\PSoC4/CapSense_Sensing.c **** *
1373:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
1374:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsSetClockDividers(uint32 snsClk, uint32 modClk)
1375:Generated_Source\PSoC4/CapSense_Sensing.c **** {
1376:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
1377:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetModClkClockDivider(modClk);
1378:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1379:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Sns clock */
1380:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_SsSetSnsClockDivider(snsClk);
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** }
1382:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1383:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1384:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ANYMODE_AUTOCAL)
1385:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1386:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateWidget
1387:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1388:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1389:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1390:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the sensors in the specified widget to the default
1391:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the
1392:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget prior to calibration.
1393:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1394:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1395:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function performs exactly the same tasks as
1396:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_CalibrateAllWidgets, but only for a specified widget.
1397:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function detects the sensing method used by the widgets and uses
1398:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the Enable compensation IDAC parameter. 
1399:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 26


1400:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1401:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1402:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1403:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_C_LOW_LEVEL
1404:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1405:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1406:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1407:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1408:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable auto-calibration parameter
1409:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1410:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1411:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1412:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
1413:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID number of the widget to calibrate its raw count.
1414:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  A macro for the widget ID can be found in the
1415:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense Configuration header file defined as
1416:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  CapSense_<WidgetName>_WDGT_ID.
1417:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1418:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1419:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the specified widget calibration:
1420:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1421:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_PARAM - The input parameter is invalid.
1422:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1423:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1424:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1425:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1426:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateWidget(uint32 widgetId)
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1428:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1429:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1430:Generated_Source\PSoC4/CapSense_Sensing.c ****         do
1431:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1432:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_TOTAL_WIDGETS <= widgetId)
1433:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1434:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_BAD_PARAM;
1435:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1436:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1437:Generated_Source\PSoC4/CapSense_Sensing.c ****             /*
1438:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  Check if widget id is valid, specified widget did not
1439:Generated_Source\PSoC4/CapSense_Sensing.c ****              *  detect any faults conditions if BIST is enabled.
1440:Generated_Source\PSoC4/CapSense_Sensing.c ****              */
1441:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_SELF_TEST_EN)
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (0u != CapSense_GET_WIDGET_EN_STATUS(widgetId))
1443:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_SUCCESS;
1445:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1446:Generated_Source\PSoC4/CapSense_Sensing.c ****                 else
1447:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                     calibrateStatus = CYRET_INVALID_STATE;
1449:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1450:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif  /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
1451:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CYRET_SUCCESS != calibrateStatus)
1453:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1454:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Exit from the loop because of a fail */
1455:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
1456:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 27


1457:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1458:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1459:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1460:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Check widget sensing method and call appropriate APIs */
1461:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN)
1462:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSX_E ==
1463:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1464:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1465:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSX widget */
1466:Generated_Source\PSoC4/CapSense_Sensing.c ****                        CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1467:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1468:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSX_IDAC_AUTOCAL_EN) */
1469:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1470:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN)
1471:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if (CapSense_SENSE_METHOD_CSD_E ==
1472:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[widgetId]))
1473:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1474:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calibrate CSD widget */
1475:Generated_Source\PSoC4/CapSense_Sensing.c ****                         calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOU
1476:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1477:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif  /* (CapSense_ENABLE == CapSense_CSD_IDAC_AUTOCAL_EN) */
1478:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1479:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSD is enabled, calibrate CSD sensor */
1480:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSD_EN)
1481:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CapSense_CSDCalibrateWidget(widgetId, CapSense_CSD_RAWCOUNT_CAL_L
1482:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1483:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only CSX is enabled, call CSX scan */
1484:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_CSX_EN)
1485:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_CSXCalibrateWidget(widgetId, CapSense_CSX_RAWCOUNT_CAL_LEVEL);
1486:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1487:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* If only ISX is enabled, call ISX scan */
1488:Generated_Source\PSoC4/CapSense_Sensing.c ****             #elif (CapSense_ENABLE == CapSense_ISX_EN)
1489:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_ISXCalibrateWidget(widgetId, CapSense_ISX_RAWCOUNT_CAL_LEVEL);
1490:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1491:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
1492:Generated_Source\PSoC4/CapSense_Sensing.c ****                 calibrateStatus = CYRET_UNKNOWN;
1493:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
1494:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1495:Generated_Source\PSoC4/CapSense_Sensing.c ****              /* Update CRC */
1496:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN)
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_DsUpdateWidgetCrc(widgetId);
1498:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN) */
1499:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1500:Generated_Source\PSoC4/CapSense_Sensing.c ****         } while (0u);
1501:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1502:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1503:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1504:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1505:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1506:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1507:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_CalibrateAllWidgets
1508:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1509:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1510:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1511:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1512:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target, this function detects the sensing method used by the widgets
1513:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  prior to calibration.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 28


1514:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1515:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1516:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Calibrates the IDACs for all the widgets in the Component to the default
1517:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  target value. This function detects the sensing method used by the widgets
1518:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and regards the Enable compensation IDAC parameter.
1519:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1520:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  For ISX mode, the frequency is also calibrated.
1521:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1522:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1523:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \cond SECTION_C_LOW_LEVEL
1524:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the CSD and/or CSX Enable IDAC
1525:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  auto-calibration parameter is enabled.
1526:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endcond
1527:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \if SECTION_I_REP
1528:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function is available when the ISX Enable Auto-calibration parameter
1529:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  is enabled.
1530:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  \endif
1531:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1532:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1533:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the calibration process:
1534:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_SUCCESS - The operation is successfully completed.
1535:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - CYRET_BAD_DATA - The calibration failed and the Component may not
1536:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    operate as expected.
1537:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1538:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1539:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_CalibrateAllWidgets(void)
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
1542:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1543:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1545:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****             calibrateStatus |= CapSense_CalibrateWidget(wdgtIndex);
1547:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1549:Generated_Source\PSoC4/CapSense_Sensing.c ****         return calibrateStatus;
1550:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1551:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
1552:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1553:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1554:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)
1555:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1556:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsAutoTune
1557:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1559:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the parameters auto-tuning for the optimal CapSense operation.
1561:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1562:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This API performs the following:
1564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calibrates Modulator and Compensation IDACs.
1565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Tunes the Sense Clock optimal value to get a Sense Clock period greater than
1566:Generated_Source\PSoC4/CapSense_Sensing.c ****     *    2*5*R*Cp.
1567:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Calculates the resolution for the optimal finger capacitance.
1568:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1569:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
1570:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the status of the operation:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 29


1571:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Zero     - All the widgets are auto-tuned successfully.
1572:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  - Non-zero - Auto-tuning failed for any widget.
1573:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1574:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1575:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus CapSense_SsAutoTune(void)
1576:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1577:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus autoTuneStatus = CYRET_SUCCESS;
1578:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
1579:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1580:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cp = 0uL;
1581:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1582:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 cpRow = 0uL;
1583:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1584:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1585:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 cpWidget[CapSense_TOTAL_WIDGETS];
1586:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
1587:Generated_Source\PSoC4/CapSense_Sensing.c ****         AUTO_TUNE_CONFIG_TYPE autoTuneConfig;
1588:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1589:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Configure common config variables */
1590:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.snsClkConstantR = CapSense_CSD_SNSCLK_R_CONST;
1591:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.vRef = CapSense_CSD_VREF_MV;
1592:Generated_Source\PSoC4/CapSense_Sensing.c ****         autoTuneConfig.iDacGain = CapSense_CSD_IDAC_GAIN_VALUE_NA;
1593:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1594:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate snsClk Input Clock in KHz */
1595:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSDV2)
1596:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (Fourth-generation HW block). Flip flop is not available */
1597:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk);
1598:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif ((CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK) && (CapSense_DISABLE == CY_PSOC4_400
1599:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained */
1600:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1601:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1602:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are not chained (PSoC 4000) */
1603:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = CYDEV_BCLK__HFCLK__KHZ >> CapSense_FLIP_FLOP_DIV;
1604:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1605:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Dividers are chained (PSoC 4100, PSoC 4200) */
1606:Generated_Source\PSoC4/CapSense_Sensing.c ****             autoTuneConfig.snsClkInputClock = (CYDEV_BCLK__HFCLK__KHZ / CapSense_dsRam.modCsdClk) >
1607:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
1608:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1609:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* If both CSD and CSX are enabled, calibrate widget using sensing method */
1610:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_CSX_EN)
1611:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Initialize CSD mode */
1612:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsCSDInitialize();
1613:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_CSX_EN) */
1614:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1615:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1616:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #1:
1617:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - performing the first calibration at fixed settings
1618:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sensor Cp
1619:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting sense clock frequency based on Cp
1620:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1621:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1622:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sense clock for all the widgets */
1623:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1624:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1625:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1626:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1627:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 30


1628:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1629:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1630:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1631:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set calibration resolution to 12 bits */
1632:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = CapSense_CALIBRATION_RESOLUTION;
1633:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1634:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set clock source direct and sense clock frequency to 1.5 MHz */
1635:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1636:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->snsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / CapSense_CALIB
1637:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1638:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1639:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1640:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1641:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClkSource = (uint8)CapSense_CLK_SOURCE_DIRECT;
1642:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ptrWdgt->rowSnsClk = (uint16)((uint32)autoTuneConfig.snsClkInputClock / Cap
1643:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1644:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
1645:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1646:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1647:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_LEVEL);
1648:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1649:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1650:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1651:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1652:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1653:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get pointer to Sense Clock Divider for columns */
1654:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1656:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get IDAC */
1657:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1658:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1659:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Calculate achived calibration level */
1660:Generated_Source\PSoC4/CapSense_Sensing.c ****                         autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcountRow
1661:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1662:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1663:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Find correct sense clock value */
1664:Generated_Source\PSoC4/CapSense_Sensing.c ****                         cpRow = SmartSense_TunePrescalers(&autoTuneConfig);
1665:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1666:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cpRow)
1667:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1668:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneStatus = CYRET_BAD_DATA;
1669:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1670:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1671:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
1672:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequ
1673:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * than maximum supported Sense Clock Frequency.
1674:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
1675:Generated_Source\PSoC4/CapSense_Sensing.c ****                         while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk
1676:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1677:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1678:Generated_Source\PSoC4/CapSense_Sensing.c ****                             ptrWdgt->snsClk <<= 1u;
1679:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1680:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1681:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #if (CapSense_ENABLE != CapSense_CSDV2)
1682:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1683:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Make sure that ModClk >= 2 * rowSnsClk */
1684:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->rowSnsClk << CapS
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 31


1685:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 {
1686:Generated_Source\PSoC4/CapSense_Sensing.c ****                                      ptrWdgt->rowSnsClk = CapSense_dsRam.modCsdClk;
1687:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 }
1688:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #else
1689:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Sense clock never equals to Modulator clock for chained dividers
1690:Generated_Source\PSoC4/CapSense_Sensing.c ****                             #endif
1691:Generated_Source\PSoC4/CapSense_Sensing.c ****                         #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1692:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1693:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1694:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1695:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider for columns */
1696:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1697:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1698:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1699:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1700:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1701:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calculate achived calibration level */
1702:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.calTarget = (uint16)(((uint32)CapSense_calibratedRawcount * CapSense
1703:Generated_Source\PSoC4/CapSense_Sensing.c ****                         ((uint32)(0x01uL << CapSense_CALIBRATION_RESOLUTION) - 1u));
1704:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1705:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find correct sense clock value */
1706:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cp = SmartSense_TunePrescalers(&autoTuneConfig);
1707:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1708:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if ((CapSense_CP_MAX + CapSense_CP_ERROR) <= cp)
1709:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1710:Generated_Source\PSoC4/CapSense_Sensing.c ****                     autoTuneStatus = CYRET_BAD_DATA;
1711:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1712:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1713:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
1714:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiply the sense Clock Divider by 2 while the desired Sense Clock Frequency is 
1715:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * than MAX supported Sense Clock Frequency.
1716:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
1717:Generated_Source\PSoC4/CapSense_Sensing.c ****                 while((((uint32)autoTuneConfig.snsClkInputClock) > ((uint32)ptrWdgt->snsClk * CapSe
1718:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_MIN_SNS_CLK_DIVIDER > ptrWdgt->snsClk))
1719:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
1720:Generated_Source\PSoC4/CapSense_Sensing.c ****                     ptrWdgt->snsClk <<= 1u;
1721:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
1722:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1723:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE != CapSense_CSDV2)
1724:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
1725:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Make sure that ModClk >= 2 * snsClk */
1726:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsRam.modCsdClk >= ((uint8)(ptrWdgt->snsClk << CapSense_FLIP_F
1727:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1728:Generated_Source\PSoC4/CapSense_Sensing.c ****                              ptrWdgt->snsClk = CapSense_dsRam.modCsdClk;
1729:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1730:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
1731:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Sense clock never equals to Modulator clock for chained dividers because
1732:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif
1733:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE != CapSense_CSDV2) */
1734:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1735:Generated_Source\PSoC4/CapSense_Sensing.c ****                 cpWidget[wdgtIndex] = cp;
1736:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1737:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1738:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1739:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1740:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1741:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (cpRow > cp)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 32


1742:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1743:Generated_Source\PSoC4/CapSense_Sensing.c ****                             cpWidget[wdgtIndex] = cpRow;
1744:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1745:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1746:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1747:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1748:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
1749:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1750:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_EN)
1751:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Non-CSD widget */
1752:Generated_Source\PSoC4/CapSense_Sensing.c ****                     cpWidget[wdgtIndex] = 1u;
1753:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_EN) */
1754:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1755:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1756:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1757:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1758:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #2:
1759:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with new sense clock frequency
1760:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - getting resolution
1761:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1762:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1763:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune resolution for all the widgets */
1764:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1765:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1766:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1767:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1768:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1769:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1770:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1771:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1772:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1773:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1774:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1775:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get pointer to Sense Clock Divider (column or row) */
1776:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.ptrSenseClk = &ptrWdgt->snsClk;
1777:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1778:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set parasitic capacitance for columns */
1779:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1780:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1781:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get IDAC */
1782:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.iDac = CapSense_calibratedIdac;
1783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1784:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
1785:Generated_Source\PSoC4/CapSense_Sensing.c ****                     if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArra
1786:Generated_Source\PSoC4/CapSense_Sensing.c ****                         (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdg
1787:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1788:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
1789:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Set the minimum sense clock frequency to calculate the resolution */
1790:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (ptrWdgt->snsClk < ptrWdgt->rowSnsClk)
1791:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
1792:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Rewrite pointer to Sense Clock Divider for rows */
1793:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.ptrSenseClk = &ptrWdgt->rowSnsClk;
1794:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1795:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Set parasitic capacitance for rows */
1796:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.sensorCap = cpWidget[wdgtIndex];
1797:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1798:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get IDAC */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 33


1799:Generated_Source\PSoC4/CapSense_Sensing.c ****                             autoTuneConfig.iDac = CapSense_calibratedIdacRow;
1800:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
1801:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
1802:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
1803:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1804:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get finger capacitance */
1805:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.fingerCap = ptrWdgt->fingerCap;
1806:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1807:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Init pointer to sigPFC */
1808:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneConfig.sigPFC = &ptrWdgt->sigPFC;
1809:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1810:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Find resolution */
1811:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->resolution = SmartSense_TuneSensitivity(&autoTuneConfig);
1812:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1813:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1814:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1815:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*
1816:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Autotune phase #3:
1817:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - selecting a widget clock source if AUTO
1818:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - repeating calibration with found clock frequency, resolution and clock source
1819:Generated_Source\PSoC4/CapSense_Sensing.c ****         * - updating sensitivity
1820:Generated_Source\PSoC4/CapSense_Sensing.c ****         */
1821:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1822:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Tune sensitivity for all the widgets */
1823:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
1824:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1825:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
1826:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
1827:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
1828:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
1829:Generated_Source\PSoC4/CapSense_Sensing.c ****                           CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
1830:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1831:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
1832:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1833:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Calibrate CSD widget to the default calibration target */
1834:Generated_Source\PSoC4/CapSense_Sensing.c ****                 autoTuneStatus |= CapSense_CSDCalibrateWidget(wdgtIndex, CapSense_CSD_AUTOTUNE_CAL_
1835:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1836:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
1837:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CapSense_DsUpdateWidgetCrc(wdgtIndex);
1838:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
1839:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
1840:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1841:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1842:Generated_Source\PSoC4/CapSense_Sensing.c ****         return autoTuneStatus;
1843:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1844:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_CSD_SS_DIS != CapSense_CSD_AUTOTUNE)) */
1845:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1846:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1847:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_DISABLE == CapSense_CSDV2)
1848:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1849:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) ||\
1850:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG))
1851:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1852:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSinking
1853:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1854:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1855:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 34


1856:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1857:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sinking CSD Mode
1858:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1859:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1860:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1861:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1862:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1863:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1864:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSinking(void)
1865:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
1866:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1867:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1868:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sinking Mode */
1869:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM2_PTR) & ~CapSense_IDAC_TRIM2_MOD_SNK_MASK;
1870:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1871:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK) ;
1872:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1873:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1874:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Comp iDAC Sinking Mode */
1875:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM2_COMP_SNK_MASK;
1876:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM2_PTR) &
1877:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1878:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1879:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1880:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current sink mode */
1881:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM2_PTR, trimValue);
1882:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
1883:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1884:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)) */
1885:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1886:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1887:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if ( ((CapSense_ENABLE == CapSense_CSX_EN) \
1888:Generated_Source\PSoC4/CapSense_Sensing.c ****         || (CapSense_ENABLE == CapSense_ISX_EN)) || \
1889:Generated_Source\PSoC4/CapSense_Sensing.c ****          (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG))
1890:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
1891:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsTrimIdacsSourcing
1892:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
1893:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1894:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
1895:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function loads trim values from SFLASH rows to calibrate
1896:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  IDAC1 and IDAC2 for Sourcing CSD Mode
1897:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1898:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
1899:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Function reads trim value from SFLASH and loads it into IDAC trim register.
1900:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1901:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
1902:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
1903:Generated_Source\PSoC4/CapSense_Sensing.c ****         static void CapSense_SsTrimIdacsSourcing(void)
1904:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
  27              		.loc 1 1904 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31 0000 30B5     		push	{r4, r5, lr}
  32              		.cfi_def_cfa_offset 12
  33              		.cfi_offset 4, -12
  34              		.cfi_offset 5, -8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 35


  35              		.cfi_offset 14, -4
1905:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 trimValue;
1906:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1907:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Mod iDAC Sourcing Mode */
1908:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue = CY_GET_REG32(CapSense_TRIM1_PTR) & ~CapSense_IDAC_TRIM1_MOD_SRC_MASK;
  36              		.loc 1 1908 0
  37 0002 0848     		ldr	r0, .L2
  38 0004 0368     		ldr	r3, [r0]
  39 0006 0F24     		movs	r4, #15
  40 0008 A343     		bics	r3, r4
  41 000a 1900     		movs	r1, r3
  42              	.LVL0:
1909:Generated_Source\PSoC4/CapSense_Sensing.c ****             trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
  43              		.loc 1 1909 0
  44 000c 064D     		ldr	r5, .L2+4
  45 000e 2B78     		ldrb	r3, [r5]
  46 0010 0F22     		movs	r2, #15
  47 0012 1340     		ands	r3, r2
  48 0014 0B43     		orrs	r3, r1
  49              	.LVL1:
1910:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                       CapSense_SFLASH_TRIM_IDAC_MOD_MASK);
1911:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1912:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN)
1913:Generated_Source\PSoC4/CapSense_Sensing.c ****                  /* Comp iDAC Sourcing Mode */
1914:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue &= ~CapSense_IDAC_TRIM1_COMP_SRC_MASK;
  50              		.loc 1 1914 0
  51 0016 E132     		adds	r2, r2, #225
  52 0018 9343     		bics	r3, r2
  53              	.LVL2:
1915:Generated_Source\PSoC4/CapSense_Sensing.c ****                 trimValue |= ((uint32)CY_GET_REG8(CapSense_SFLASH_TRIM1_PTR) &
  54              		.loc 1 1915 0
  55 001a 2A78     		ldrb	r2, [r5]
  56 001c A243     		bics	r2, r4
  57 001e 1343     		orrs	r3, r2
  58              	.LVL3:
1916:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                           CapSense_SFLASH_TRIM_IDAC_COMP_MASK);
1917:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_IDAC_COMP_EN) */
1918:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1919:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Update IDAC trim bits for gain control in current source mode */
1920:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(CapSense_TRIM1_PTR, trimValue);
  59              		.loc 1 1920 0
  60 0020 0360     		str	r3, [r0]
1921:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
  61              		.loc 1 1921 0
  62              		@ sp needed
  63 0022 30BD     		pop	{r4, r5, pc}
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0024 00FF2840 		.word	1076428544
  68 0028 62F1FF0F 		.word	268431714
  69              		.cfi_endproc
  70              	.LFE18:
  71              		.size	CapSense_SsTrimIdacsSourcing, .-CapSense_SsTrimIdacsSourcing
  72              		.section	.text.CapSense_SsTrimIdacs,"ax",%progbits
  73              		.align	2
  74              		.code	16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 36


  75              		.thumb_func
  76              		.type	CapSense_SsTrimIdacs, %function
  77              	CapSense_SsTrimIdacs:
  78              	.LFB19:
1922:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) || \
1923:Generated_Source\PSoC4/CapSense_Sensing.c ****                (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)) */
1924:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1925:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1926:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1927:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsTrimIdacs
1928:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1929:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1930:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1931:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function loads trim values from SFLASH rows to calibrate
1932:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  IDAC1 and IDAC2 for CSD Mode
1933:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1934:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1935:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If CSX mode is enabled the function loads trim values for both sink and source
1936:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  mode. If CSX mode is disabled the function loads trim values for sink or
1937:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  source mode based on sink/source mode configuration.
1938:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  If Compensation IDAC is disabled the function loads trim values for IDAC1 only.
1939:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1940:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1941:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsTrimIdacs(void)
1942:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
  79              		.loc 1 1942 0
  80              		.cfi_startproc
  81              		@ args = 0, pretend = 0, frame = 0
  82              		@ frame_needed = 0, uses_anonymous_args = 0
  83 0000 10B5     		push	{r4, lr}
  84              		.cfi_def_cfa_offset 8
  85              		.cfi_offset 4, -8
  86              		.cfi_offset 14, -4
1943:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)
1944:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1945:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
1946:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SINKING == CapSense_CSD_IDAC_CONFIG)
1947:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSinking();
1948:Generated_Source\PSoC4/CapSense_Sensing.c ****         #elif (CapSense_IDAC_SOURCING == CapSense_CSD_IDAC_CONFIG)
1949:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_SsTrimIdacsSourcing();
  87              		.loc 1 1949 0
  88 0002 FFF7FEFF 		bl	CapSense_SsTrimIdacsSourcing
  89              	.LVL4:
1950:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
1951:Generated_Source\PSoC4/CapSense_Sensing.c ****             #error "Not supported Mode, Component cannot work in this mode"
1952:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN) */
1953:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
  90              		.loc 1 1953 0
  91              		@ sp needed
  92 0006 10BD     		pop	{r4, pc}
  93              		.cfi_endproc
  94              	.LFE19:
  95              		.size	CapSense_SsTrimIdacs, .-CapSense_SsTrimIdacs
  96              		.section	.text.CapSense_SsCSDDisableMode,"ax",%progbits
  97              		.align	2
  98              		.code	16
  99              		.thumb_func
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 37


 100              		.type	CapSense_SsCSDDisableMode, %function
 101              	CapSense_SsCSDDisableMode:
 102              	.LFB8:
 763:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 newRegValue;
 103              		.loc 1 763 0
 104              		.cfi_startproc
 105              		@ args = 0, pretend = 0, frame = 0
 106              		@ frame_needed = 0, uses_anonymous_args = 0
 107 0000 10B5     		push	{r4, lr}
 108              		.cfi_def_cfa_offset 8
 109              		.cfi_offset 4, -8
 110              		.cfi_offset 14, -4
 767:Generated_Source\PSoC4/CapSense_Sensing.c ****         newRegValue &= (uint32)(~(uint32)CapSense_CMOD_HSIOM_MASK);
 111              		.loc 1 767 0
 112 0002 044A     		ldr	r2, .L6
 113 0004 1368     		ldr	r3, [r2]
 114              	.LVL5:
 768:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CapSense_CMOD_HSIOM_PTR, newRegValue);
 115              		.loc 1 768 0
 116 0006 0F21     		movs	r1, #15
 117 0008 8B43     		bics	r3, r1
 118              	.LVL6:
 769:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 119              		.loc 1 769 0
 120 000a 1360     		str	r3, [r2]
 783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 121              		.loc 1 783 0
 122 000c FFF7FEFF 		bl	CapSense_SsCSDElectrodeCheck
 123              	.LVL7:
 799:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 124              		.loc 1 799 0
 125              		@ sp needed
 126 0010 10BD     		pop	{r4, pc}
 127              	.L7:
 128 0012 C046     		.align	2
 129              	.L6:
 130 0014 00040240 		.word	1073873920
 131              		.cfi_endproc
 132              	.LFE8:
 133              		.size	CapSense_SsCSDDisableMode, .-CapSense_SsCSDDisableMode
 134              		.section	.text.CapSense_IsBusy,"ax",%progbits
 135              		.align	2
 136              		.global	CapSense_IsBusy
 137              		.code	16
 138              		.thumb_func
 139              		.type	CapSense_IsBusy, %function
 140              	CapSense_IsBusy:
 141              	.LFB2:
 234:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (CapSense_dsRam.status & CapSense_SW_STS_BUSY);
 142              		.loc 1 234 0
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 0
 145              		@ frame_needed = 0, uses_anonymous_args = 0
 146              		@ link register save eliminated.
 235:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 147              		.loc 1 235 0
 148 0000 024B     		ldr	r3, .L9
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 38


 149 0002 DB68     		ldr	r3, [r3, #12]
 150 0004 8020     		movs	r0, #128
 151 0006 1840     		ands	r0, r3
 236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 152              		.loc 1 236 0
 153              		@ sp needed
 154 0008 7047     		bx	lr
 155              	.L10:
 156 000a C046     		.align	2
 157              	.L9:
 158 000c 00000000 		.word	CapSense_dsRam
 159              		.cfi_endproc
 160              	.LFE2:
 161              		.size	CapSense_IsBusy, .-CapSense_IsBusy
 162              		.section	.text.CapSense_SetupWidget,"ax",%progbits
 163              		.align	2
 164              		.global	CapSense_SetupWidget
 165              		.code	16
 166              		.thumb_func
 167              		.type	CapSense_SetupWidget, %function
 168              	CapSense_SetupWidget:
 169              	.LFB3:
 286:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus widgetStatus;
 170              		.loc 1 286 0
 171              		.cfi_startproc
 172              		@ args = 0, pretend = 0, frame = 0
 173              		@ frame_needed = 0, uses_anonymous_args = 0
 174              	.LVL8:
 175 0000 10B5     		push	{r4, lr}
 176              		.cfi_def_cfa_offset 8
 177              		.cfi_offset 4, -8
 178              		.cfi_offset 14, -4
 289:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 179              		.loc 1 289 0
 180 0002 114B     		ldr	r3, .L17
 181 0004 DB68     		ldr	r3, [r3, #12]
 182 0006 DB03     		lsls	r3, r3, #15
 183 0008 12D4     		bmi	.L14
 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 184              		.loc 1 299 0
 185 000a 0C28     		cmp	r0, #12
 186 000c 12D8     		bhi	.L15
 300:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 187              		.loc 1 300 0 discriminator 1
 188 000e 1F23     		movs	r3, #31
 189 0010 0340     		ands	r3, r0
 190 0012 0122     		movs	r2, #1
 191 0014 9A40     		lsls	r2, r2, r3
 192 0016 1100     		movs	r1, r2
 193 0018 4209     		lsrs	r2, r0, #5
 194 001a 0B4C     		ldr	r4, .L17
 195 001c 0432     		adds	r2, r2, #4
 196 001e 9300     		lsls	r3, r2, #2
 197 0020 1A59     		ldr	r2, [r3, r4]
 198 0022 0A40     		ands	r2, r1
 199 0024 E318     		adds	r3, r4, r3
 200 0026 5B68     		ldr	r3, [r3, #4]
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 39


 299:Generated_Source\PSoC4/CapSense_Sensing.c ****         (0uL != CapSense_GET_WIDGET_EN_STATUS(widgetId)))
 201              		.loc 1 299 0 discriminator 1
 202 0028 1342     		tst	r3, r2
 203 002a 05D1     		bne	.L16
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 204              		.loc 1 307 0
 205 002c 0124     		movs	r4, #1
 206 002e 04E0     		b	.L12
 207              	.L14:
 292:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 208              		.loc 1 292 0
 209 0030 1124     		movs	r4, #17
 210 0032 02E0     		b	.L12
 211              	.L15:
 307:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 212              		.loc 1 307 0
 213 0034 0124     		movs	r4, #1
 214 0036 00E0     		b	.L12
 215              	.L16:
 303:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 216              		.loc 1 303 0
 217 0038 0024     		movs	r4, #0
 218              	.L12:
 219              	.LVL9:
 314:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 220              		.loc 1 314 0
 221 003a 002C     		cmp	r4, #0
 222 003c 01D1     		bne	.L13
 327:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 223              		.loc 1 327 0
 224 003e FFF7FEFF 		bl	CapSense_CSDSetupWidget
 225              	.LVL10:
 226              	.L13:
 343:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 227              		.loc 1 343 0
 228 0042 2000     		movs	r0, r4
 229              		@ sp needed
 230              	.LVL11:
 231 0044 10BD     		pop	{r4, pc}
 232              	.L18:
 233 0046 C046     		.align	2
 234              	.L17:
 235 0048 00000000 		.word	CapSense_dsRam
 236              		.cfi_endproc
 237              	.LFE3:
 238              		.size	CapSense_SetupWidget, .-CapSense_SetupWidget
 239              		.section	.text.CapSense_Scan,"ax",%progbits
 240              		.align	2
 241              		.global	CapSense_Scan
 242              		.code	16
 243              		.thumb_func
 244              		.type	CapSense_Scan, %function
 245              	CapSense_Scan:
 246              	.LFB4:
 369:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_SUCCESS;
 247              		.loc 1 369 0
 248              		.cfi_startproc
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 40


 249              		@ args = 0, pretend = 0, frame = 0
 250              		@ frame_needed = 0, uses_anonymous_args = 0
 251 0000 10B5     		push	{r4, lr}
 252              		.cfi_def_cfa_offset 8
 253              		.cfi_offset 4, -8
 254              		.cfi_offset 14, -4
 255              	.LVL12:
 372:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 256              		.loc 1 372 0
 257 0002 084B     		ldr	r3, .L25
 258 0004 DB68     		ldr	r3, [r3, #12]
 259 0006 DB03     		lsls	r3, r3, #15
 260 0008 07D4     		bmi	.L22
 379:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 261              		.loc 1 379 0
 262 000a 074B     		ldr	r3, .L25+4
 263 000c 1B78     		ldrb	r3, [r3]
 264 000e 012B     		cmp	r3, #1
 265 0010 05D1     		bne	.L24
 388:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 266              		.loc 1 388 0
 267 0012 FFF7FEFF 		bl	CapSense_CSDScan
 268              	.LVL13:
 370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 269              		.loc 1 370 0
 270 0016 0020     		movs	r0, #0
 389:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
 271              		.loc 1 389 0
 272 0018 03E0     		b	.L20
 273              	.L22:
 375:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 274              		.loc 1 375 0
 275 001a 1120     		movs	r0, #17
 276 001c 01E0     		b	.L20
 277              	.L24:
 397:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 278              		.loc 1 397 0
 279 001e 0120     		movs	r0, #1
 280 0020 4042     		rsbs	r0, r0, #0
 281              	.L20:
 282              	.LVL14:
 402:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 283              		.loc 1 402 0
 284              		@ sp needed
 285 0022 10BD     		pop	{r4, pc}
 286              	.L26:
 287              		.align	2
 288              	.L25:
 289 0024 00000000 		.word	CapSense_dsRam
 290 0028 00000000 		.word	.LANCHOR0
 291              		.cfi_endproc
 292              	.LFE4:
 293              		.size	CapSense_Scan, .-CapSense_Scan
 294              		.section	.text.CapSense_ScanAllWidgets,"ax",%progbits
 295              		.align	2
 296              		.global	CapSense_ScanAllWidgets
 297              		.code	16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 41


 298              		.thumb_func
 299              		.type	CapSense_ScanAllWidgets, %function
 300              	CapSense_ScanAllWidgets:
 301              	.LFB5:
 431:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus scanStatus = CYRET_UNKNOWN;
 302              		.loc 1 431 0
 303              		.cfi_startproc
 304              		@ args = 0, pretend = 0, frame = 0
 305              		@ frame_needed = 0, uses_anonymous_args = 0
 306 0000 10B5     		push	{r4, lr}
 307              		.cfi_def_cfa_offset 8
 308              		.cfi_offset 4, -8
 309              		.cfi_offset 14, -4
 310              	.LVL15:
 436:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 311              		.loc 1 436 0
 312 0002 0F4B     		ldr	r3, .L35
 313 0004 DB68     		ldr	r3, [r3, #12]
 314 0006 1B06     		lsls	r3, r3, #24
 315 0008 18D4     		bmi	.L34
 316 000a 0024     		movs	r4, #0
 317 000c 0120     		movs	r0, #1
 318 000e 4042     		rsbs	r0, r0, #0
 319 0010 11E0     		b	.L29
 320              	.LVL16:
 321              	.L33:
 452:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 322              		.loc 1 452 0
 323 0012 2000     		movs	r0, r4
 324              	.LVL17:
 325 0014 FFF7FEFF 		bl	CapSense_SetupWidget
 326              	.LVL18:
 454:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 327              		.loc 1 454 0
 328 0018 0028     		cmp	r0, #0
 329 001a 0BD1     		bne	.L30
 458:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
 330              		.loc 1 458 0
 331 001c 0B2C     		cmp	r4, #11
 332 001e 03D8     		bhi	.L31
 461:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 333              		.loc 1 461 0
 334 0020 0122     		movs	r2, #1
 335 0022 084B     		ldr	r3, .L35+4
 336 0024 5A70     		strb	r2, [r3, #1]
 337 0026 02E0     		b	.L32
 338              	.L31:
 466:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
 339              		.loc 1 466 0
 340 0028 0022     		movs	r2, #0
 341 002a 064B     		ldr	r3, .L35+4
 342 002c 5A70     		strb	r2, [r3, #1]
 343              	.L32:
 476:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 344              		.loc 1 476 0
 345 002e FFF7FEFF 		bl	CapSense_Scan
 346              	.LVL19:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 42


 478:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 347              		.loc 1 478 0
 348 0032 04E0     		b	.L28
 349              	.L30:
 449:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 350              		.loc 1 449 0
 351 0034 0134     		adds	r4, r4, #1
 352              	.LVL20:
 353              	.L29:
 447:Generated_Source\PSoC4/CapSense_Sensing.c ****              wdgtIndex < CapSense_TOTAL_WIDGETS;
 354              		.loc 1 447 0 discriminator 1
 355 0036 0C2C     		cmp	r4, #12
 356 0038 EBD9     		bls	.L33
 357 003a 00E0     		b	.L28
 358              	.LVL21:
 359              	.L34:
 439:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 360              		.loc 1 439 0
 361 003c 1120     		movs	r0, #17
 362              	.LVL22:
 363              	.L28:
 484:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 364              		.loc 1 484 0
 365              		@ sp needed
 366 003e 10BD     		pop	{r4, pc}
 367              	.L36:
 368              		.align	2
 369              	.L35:
 370 0040 00000000 		.word	CapSense_dsRam
 371 0044 00000000 		.word	.LANCHOR0
 372              		.cfi_endproc
 373              	.LFE5:
 374              		.size	CapSense_ScanAllWidgets, .-CapSense_ScanAllWidgets
 375              		.section	.text.CapSense_SetPinState,"ax",%progbits
 376              		.align	2
 377              		.global	CapSense_SetPinState
 378              		.code	16
 379              		.thumb_func
 380              		.type	CapSense_SetPinState, %function
 381              	CapSense_SetPinState:
 382              	.LFB7:
 650:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 eltdNum;
 383              		.loc 1 650 0
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 0
 386              		@ frame_needed = 0, uses_anonymous_args = 0
 387              	.LVL23:
 388 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 389              		.cfi_def_cfa_offset 24
 390              		.cfi_offset 3, -24
 391              		.cfi_offset 4, -20
 392              		.cfi_offset 5, -16
 393              		.cfi_offset 6, -12
 394              		.cfi_offset 7, -8
 395              		.cfi_offset 14, -4
 396 0002 1600     		movs	r6, r2
 675:Generated_Source\PSoC4/CapSense_Sensing.c ****         eltdNum = 1u;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 43


 397              		.loc 1 675 0
 398 0004 4001     		lsls	r0, r0, #5
 399              	.LVL24:
 400 0006 234B     		ldr	r3, .L44
 401 0008 C458     		ldr	r4, [r0, r3]
 402 000a 4901     		lsls	r1, r1, #5
 403              	.LVL25:
 404 000c 6418     		adds	r4, r4, r1
 405              	.LVL26:
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 406              		.loc 1 680 0
 407 000e 0025     		movs	r5, #0
 408 0010 3CE0     		b	.L38
 409              	.LVL27:
 410              	.L43:
 683:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->hsiomPtr, CY_GET_REG32(ioPtr->hsiomPtr) & ~(CapSense_HSIOM_SEL_MASK << 
 411              		.loc 1 683 0
 412 0012 FFF7FEFF 		bl	CyEnterCriticalSection
 413              	.LVL28:
 684:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) & ~(CapSense_GPIO_PC_MASK << ioPtr->s
 414              		.loc 1 684 0
 415 0016 2168     		ldr	r1, [r4]
 416 0018 0B68     		ldr	r3, [r1]
 417 001a 277F     		ldrb	r7, [r4, #28]
 418 001c 0F22     		movs	r2, #15
 419 001e BA40     		lsls	r2, r2, r7
 420 0020 9343     		bics	r3, r2
 421 0022 0B60     		str	r3, [r1]
 685:Generated_Source\PSoC4/CapSense_Sensing.c ****         CyExitCriticalSection(interruptState);
 422              		.loc 1 685 0
 423 0024 6168     		ldr	r1, [r4, #4]
 424 0026 0B68     		ldr	r3, [r1]
 425 0028 A77F     		ldrb	r7, [r4, #30]
 426 002a 0722     		movs	r2, #7
 427 002c BA40     		lsls	r2, r2, r7
 428 002e 9343     		bics	r3, r2
 429 0030 0B60     		str	r3, [r1]
 686:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 430              		.loc 1 686 0
 431 0032 FFF7FEFF 		bl	CyExitCriticalSection
 432              	.LVL29:
 688:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 433              		.loc 1 688 0
 434 0036 012E     		cmp	r6, #1
 435 0038 17D0     		beq	.L40
 436 003a 002E     		cmp	r6, #0
 437 003c 02D0     		beq	.L41
 438 003e 032E     		cmp	r6, #3
 439 0040 1FD0     		beq	.L42
 440 0042 21E0     		b	.L39
 441              	.L41:
 692:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->pcPtr, CY_GET_REG32(ioPtr->pcPtr) | (CapSense_SNS_GROUND_CONNECT <<
 442              		.loc 1 692 0
 443 0044 FFF7FEFF 		bl	CyEnterCriticalSection
 444              	.LVL30:
 693:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)(~(uint32)((uint32)1u <
 445              		.loc 1 693 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 44


 446 0048 6268     		ldr	r2, [r4, #4]
 447 004a 1168     		ldr	r1, [r2]
 448 004c A77F     		ldrb	r7, [r4, #30]
 449 004e 0623     		movs	r3, #6
 450 0050 BB40     		lsls	r3, r3, r7
 451 0052 0B43     		orrs	r3, r1
 452 0054 1360     		str	r3, [r2]
 694:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 453              		.loc 1 694 0
 454 0056 E168     		ldr	r1, [r4, #12]
 455 0058 0B68     		ldr	r3, [r1]
 456 005a 677F     		ldrb	r7, [r4, #29]
 457 005c 0122     		movs	r2, #1
 458 005e BA40     		lsls	r2, r2, r7
 459 0060 9343     		bics	r3, r2
 460 0062 0B60     		str	r3, [r1]
 695:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 461              		.loc 1 695 0
 462 0064 FFF7FEFF 		bl	CyExitCriticalSection
 463              	.LVL31:
 696:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 464              		.loc 1 696 0
 465 0068 0EE0     		b	.L39
 466              	.L40:
 699:Generated_Source\PSoC4/CapSense_Sensing.c ****             CY_SET_REG32(ioPtr->drPtr, CY_GET_REG32(ioPtr->drPtr) & (uint32)~(uint32)((uint32)1u <<
 467              		.loc 1 699 0
 468 006a FFF7FEFF 		bl	CyEnterCriticalSection
 469              	.LVL32:
 700:Generated_Source\PSoC4/CapSense_Sensing.c ****             CyExitCriticalSection(interruptState);
 470              		.loc 1 700 0
 471 006e E168     		ldr	r1, [r4, #12]
 472 0070 0B68     		ldr	r3, [r1]
 473 0072 677F     		ldrb	r7, [r4, #29]
 474 0074 0122     		movs	r2, #1
 475 0076 BA40     		lsls	r2, r2, r7
 476 0078 9343     		bics	r3, r2
 477 007a 0B60     		str	r3, [r1]
 701:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
 478              		.loc 1 701 0
 479 007c FFF7FEFF 		bl	CyExitCriticalSection
 480              	.LVL33:
 702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 481              		.loc 1 702 0
 482 0080 02E0     		b	.L39
 483              	.L42:
 707:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 484              		.loc 1 707 0
 485 0082 2000     		movs	r0, r4
 486 0084 FFF7FEFF 		bl	CapSense_CSDConnectSns
 487              	.LVL34:
 488              	.L39:
 742:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 489              		.loc 1 742 0 discriminator 2
 490 0088 2034     		adds	r4, r4, #32
 491              	.LVL35:
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 492              		.loc 1 680 0 discriminator 2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 45


 493 008a 0135     		adds	r5, r5, #1
 494              	.LVL36:
 495              	.L38:
 680:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 496              		.loc 1 680 0 is_stmt 0 discriminator 1
 497 008c 002D     		cmp	r5, #0
 498 008e C0D0     		beq	.L43
 744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 499              		.loc 1 744 0 is_stmt 1
 500              		@ sp needed
 501              	.LVL37:
 502              	.LVL38:
 503              	.LVL39:
 504 0090 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 505              	.L45:
 506 0092 C046     		.align	2
 507              	.L44:
 508 0094 00000000 		.word	CapSense_dsFlash
 509              		.cfi_endproc
 510              	.LFE7:
 511              		.size	CapSense_SetPinState, .-CapSense_SetPinState
 512              		.section	.text.CapSense_SsSwitchSensingMode,"ax",%progbits
 513              		.align	2
 514              		.global	CapSense_SsSwitchSensingMode
 515              		.code	16
 516              		.thumb_func
 517              		.type	CapSense_SsSwitchSensingMode, %function
 518              	CapSense_SsSwitchSensingMode:
 519              	.LFB9:
 902:Generated_Source\PSoC4/CapSense_Sensing.c ****     if (CapSense_currentSenseMethod != mode)
 520              		.loc 1 902 0
 521              		.cfi_startproc
 522              		@ args = 0, pretend = 0, frame = 0
 523              		@ frame_needed = 0, uses_anonymous_args = 0
 524              	.LVL40:
 525 0000 10B5     		push	{r4, lr}
 526              		.cfi_def_cfa_offset 8
 527              		.cfi_offset 4, -8
 528              		.cfi_offset 14, -4
 529 0002 0400     		movs	r4, r0
 903:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 530              		.loc 1 903 0
 531 0004 144B     		ldr	r3, .L52
 532 0006 1B78     		ldrb	r3, [r3]
 533 0008 8342     		cmp	r3, r0
 534 000a 23D0     		beq	.L46
 906:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 535              		.loc 1 906 0
 536 000c 012B     		cmp	r3, #1
 537 000e 02D1     		bne	.L48
 909:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 538              		.loc 1 909 0
 539 0010 FFF7FEFF 		bl	CapSense_SsCSDDisableMode
 540              	.LVL41:
 541 0014 07E0     		b	.L49
 542              	.LVL42:
 543              	.L48:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 46


 912:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 544              		.loc 1 912 0
 545 0016 022B     		cmp	r3, #2
 546 0018 05D0     		beq	.L49
 918:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 547              		.loc 1 918 0
 548 001a 042B     		cmp	r3, #4
 549 001c 03D0     		beq	.L49
 924:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 550              		.loc 1 924 0
 551 001e 032B     		cmp	r3, #3
 552 0020 01D1     		bne	.L49
 927:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 553              		.loc 1 927 0
 554 0022 FFF7FEFF 		bl	CapSense_BistDisableMode
 555              	.LVL43:
 556              	.L49:
 939:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 557              		.loc 1 939 0
 558 0026 012C     		cmp	r4, #1
 559 0028 05D1     		bne	.L50
 943:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_CSD_E;
 560              		.loc 1 943 0
 561 002a FFF7FEFF 		bl	CapSense_SsCSDInitialize
 562              	.LVL44:
 944:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 563              		.loc 1 944 0
 564 002e 0122     		movs	r2, #1
 565 0030 094B     		ldr	r3, .L52
 566 0032 1A70     		strb	r2, [r3]
 567 0034 0EE0     		b	.L46
 568              	.L50:
 947:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 569              		.loc 1 947 0
 570 0036 022C     		cmp	r4, #2
 571 0038 0CD0     		beq	.L46
 955:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 572              		.loc 1 955 0
 573 003a 042C     		cmp	r4, #4
 574 003c 0AD0     		beq	.L46
 963:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 575              		.loc 1 963 0
 576 003e 032C     		cmp	r4, #3
 577 0040 05D1     		bne	.L51
 966:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_currentSenseMethod = CapSense_SENSE_METHOD_BIST_E;
 578              		.loc 1 966 0
 579 0042 FFF7FEFF 		bl	CapSense_BistInitialize
 580              	.LVL45:
 967:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_SELF_TEST_EN) */
 581              		.loc 1 967 0
 582 0046 0322     		movs	r2, #3
 583 0048 034B     		ldr	r3, .L52
 584 004a 1A70     		strb	r2, [r3]
 585 004c 02E0     		b	.L46
 586              	.L51:
 972:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 587              		.loc 1 972 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 47


 588 004e 0022     		movs	r2, #0
 589 0050 014B     		ldr	r3, .L52
 590 0052 1A70     		strb	r2, [r3]
 591              	.L46:
 975:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 592              		.loc 1 975 0
 593              		@ sp needed
 594 0054 10BD     		pop	{r4, pc}
 595              	.L53:
 596 0056 C046     		.align	2
 597              	.L52:
 598 0058 00000000 		.word	.LANCHOR0
 599              		.cfi_endproc
 600              	.LFE9:
 601              		.size	CapSense_SsSwitchSensingMode, .-CapSense_SsSwitchSensingMode
 602              		.section	.text.CapSense_SsSetIOsInDefaultState,"ax",%progbits
 603              		.align	2
 604              		.global	CapSense_SsSetIOsInDefaultState
 605              		.code	16
 606              		.thumb_func
 607              		.type	CapSense_SsSetIOsInDefaultState, %function
 608              	CapSense_SsSetIOsInDefaultState:
 609              	.LFB10:
1001:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_FLASH_IO_STRUCT const *ioPtr = &CapSense_ioList[0u];
 610              		.loc 1 1001 0
 611              		.cfi_startproc
 612              		@ args = 0, pretend = 0, frame = 0
 613              		@ frame_needed = 0, uses_anonymous_args = 0
 614 0000 30B5     		push	{r4, r5, lr}
 615              		.cfi_def_cfa_offset 12
 616              		.cfi_offset 4, -12
 617              		.cfi_offset 5, -8
 618              		.cfi_offset 14, -4
 619              	.LVL46:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 620              		.loc 1 1007 0
 621 0002 0020     		movs	r0, #0
1002:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 loopIndex;
 622              		.loc 1 1002 0
 623 0004 0D4B     		ldr	r3, .L57
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 624              		.loc 1 1007 0
 625 0006 16E0     		b	.L55
 626              	.LVL47:
 627              	.L56:
1014:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->hsiomMask);
 628              		.loc 1 1014 0 discriminator 3
 629 0008 1968     		ldr	r1, [r3]
 630 000a 0A68     		ldr	r2, [r1]
 631              	.LVL48:
1015:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->hsiomPtr, regValue);
 632              		.loc 1 1015 0 discriminator 3
 633 000c 5C69     		ldr	r4, [r3, #20]
 634 000e A243     		bics	r2, r4
 635              	.LVL49:
1016:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 636              		.loc 1 1016 0 discriminator 3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 48


 637 0010 0A60     		str	r2, [r1]
1018:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(CapSense_GPIO_PC_MASK << ioPtr->shift);
 638              		.loc 1 1018 0 discriminator 3
 639 0012 5C68     		ldr	r4, [r3, #4]
 640 0014 2268     		ldr	r2, [r4]
 641              	.LVL50:
1019:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue |=  (CapSense_GPIO_STRGDRV << ioPtr->shift);
 642              		.loc 1 1019 0 discriminator 3
 643 0016 9D7F     		ldrb	r5, [r3, #30]
 644 0018 0721     		movs	r1, #7
 645 001a A940     		lsls	r1, r1, r5
 646 001c 8A43     		bics	r2, r1
 647              	.LVL51:
 648 001e 1100     		movs	r1, r2
 649              	.LVL52:
1020:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->pcPtr, regValue);
 650              		.loc 1 1020 0 discriminator 3
 651 0020 0622     		movs	r2, #6
 652 0022 AA40     		lsls	r2, r2, r5
 653 0024 0A43     		orrs	r2, r1
 654              	.LVL53:
1021:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 655              		.loc 1 1021 0 discriminator 3
 656 0026 2260     		str	r2, [r4]
1023:Generated_Source\PSoC4/CapSense_Sensing.c ****         regValue &= ~(ioPtr->mask);
 657              		.loc 1 1023 0 discriminator 3
 658 0028 D968     		ldr	r1, [r3, #12]
 659 002a 0A68     		ldr	r2, [r1]
 660              	.LVL54:
1024:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32 (ioPtr->drPtr, regValue);
 661              		.loc 1 1024 0 discriminator 3
 662 002c 9C69     		ldr	r4, [r3, #24]
 663 002e A243     		bics	r2, r4
 664              	.LVL55:
1025:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 665              		.loc 1 1025 0 discriminator 3
 666 0030 0A60     		str	r2, [r1]
1028:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 667              		.loc 1 1028 0 discriminator 3
 668 0032 2033     		adds	r3, r3, #32
 669              	.LVL56:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 670              		.loc 1 1007 0 discriminator 3
 671 0034 0130     		adds	r0, r0, #1
 672              	.LVL57:
 673              	.L55:
1007:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 674              		.loc 1 1007 0 is_stmt 0 discriminator 1
 675 0036 0C28     		cmp	r0, #12
 676 0038 E6D9     		bls	.L56
1038:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 677              		.loc 1 1038 0 is_stmt 1
 678              		@ sp needed
 679 003a 30BD     		pop	{r4, r5, pc}
 680              	.L58:
 681              		.align	2
 682              	.L57:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 49


 683 003c 00000000 		.word	CapSense_ioList
 684              		.cfi_endproc
 685              	.LFE10:
 686              		.size	CapSense_SsSetIOsInDefaultState, .-CapSense_SsSetIOsInDefaultState
 687              		.section	.text.CapSense_SsPostAllWidgetsScan,"ax",%progbits
 688              		.align	2
 689              		.global	CapSense_SsPostAllWidgetsScan
 690              		.code	16
 691              		.thumb_func
 692              		.type	CapSense_SsPostAllWidgetsScan, %function
 693              	CapSense_SsPostAllWidgetsScan:
 694              	.LFB11:
1123:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*
 695              		.loc 1 1123 0
 696              		.cfi_startproc
 697              		@ args = 0, pretend = 0, frame = 0
 698              		@ frame_needed = 0, uses_anonymous_args = 0
 699 0000 10B5     		push	{r4, lr}
 700              		.cfi_def_cfa_offset 8
 701              		.cfi_offset 4, -8
 702              		.cfi_offset 14, -4
 703              	.L64:
1134:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 704              		.loc 1 1134 0
 705 0002 1B4A     		ldr	r2, .L65
 706 0004 9378     		ldrb	r3, [r2, #2]
 707 0006 0133     		adds	r3, r3, #1
 708 0008 DBB2     		uxtb	r3, r3
 709 000a 9370     		strb	r3, [r2, #2]
1136:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 710              		.loc 1 1136 0
 711 000c 9078     		ldrb	r0, [r2, #2]
 712 000e C0B2     		uxtb	r0, r0
 713 0010 FFF7FEFF 		bl	CapSense_SetupWidget
 714              	.LVL58:
 715 0014 041E     		subs	r4, r0, #0
 716              	.LVL59:
1138:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 717              		.loc 1 1138 0
 718 0016 09D1     		bne	.L60
1140:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 719              		.loc 1 1140 0
 720 0018 154B     		ldr	r3, .L65
 721 001a 9B78     		ldrb	r3, [r3, #2]
 722 001c 0C2B     		cmp	r3, #12
 723 001e 02D1     		bne	.L61
1143:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 724              		.loc 1 1143 0
 725 0020 0022     		movs	r2, #0
 726 0022 134B     		ldr	r3, .L65
 727 0024 5A70     		strb	r2, [r3, #1]
 728              	.L61:
1145:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 729              		.loc 1 1145 0
 730 0026 FFF7FEFF 		bl	CapSense_Scan
 731              	.LVL60:
 732 002a 1EE0     		b	.L62
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 50


 733              	.LVL61:
 734              	.L60:
1147:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 735              		.loc 1 1147 0
 736 002c 104B     		ldr	r3, .L65
 737 002e 9B78     		ldrb	r3, [r3, #2]
 738 0030 0C2B     		cmp	r3, #12
 739 0032 11D1     		bne	.L63
1161:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* All widgets are totally processed. Reset BUSY flag */
 740              		.loc 1 1161 0
 741 0034 0F4B     		ldr	r3, .L65+4
 742 0036 1A89     		ldrh	r2, [r3, #8]
 743 0038 0132     		adds	r2, r2, #1
 744 003a 1A81     		strh	r2, [r3, #8]
1163:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 745              		.loc 1 1163 0
 746 003c DA68     		ldr	r2, [r3, #12]
 747 003e 8021     		movs	r1, #128
 748 0040 8A43     		bics	r2, r1
 749 0042 DA60     		str	r2, [r3, #12]
1166:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 750              		.loc 1 1166 0
 751 0044 DA68     		ldr	r2, [r3, #12]
 752 0046 1202     		lsls	r2, r2, #8
 753 0048 120A     		lsrs	r2, r2, #8
 754 004a DA60     		str	r2, [r3, #12]
1167:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 755              		.loc 1 1167 0
 756 004c DA68     		ldr	r2, [r3, #12]
 757 004e 0406     		lsls	r4, r0, #24
 758 0050 1443     		orrs	r4, r2
 759 0052 DC60     		str	r4, [r3, #12]
 760              	.LVL62:
1170:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 761              		.loc 1 1170 0
 762 0054 0024     		movs	r4, #0
 763 0056 08E0     		b	.L62
 764              	.LVL63:
 765              	.L63:
1175:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsRam.status |= ((postScanStatus & CapSense_STATUS_ERR_SIZE) << CapSense_S
 766              		.loc 1 1175 0
 767 0058 064A     		ldr	r2, .L65+4
 768 005a D368     		ldr	r3, [r2, #12]
 769 005c 1B02     		lsls	r3, r3, #8
 770 005e 1B0A     		lsrs	r3, r3, #8
 771 0060 D360     		str	r3, [r2, #12]
1176:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 772              		.loc 1 1176 0
 773 0062 D168     		ldr	r1, [r2, #12]
 774 0064 0306     		lsls	r3, r0, #24
 775 0066 0B43     		orrs	r3, r1
 776 0068 D360     		str	r3, [r2, #12]
 777              	.LVL64:
 778              	.L62:
1178:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (1u != CapSense_TOTAL_WIDGETS) */
 779              		.loc 1 1178 0
 780 006a 002C     		cmp	r4, #0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 51


 781 006c C9D1     		bne	.L64
1180:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 782              		.loc 1 1180 0
 783              		@ sp needed
 784              	.LVL65:
 785 006e 10BD     		pop	{r4, pc}
 786              	.L66:
 787              		.align	2
 788              	.L65:
 789 0070 00000000 		.word	.LANCHOR0
 790 0074 00000000 		.word	CapSense_dsRam
 791              		.cfi_endproc
 792              	.LFE11:
 793              		.size	CapSense_SsPostAllWidgetsScan, .-CapSense_SsPostAllWidgetsScan
 794              		.section	.text.CapSense_SsIsrInitialize,"ax",%progbits
 795              		.align	2
 796              		.global	CapSense_SsIsrInitialize
 797              		.code	16
 798              		.thumb_func
 799              		.type	CapSense_SsIsrInitialize, %function
 800              	CapSense_SsIsrInitialize:
 801              	.LFB12:
1200:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_ISR_StartEx(address);
 802              		.loc 1 1200 0
 803              		.cfi_startproc
 804              		@ args = 0, pretend = 0, frame = 0
 805              		@ frame_needed = 0, uses_anonymous_args = 0
 806              	.LVL66:
 807 0000 10B5     		push	{r4, lr}
 808              		.cfi_def_cfa_offset 8
 809              		.cfi_offset 4, -8
 810              		.cfi_offset 14, -4
1201:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 811              		.loc 1 1201 0
 812 0002 FFF7FEFF 		bl	CapSense_ISR_StartEx
 813              	.LVL67:
1202:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 814              		.loc 1 1202 0
 815              		@ sp needed
 816 0006 10BD     		pop	{r4, pc}
 817              		.cfi_endproc
 818              	.LFE12:
 819              		.size	CapSense_SsIsrInitialize, .-CapSense_SsIsrInitialize
 820              		.section	.text.CapSense_SsSetModClkClockDivider,"ax",%progbits
 821              		.align	2
 822              		.global	CapSense_SsSetModClkClockDivider
 823              		.code	16
 824              		.thumb_func
 825              		.type	CapSense_SsSetModClkClockDivider, %function
 826              	CapSense_SsSetModClkClockDivider:
 827              	.LFB13:
1223:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK)
 828              		.loc 1 1223 0
 829              		.cfi_startproc
 830              		@ args = 0, pretend = 0, frame = 0
 831              		@ frame_needed = 0, uses_anonymous_args = 0
 832              		@ link register save eliminated.
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 52


 833              	.LVL68:
1226:Generated_Source\PSoC4/CapSense_Sensing.c ****                  ((uint32)CapSense_ModClk__DIV_ID <<
 834              		.loc 1 1226 0
 835 0000 074A     		ldr	r2, .L70
 836 0002 084B     		ldr	r3, .L70+4
 837 0004 1A60     		str	r2, [r3]
1236:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 838              		.loc 1 1236 0
 839 0006 0138     		subs	r0, r0, #1
 840              	.LVL69:
 841 0008 0002     		lsls	r0, r0, #8
 842              	.LVL70:
 843 000a 074B     		ldr	r3, .L70+8
 844 000c 1860     		str	r0, [r3]
 845              	.L69:
1239:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 846              		.loc 1 1239 0 discriminator 1
 847 000e 054B     		ldr	r3, .L70+4
 848 0010 1B68     		ldr	r3, [r3]
 849 0012 002B     		cmp	r3, #0
 850 0014 FBDB     		blt	.L69
1245:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (uint32)(((uint32)CapSense_ModClk__DIV_ID << CapSense_MODCLK_CMD_DIV_SHIFT) |
 851              		.loc 1 1245 0
 852 0016 054A     		ldr	r2, .L70+12
 853 0018 024B     		ldr	r3, .L70+4
 854 001a 1A60     		str	r2, [r3]
1270:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 855              		.loc 1 1270 0
 856              		@ sp needed
 857 001c 7047     		bx	lr
 858              	.L71:
 859 001e C046     		.align	2
 860              	.L70:
 861 0020 40000040 		.word	1073741888
 862 0024 00000140 		.word	1073807360
 863 0028 00030140 		.word	1073808128
 864 002c 40FF0080 		.word	-2147418304
 865              		.cfi_endproc
 866              	.LFE13:
 867              		.size	CapSense_SsSetModClkClockDivider, .-CapSense_SsSetModClkClockDivider
 868              		.section	.text.CapSense_SsSetSnsClockDivider,"ax",%progbits
 869              		.align	2
 870              		.global	CapSense_SsSetSnsClockDivider
 871              		.code	16
 872              		.thumb_func
 873              		.type	CapSense_SsSetSnsClockDivider, %function
 874              	CapSense_SsSetSnsClockDivider:
 875              	.LFB14:
1291:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSDV2)
 876              		.loc 1 1291 0
 877              		.cfi_startproc
 878              		@ args = 0, pretend = 0, frame = 0
 879              		@ frame_needed = 0, uses_anonymous_args = 0
 880              		@ link register save eliminated.
 881              	.LVL71:
1307:Generated_Source\PSoC4/CapSense_Sensing.c ****                      ((uint32)CapSense_SnsClk__DIV_ID <<
 882              		.loc 1 1307 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 53


 883 0000 074A     		ldr	r2, .L74
 884 0002 084B     		ldr	r3, .L74+4
 885 0004 1A60     		str	r2, [r3]
1317:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 886              		.loc 1 1317 0
 887 0006 0138     		subs	r0, r0, #1
 888              	.LVL72:
 889 0008 0002     		lsls	r0, r0, #8
 890              	.LVL73:
 891 000a 074B     		ldr	r3, .L74+8
 892 000c 1860     		str	r0, [r3]
 893              	.L73:
1320:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 894              		.loc 1 1320 0 discriminator 1
 895 000e 054B     		ldr	r3, .L74+4
 896 0010 1B68     		ldr	r3, [r3]
 897 0012 002B     		cmp	r3, #0
 898 0014 FBDB     		blt	.L73
1326:Generated_Source\PSoC4/CapSense_Sensing.c ****                      (uint32)(((uint32)CapSense_SnsClk__DIV_ID << CapSense_SNSCLK_CMD_DIV_SHIFT) |
 899              		.loc 1 1326 0
 900 0016 054A     		ldr	r2, .L74+12
 901 0018 024B     		ldr	r3, .L74+4
 902 001a 1A60     		str	r2, [r3]
1352:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 903              		.loc 1 1352 0
 904              		@ sp needed
 905 001c 7047     		bx	lr
 906              	.L75:
 907 001e C046     		.align	2
 908              	.L74:
 909 0020 41000040 		.word	1073741889
 910 0024 00000140 		.word	1073807360
 911 0028 04030140 		.word	1073808132
 912 002c 41FF0080 		.word	-2147418303
 913              		.cfi_endproc
 914              	.LFE14:
 915              		.size	CapSense_SsSetSnsClockDivider, .-CapSense_SsSetSnsClockDivider
 916              		.section	.text.CapSense_SsSetClockDividers,"ax",%progbits
 917              		.align	2
 918              		.global	CapSense_SsSetClockDividers
 919              		.code	16
 920              		.thumb_func
 921              		.type	CapSense_SsSetClockDividers, %function
 922              	CapSense_SsSetClockDividers:
 923              	.LFB15:
1375:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Configure Mod clock */
 924              		.loc 1 1375 0
 925              		.cfi_startproc
 926              		@ args = 0, pretend = 0, frame = 0
 927              		@ frame_needed = 0, uses_anonymous_args = 0
 928              	.LVL74:
 929 0000 10B5     		push	{r4, lr}
 930              		.cfi_def_cfa_offset 8
 931              		.cfi_offset 4, -8
 932              		.cfi_offset 14, -4
 933 0002 0400     		movs	r4, r0
1377:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 54


 934              		.loc 1 1377 0
 935 0004 0800     		movs	r0, r1
 936              	.LVL75:
 937 0006 FFF7FEFF 		bl	CapSense_SsSetModClkClockDivider
 938              	.LVL76:
1380:Generated_Source\PSoC4/CapSense_Sensing.c **** }
 939              		.loc 1 1380 0
 940 000a 2000     		movs	r0, r4
 941 000c FFF7FEFF 		bl	CapSense_SsSetSnsClockDivider
 942              	.LVL77:
1381:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 943              		.loc 1 1381 0
 944              		@ sp needed
 945              	.LVL78:
 946 0010 10BD     		pop	{r4, pc}
 947              		.cfi_endproc
 948              	.LFE15:
 949              		.size	CapSense_SsSetClockDividers, .-CapSense_SsSetClockDividers
 950 0012 C046     		.section	.text.CapSense_CalibrateWidget,"ax",%progbits
 951              		.align	2
 952              		.global	CapSense_CalibrateWidget
 953              		.code	16
 954              		.thumb_func
 955              		.type	CapSense_CalibrateWidget, %function
 956              	CapSense_CalibrateWidget:
 957              	.LFB16:
1427:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 958              		.loc 1 1427 0
 959              		.cfi_startproc
 960              		@ args = 0, pretend = 0, frame = 0
 961              		@ frame_needed = 0, uses_anonymous_args = 0
 962              	.LVL79:
 963 0000 70B5     		push	{r4, r5, r6, lr}
 964              		.cfi_def_cfa_offset 16
 965              		.cfi_offset 4, -16
 966              		.cfi_offset 5, -12
 967              		.cfi_offset 6, -8
 968              		.cfi_offset 14, -4
 969 0002 0400     		movs	r4, r0
 970              	.LVL80:
1442:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 971              		.loc 1 1442 0
 972 0004 1F23     		movs	r3, #31
 973 0006 0340     		ands	r3, r0
 974 0008 0122     		movs	r2, #1
 975 000a 9A40     		lsls	r2, r2, r3
 976 000c 1100     		movs	r1, r2
 977 000e 4209     		lsrs	r2, r0, #5
 978 0010 0B48     		ldr	r0, .L81
 979              	.LVL81:
 980 0012 0432     		adds	r2, r2, #4
 981 0014 9300     		lsls	r3, r2, #2
 982 0016 1A58     		ldr	r2, [r3, r0]
 983 0018 0A40     		ands	r2, r1
 984 001a C318     		adds	r3, r0, r3
 985 001c 5B68     		ldr	r3, [r3, #4]
 986 001e 1342     		tst	r3, r2
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 55


 987 0020 01D0     		beq	.L80
1444:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 988              		.loc 1 1444 0
 989 0022 0025     		movs	r5, #0
 990 0024 00E0     		b	.L78
 991              	.L80:
1448:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
 992              		.loc 1 1448 0
 993 0026 1125     		movs	r5, #17
 994              	.L78:
 995              	.LVL82:
1452:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
 996              		.loc 1 1452 0
 997 0028 002D     		cmp	r5, #0
 998 002a 07D1     		bne	.L79
1481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 999              		.loc 1 1481 0
 1000 002c 5521     		movs	r1, #85
 1001 002e 2000     		movs	r0, r4
 1002 0030 FFF7FEFF 		bl	CapSense_CSDCalibrateWidget
 1003              	.LVL83:
 1004 0034 0500     		movs	r5, r0
 1005              	.LVL84:
1497:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE ==CapSense_TST_WDGT_CRC_EN) */
 1006              		.loc 1 1497 0
 1007 0036 2000     		movs	r0, r4
 1008              	.LVL85:
 1009 0038 FFF7FEFF 		bl	CapSense_DsUpdateWidgetCrc
 1010              	.LVL86:
 1011              	.L79:
1503:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1012              		.loc 1 1503 0
 1013 003c 2800     		movs	r0, r5
 1014              		@ sp needed
 1015              	.LVL87:
 1016              	.LVL88:
 1017 003e 70BD     		pop	{r4, r5, r6, pc}
 1018              	.L82:
 1019              		.align	2
 1020              	.L81:
 1021 0040 00000000 		.word	CapSense_dsRam
 1022              		.cfi_endproc
 1023              	.LFE16:
 1024              		.size	CapSense_CalibrateWidget, .-CapSense_CalibrateWidget
 1025              		.section	.text.CapSense_CalibrateAllWidgets,"ax",%progbits
 1026              		.align	2
 1027              		.global	CapSense_CalibrateAllWidgets
 1028              		.code	16
 1029              		.thumb_func
 1030              		.type	CapSense_CalibrateAllWidgets, %function
 1031              	CapSense_CalibrateAllWidgets:
 1032              	.LFB17:
1540:Generated_Source\PSoC4/CapSense_Sensing.c ****         cystatus calibrateStatus = CYRET_SUCCESS;
 1033              		.loc 1 1540 0
 1034              		.cfi_startproc
 1035              		@ args = 0, pretend = 0, frame = 0
 1036              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 56


 1037 0000 70B5     		push	{r4, r5, r6, lr}
 1038              		.cfi_def_cfa_offset 16
 1039              		.cfi_offset 4, -16
 1040              		.cfi_offset 5, -12
 1041              		.cfi_offset 6, -8
 1042              		.cfi_offset 14, -4
 1043              	.LVL89:
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1044              		.loc 1 1544 0
 1045 0002 0024     		movs	r4, #0
1541:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
 1046              		.loc 1 1541 0
 1047 0004 0025     		movs	r5, #0
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1048              		.loc 1 1544 0
 1049 0006 04E0     		b	.L84
 1050              	.LVL90:
 1051              	.L85:
1546:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1052              		.loc 1 1546 0 discriminator 3
 1053 0008 2000     		movs	r0, r4
 1054 000a FFF7FEFF 		bl	CapSense_CalibrateWidget
 1055              	.LVL91:
 1056 000e 0543     		orrs	r5, r0
 1057              	.LVL92:
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1058              		.loc 1 1544 0 discriminator 3
 1059 0010 0134     		adds	r4, r4, #1
 1060              	.LVL93:
 1061              	.L84:
1544:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1062              		.loc 1 1544 0 is_stmt 0 discriminator 1
 1063 0012 0C2C     		cmp	r4, #12
 1064 0014 F8D9     		bls	.L85
1550:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ANYMODE_AUTOCAL) */
 1065              		.loc 1 1550 0 is_stmt 1
 1066 0016 2800     		movs	r0, r5
 1067              		@ sp needed
 1068              	.LVL94:
 1069              	.LVL95:
 1070 0018 70BD     		pop	{r4, r5, r6, pc}
 1071              		.cfi_endproc
 1072              	.LFE17:
 1073              		.size	CapSense_CalibrateAllWidgets, .-CapSense_CalibrateAllWidgets
 1074 001a C046     		.section	.text.CapSense_SsClearCSDSensors,"ax",%progbits
 1075              		.align	2
 1076              		.global	CapSense_SsClearCSDSensors
 1077              		.code	16
 1078              		.thumb_func
 1079              		.type	CapSense_SsClearCSDSensors, %function
 1080              	CapSense_SsClearCSDSensors:
 1081              	.LFB22:
1954:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_DISABLE == CapSense_CSDV2) */
1955:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1956:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1957:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN)
1958:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 57


1959:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeImoFreq
1960:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1961:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1962:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1963:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the IMO frequency.
1964:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1965:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1966:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The IMO frequency can have three offsets: 0%, -5% and +5%. The frequency
1967:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  trims are contained in the CapSense_immunity[value] array for each
1968:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  frequency channel.
1969:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1970:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param value The frequency channel ID.
1971:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1972:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1973:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeImoFreq(uint32 value)
1974:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1975:Generated_Source\PSoC4/CapSense_Sensing.c ****         CY_SET_REG32(CY_SYS_CLK_IMO_TRIM1_PTR, CapSense_immunity[value]);
1976:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
1977:Generated_Source\PSoC4/CapSense_Sensing.c **** 
1978:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
1979:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsChangeClkFreq
1980:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
1981:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1982:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
1983:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1984:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1985:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1986:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
1987:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function changes the sensor clock frequency by configuring
1988:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the corresponding divider.
1989:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1990:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param chId
1991:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The frequency channel ID.
1992:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
1993:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
1994:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsChangeClkFreq(uint32 chId)
1995:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
1996:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsClkDivider;
1997:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset1 = 0u;
1998:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 freqOffset2 = 0u;
1999:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2000:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2001:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE == CapSense_CSDV2)
2002:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2003:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2004:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2005:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2006:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2007:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2008:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 snsClkSrc;
2009:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2010:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2011:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2012:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((0u != CapSense_TOTAL_CSD_WIDGETS) || \
2013:Generated_Source\PSoC4/CapSense_Sensing.c ****              ((CapSense_DISABLE == CapSense_CSX_COMMON_TX_CLK_EN) && (0u != CapSense_TOTAL_CSX_WIDG
2014:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_WD_STRUCT const *ptrFlashWdgt = &CapSense_dsFlash.wdgtArray[CapSense_wid
2015:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT const *ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)ptrFlashWdg
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 58


2016:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2017:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2018:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch(CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[CapSense_widgetIndex]))
2019:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2020:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSD_WIDGETS)
2021:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2022:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Get sensor clock divider value */
2023:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN)
2024:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsdClk;
2025:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2026:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2027:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClck divider for rows or columns */
2028:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2029:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2030:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->rowSnsClk;
2031:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2032:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2033:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2034:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = ptrWdgt->snsClk;
2035:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2036:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2037:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider = ptrWdgt->snsClk;
2038:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2039:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2040:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2041:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSD_MFS_DIVIDER_OFFSET_F1;
2042:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSD_MFS_DIVIDER_OFFSET_F2;
2043:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2044:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2045:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2046:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2047:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Get sense clk source */
2048:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2049:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Get SnsClc Source for rows or columns */
2050:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_dsFlash.wdgtArray[CapSense_widgetIndex].numCols <= CapSense_se
2051:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2052:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->rowSnsClkSource;
2053:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2054:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2055:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2056:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2057:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2058:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2059:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkSrc = (uint32)ptrWdgt->snsClkSource;
2060:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2061:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2062:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2063:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2064:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2065:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2066:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Multiply by 2 for PRS8/PRS12 mode */
2067:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset1 <<= 1u;
2068:Generated_Source\PSoC4/CapSense_Sensing.c ****                         freqOffset2 <<= 1u;
2069:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2070:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2071:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2072:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 59


2073:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2074:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2075:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2076:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2077:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2078:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2079:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2080:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2081:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2082:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2083:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2084:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2085:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2086:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2087:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2088:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2089:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2090:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2091:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2092:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2093:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2094:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2095:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSDV2)
2096:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /* Set Number Of Conversions based on scanning resolution */
2097:Generated_Source\PSoC4/CapSense_Sensing.c ****                     conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)pt
2098:Generated_Source\PSoC4/CapSense_Sensing.c ****                     CY_SET_REG32(CapSense_SEQ_NORM_CNT_PTR, (conversionsNum & CapSense_SEQ_NORM_CNT
2099:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2100:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2101:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if((CapSense_CLK_SOURCE_PRS8  == CapSense_CSD_SNS_CLK_SOURCE) ||\
2102:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRS12 == CapSense_CSD_SNS_CLK_SOURCE) ||\
2103:Generated_Source\PSoC4/CapSense_Sensing.c ****                     (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))
2104:Generated_Source\PSoC4/CapSense_Sensing.c ****                     switch (snsClkSrc)
2105:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2106:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS8:
2107:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_CLK_SOURCE_PRS12:
2108:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Divide by 2 for PRS8/PRS12 mode */
2109:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider >>= 1;
2110:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (snsClkDivider == 0u)
2111:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2112:Generated_Source\PSoC4/CapSense_Sensing.c ****                             snsClkDivider = 1u;
2113:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2114:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2115:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2116:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2117:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2118:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2119:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif
2120:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2121:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2122:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2123:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2124:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2125:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSD_WIDGETS) */
2126:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2127:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (0u != CapSense_TOTAL_CSX_WIDGETS)
2128:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2129:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 60


2130:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_dsRam.snsCsxClk;
2131:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2132:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = ptrWdgt->snsClk;
2133:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_ENABLE == CapSense_CSX_COMMON_TX_CLK_EN) */
2134:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset1 = CapSense_CSX_MFS_DIVIDER_OFFSET_F1;
2135:Generated_Source\PSoC4/CapSense_Sensing.c ****                 freqOffset2 = CapSense_CSX_MFS_DIVIDER_OFFSET_F2;
2136:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2137:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Change the divider based on the chId */
2138:Generated_Source\PSoC4/CapSense_Sensing.c ****                 switch (chId)
2139:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2140:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_1:
2141:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2142:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset1;
2143:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2144:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2145:Generated_Source\PSoC4/CapSense_Sensing.c ****                     case CapSense_FREQ_CHANNEL_2:
2146:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2147:Generated_Source\PSoC4/CapSense_Sensing.c ****                         snsClkDivider += freqOffset2;
2148:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2149:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2150:Generated_Source\PSoC4/CapSense_Sensing.c ****                     default:
2151:Generated_Source\PSoC4/CapSense_Sensing.c ****                     {
2152:Generated_Source\PSoC4/CapSense_Sensing.c ****                         break;
2153:Generated_Source\PSoC4/CapSense_Sensing.c ****                     }
2154:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2155:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2156:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Configure the new divider */
2157:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetSnsClockDivider(snsClkDivider);
2158:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2159:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2160:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* #if (0u != CapSense_TOTAL_CSX_WIDGETS) */
2161:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2162:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2163:Generated_Source\PSoC4/CapSense_Sensing.c ****             CYASSERT(0);
2164:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2165:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2166:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2167:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif  /* (CapSense_ENABLE == CapSense_MULTI_FREQ_SCAN_EN) */
2168:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2169:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2170:Generated_Source\PSoC4/CapSense_Sensing.c **** #if((CapSense_ENABLE == CapSense_CSD_EN) || \
2171:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSX_EN) && \
2172:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2)))
2173:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2174:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsInitializeSourceSenseClk
2175:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2176:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2177:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2178:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Sets a source for Sense Clk for all CSD widgets.
2179:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2180:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2181:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk.
2182:Generated_Source\PSoC4/CapSense_Sensing.c **** *  for all CSD widgets.
2183:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2184:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2185:Generated_Source\PSoC4/CapSense_Sensing.c **** void CapSense_SsInitializeSourceSenseClk(void)
2186:Generated_Source\PSoC4/CapSense_Sensing.c **** {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 61


2187:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
2188:Generated_Source\PSoC4/CapSense_Sensing.c ****     CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2189:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
2191:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2192:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2WdgtRam;
2193:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2194:Generated_Source\PSoC4/CapSense_Sensing.c ****         switch (CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2195:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2196:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_EN)
2197:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSD_E:
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetSenseClkSrc(wdgtIndex, ptrWdgt);
2199:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2200:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2201:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2202:Generated_Source\PSoC4/CapSense_Sensing.c ****             case CapSense_SENSE_METHOD_CSX_E:
2203:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_SsSetWidgetTxClkSrc(wdgtIndex, ptrWdgt);
2204:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
2205:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) || (CapSense_ENABLE == CapSense_ISX_EN)) &
2206:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2207:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2208:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2209:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN)
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_DsUpdateWidgetCrc(wdgtIndex);
2211:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
2212:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2213:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2214:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
2215:Generated_Source\PSoC4/CapSense_Sensing.c ****            (((CapSense_ENABLE == CapSense_CSX_EN) || \
2216:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_ISX_EN)) && \
2217:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2))) */
2218:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2219:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2220:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2221:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2222:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetSenseClkSrc
2223:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2224:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2225:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2226:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the sense clock for a widget.
2227:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2228:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2229:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2230:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2231:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2232:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2233:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2234:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource and rowSnsClkSource with a source for the sense Clk for a
2235:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widget.
2236:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2237:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2238:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetSenseClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptr
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2240:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2241:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2242:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2243:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 62


2244:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2245:Generated_Source\PSoC4/CapSense_Sensing.c ****                 uint32 conversionsNum;
2246:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2247:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2248:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2249:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2250:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2251:Generated_Source\PSoC4/CapSense_Sensing.c ****             snsClkDivider = CapSense_SsCSDGetColSnsClkDivider(wdgtIndex);
2252:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2253:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if(CapSense_ENABLE == CapSense_CSDV2)
2254:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = CapSense_SsCSDGetNumberOfConversions(snsClkDivider, (uint32)ptrWdg
2255:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                                              CapSen
2256:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2257:Generated_Source\PSoC4/CapSense_Sensing.c ****                 if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2258:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2259:Generated_Source\PSoC4/CapSense_Sensing.c ****                     /*
2260:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * Multiplying of the snsClkDivider by 2 is needed to pass the
2261:Generated_Source\PSoC4/CapSense_Sensing.c ****                     * average PRS frequency through the argument.
2262:Generated_Source\PSoC4/CapSense_Sensing.c ****                     */
2263:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->res
2264:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2265:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2266:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2267:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /*
2268:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * Multiplying of the snsClkDivider by 2 is needed to pass the
2269:Generated_Source\PSoC4/CapSense_Sensing.c ****                 * average PRS frequency through the argument.
2270:Generated_Source\PSoC4/CapSense_Sensing.c ****                 */
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt->resolut
2272:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2273:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2274:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2275:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2276:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2277:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex; /* This parameter is unused in such configurations */
2278:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2279:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2280:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2281:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2282:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2283:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((CapSense_WD_TOUCHPAD_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[wdgtIn
2284:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (CapSense_WD_MATRIX_BUTTON_E == (CapSense_WD_TYPE_ENUM)CapSense_dsFlash.wdgtArray[w
2285:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2286:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2287:Generated_Source\PSoC4/CapSense_Sensing.c ****                     snsClkDivider = CapSense_SsCSDGetRowSnsClkDivider(wdgtIndex);
2288:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2289:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if(CapSense_ENABLE == CapSense_CSDV2)
2290:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2291:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_CLK_SOURCE_DIRECT == lfsrSize)
2292:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2293:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /*
2294:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * Multiplying of the snsClkDivider by 2 is needed to pass the
2295:Generated_Source\PSoC4/CapSense_Sensing.c ****                             * average PRS frequency through the argument.
2296:Generated_Source\PSoC4/CapSense_Sensing.c ****                             */
2297:Generated_Source\PSoC4/CapSense_Sensing.c ****                             lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrW
2298:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2299:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2300:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 63


2301:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /*
2302:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * Multiplying of the snsClkDivider by 2 is needed to pass the
2303:Generated_Source\PSoC4/CapSense_Sensing.c ****                         * average PRS frequency through the argument.
2304:Generated_Source\PSoC4/CapSense_Sensing.c ****                         */
2305:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrSize = CapSense_SsCSDCalcPrsSize(snsClkDivider << 1uL, (uint32)ptrWdgt-
2306:Generated_Source\PSoC4/CapSense_Sensing.c ****                         lfsrScale = 0u;
2307:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
2308:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #else
2309:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrSize = (uint8)CapSense_DEFAULT_MODULATION_MODE;
2310:Generated_Source\PSoC4/CapSense_Sensing.c ****                     lfsrScale = 0u;
2311:Generated_Source\PSoC4/CapSense_Sensing.c ****                 #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE) */
2312:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt->rowSnsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR
2313:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2314:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2315:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2316:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
2317:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2318:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2319:Generated_Source\PSoC4/CapSense_Sensing.c **** #if ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2))
2320:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2321:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsSetWidgetTxClkSrc
2322:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2323:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2324:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2325:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Sets a source for the Tx clock for a widget.
2326:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2327:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param wdgtIndex
2328:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2329:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param ptrWdgt
2330:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The pointer to the RAM_WD_BASE_STRUCT structure.
2331:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2332:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2333:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Updates snsClkSource with a source for Tx Clk for a widget.
2334:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2335:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2336:Generated_Source\PSoC4/CapSense_Sensing.c ****     static void CapSense_SsSetWidgetTxClkSrc(uint32 wdgtIndex, CapSense_RAM_WD_BASE_STRUCT * ptrWdg
2337:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2338:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
2339:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrScale;
2340:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2341:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if ((CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) && \
2342:Generated_Source\PSoC4/CapSense_Sensing.c ****              (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES))
2343:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 conversionsNum;
2344:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 snsClkDivider;
2345:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif
2346:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2347:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if(CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)
2348:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES)
2349:Generated_Source\PSoC4/CapSense_Sensing.c ****                 conversionsNum = (uint32)ptrWdgt->resolution;
2350:Generated_Source\PSoC4/CapSense_Sensing.c ****                 snsClkDivider = CapSense_SsCSXGetTxClkDivider(wdgtIndex);
2351:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = CapSense_SsCalcLfsrSize(snsClkDivider, conversionsNum);
2352:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = CapSense_SsCalcLfsrScale(snsClkDivider, lfsrSize);
2353:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2354:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2355:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
2356:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Unused function argument */
2357:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)wdgtIndex;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 64


2358:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) */
2359:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2360:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrSize = (uint8)CapSense_CSX_TX_CLK_SOURCE;
2361:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale = 0u;
2362:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Unused function argument */
2363:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)wdgtIndex;
2364:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE) */
2365:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2366:Generated_Source\PSoC4/CapSense_Sensing.c ****         ptrWdgt->snsClkSource = lfsrSize | (uint8)(lfsrScale << CapSense_CLK_SOURCE_LFSR_SCALE_OFFS
2367:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2368:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSX_EN) && (CapSense_ENABLE == CapSense_CSDV2)) */
2369:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2370:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2371:Generated_Source\PSoC4/CapSense_Sensing.c **** #if(((CapSense_ENABLE == CapSense_CSX_EN) && \
2372:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2373:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2374:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2375:Generated_Source\PSoC4/CapSense_Sensing.c ****     ((CapSense_ENABLE == CapSense_CSD_EN) && \
2376:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_ENABLE == CapSense_CSDV2) && \
2377:Generated_Source\PSoC4/CapSense_Sensing.c ****      (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)))
2378:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2379:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrSize
2380:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2381:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2382:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2383:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that finds a SSC polynomial size in the Auto mode.
2384:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2385:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2386:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The SSC polynomial size in the auto mode is found based on the following
2387:Generated_Source\PSoC4/CapSense_Sensing.c **** *  requirements:
2388:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - an LFSR value should be selected so that the max clock dither is limited with +/-10%.
2389:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - at least one full spread spectrum polynomial should pass during the scan time.
2390:Generated_Source\PSoC4/CapSense_Sensing.c **** *  - the value of the number of conversions should be an integer multiple of the
2391:Generated_Source\PSoC4/CapSense_Sensing.c **** *    repeat period of the programmed LFSR_SIZE.
2392:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2393:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2394:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2395:Generated_Source\PSoC4/CapSense_Sensing.c **** *  resolution The widget resolution.
2396:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2397:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return lfsrSize The LFSRSIZE value for the SENSE_PERIOD register.
2398:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2399:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2400:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrSize(uint32 snsClkDivider, uint32 conversionsNum)
2401:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2402:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint8 lfsrSize = 0u;
2403:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2404:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Find LFSR value */
2405:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((CapSense_SNSCLK_SSC4_THRESHOLD <= snsClkDivider) &&
2406:Generated_Source\PSoC4/CapSense_Sensing.c ****        (CapSense_SNSCLK_SSC4_PERIOD <= conversionsNum) &&
2407:Generated_Source\PSoC4/CapSense_Sensing.c ****        (0uL == (conversionsNum % CapSense_SNSCLK_SSC4_PERIOD)))
2408:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2409:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC4;
2410:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2411:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC3_THRESHOLD <= snsClkDivider) &&
2412:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC3_PERIOD <= conversionsNum) &&
2413:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC3_PERIOD)))
2414:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 65


2415:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC3;
2416:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2417:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC2_THRESHOLD <= snsClkDivider) &&
2418:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC2_PERIOD <= conversionsNum) &&
2419:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC2_PERIOD)))
2420:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2421:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC2;
2422:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2423:Generated_Source\PSoC4/CapSense_Sensing.c ****     else if((CapSense_SNSCLK_SSC1_THRESHOLD <= snsClkDivider) &&
2424:Generated_Source\PSoC4/CapSense_Sensing.c ****             (CapSense_SNSCLK_SSC1_PERIOD <= conversionsNum) &&
2425:Generated_Source\PSoC4/CapSense_Sensing.c ****             (0uL == (conversionsNum % CapSense_SNSCLK_SSC1_PERIOD)))
2426:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2427:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = CapSense_CLK_SOURCE_SSC1;
2428:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2429:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2430:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2431:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrSize = (uint8)CapSense_CLK_SOURCE_DIRECT;
2432:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2433:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2434:Generated_Source\PSoC4/CapSense_Sensing.c ****     return (lfsrSize);
2435:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2436:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2437:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2438:Generated_Source\PSoC4/CapSense_Sensing.c **** /*******************************************************************************
2439:Generated_Source\PSoC4/CapSense_Sensing.c **** * Function Name: CapSense_SsCalcLfsrScale
2440:Generated_Source\PSoC4/CapSense_Sensing.c **** ****************************************************************************//**
2441:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2442:Generated_Source\PSoC4/CapSense_Sensing.c **** * \brief
2443:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This is an internal function that calculates the LFSR scale value.
2444:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2445:Generated_Source\PSoC4/CapSense_Sensing.c **** * \details
2446:Generated_Source\PSoC4/CapSense_Sensing.c **** *  The LFSR scale value is used to increase the clock dither if the desired dither
2447:Generated_Source\PSoC4/CapSense_Sensing.c **** *  is wider than can be achieved with the current Sense Clock Divider and current LFSR
2448:Generated_Source\PSoC4/CapSense_Sensing.c **** *  period.
2449:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2450:Generated_Source\PSoC4/CapSense_Sensing.c **** *  This returns the LFSR scale value needed to keep the clock dither in
2451:Generated_Source\PSoC4/CapSense_Sensing.c **** *  range +/-10%.
2452:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2453:Generated_Source\PSoC4/CapSense_Sensing.c **** * \param
2454:Generated_Source\PSoC4/CapSense_Sensing.c **** *  snsClkDivider The divider value for the sense clock.
2455:Generated_Source\PSoC4/CapSense_Sensing.c **** *  lfsrSize The period of the LFSR sequence.
2456:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2457:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2458:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2459:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 63 cycles.
2460:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 127 cycles.
2461:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 255 cycles.
2462:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 511 cycles.
2463:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2464:Generated_Source\PSoC4/CapSense_Sensing.c **** *          For devices with CapSense_CSDV2_REF9P6UA_EN = TRUE, the
2465:Generated_Source\PSoC4/CapSense_Sensing.c **** *          mode parameters can take the following values:
2466:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_DIRECT The spreadspectrum is not used.
2467:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC1   The length of LFSR sequence is 3 cycles.
2468:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC2   The length of LFSR sequence is 7 cycles.
2469:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC3   The length of LFSR sequence is 15 cycles.
2470:Generated_Source\PSoC4/CapSense_Sensing.c **** *          CapSense_CLK_SOURCE_SSC4   The length of LFSR sequence is 31 cycles.
2471:Generated_Source\PSoC4/CapSense_Sensing.c **** *
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 66


2472:Generated_Source\PSoC4/CapSense_Sensing.c **** * \return
2473:Generated_Source\PSoC4/CapSense_Sensing.c **** *  Returns the LFSR scale value needed to keep the clock dither in range +/-10%.
2474:Generated_Source\PSoC4/CapSense_Sensing.c **** *
2475:Generated_Source\PSoC4/CapSense_Sensing.c **** *******************************************************************************/
2476:Generated_Source\PSoC4/CapSense_Sensing.c **** static uint8 CapSense_SsCalcLfsrScale(uint32 snsClkDivider, uint8 lfsrSize)
2477:Generated_Source\PSoC4/CapSense_Sensing.c **** {
2478:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrScale;
2479:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrRange;
2480:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 lfsrDither;
2481:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2482:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Initialize the lfsrSize variable with the LFSR Range for given Lfsr Size. */
2483:Generated_Source\PSoC4/CapSense_Sensing.c ****     switch(lfsrSize)
2484:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2485:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC1:
2486:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2487:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC1_RANGE;
2488:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2489:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2490:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC2:
2491:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2492:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC2_RANGE;
2493:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2494:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2495:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC3:
2496:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2497:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC3_RANGE;
2498:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2499:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2500:Generated_Source\PSoC4/CapSense_Sensing.c ****         case CapSense_CLK_SOURCE_SSC4:
2501:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2502:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = CapSense_SNSCLK_SSC4_RANGE;
2503:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2504:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2505:Generated_Source\PSoC4/CapSense_Sensing.c ****         default:
2506:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2507:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrRange = 0u;
2508:Generated_Source\PSoC4/CapSense_Sensing.c ****             break;
2509:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2510:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2511:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2512:Generated_Source\PSoC4/CapSense_Sensing.c ****     /* Calculate the LFSR Scale value that is required to keep the Clock dither
2513:Generated_Source\PSoC4/CapSense_Sensing.c ****      * as close as possible to the +/-10% limit of the used frequency.
2514:Generated_Source\PSoC4/CapSense_Sensing.c ****      */
2515:Generated_Source\PSoC4/CapSense_Sensing.c ****     if((lfsrSize != CapSense_CLK_SOURCE_DIRECT) && (0u != lfsrRange))
2516:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2517:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Calculate the LFSR Dither in percents. */
2518:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrDither  = ((lfsrRange * 100uL) / snsClkDivider);
2519:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2520:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2521:Generated_Source\PSoC4/CapSense_Sensing.c ****         while(lfsrDither < CapSense_LFSR_DITHER_PERCENTAGE)
2522:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2523:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale++;
2524:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrDither <<=1uL;
2525:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2526:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2527:Generated_Source\PSoC4/CapSense_Sensing.c ****         if(lfsrDither > CapSense_LFSR_DITHER_PERCENTAGE)
2528:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 67


2529:Generated_Source\PSoC4/CapSense_Sensing.c ****             lfsrScale--;
2530:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2531:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2532:Generated_Source\PSoC4/CapSense_Sensing.c ****     else
2533:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
2534:Generated_Source\PSoC4/CapSense_Sensing.c ****         lfsrScale = 0uL;
2535:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
2536:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2537:Generated_Source\PSoC4/CapSense_Sensing.c ****     return ((uint8)lfsrScale);
2538:Generated_Source\PSoC4/CapSense_Sensing.c **** }
2539:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2540:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (((CapSense_ENABLE == CapSense_CSX_EN) && \
2541:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_DISABLE == CapSense_CSX_SKIP_OVSMPL_SPECIFIC_NODES) && \
2542:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2543:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSX_TX_CLK_SOURCE)) ||\
2544:Generated_Source\PSoC4/CapSense_Sensing.c ****           ((CapSense_ENABLE == CapSense_CSD_EN) && \
2545:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_ENABLE == CapSense_CSDV2) && \
2546:Generated_Source\PSoC4/CapSense_Sensing.c ****            (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE))) */
2547:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2548:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2549:Generated_Source\PSoC4/CapSense_Sensing.c **** #if (CapSense_ENABLE == CapSense_CSD_EN)
2550:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2551:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsClearCSDSensors
2552:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2553:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2554:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2555:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Resets all the CSD sensors to the non-sampling state by sequentially
2556:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  disconnecting all the sensors from the Analog MUX bus and putting them to
2557:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  an inactive state.
2558:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2559:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2560:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  The function goes through all the widgets and updates appropriate bits in
2561:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  the IO HSIOM, PC and DR registers depending on the Inactive sensor connection
2562:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  parameter. DR register bits are set to zero when the Inactive sensor
2563:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  connection is Ground or Hi-Z.
2564:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2565:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2566:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsClearCSDSensors(void)
2567:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1082              		.loc 1 2567 0
 1083              		.cfi_startproc
 1084              		@ args = 0, pretend = 0, frame = 0
 1085              		@ frame_needed = 0, uses_anonymous_args = 0
 1086 0000 70B5     		push	{r4, r5, r6, lr}
 1087              		.cfi_def_cfa_offset 16
 1088              		.cfi_offset 4, -16
 1089              		.cfi_offset 5, -12
 1090              		.cfi_offset 6, -8
 1091              		.cfi_offset 14, -4
 1092              	.LVL96:
2568:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 wdgtIndex;
2569:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 snsIndex;
2570:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2571:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2572:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 pinIndex;
2573:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2574:Generated_Source\PSoC4/CapSense_Sensing.c **** 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 68


2575:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2576:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Declare ptr to sensor IO structure */
2577:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_IO_STRUCT const *curDedicatedSnsIOPtr;
2578:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Pointer to Flash structure holding info of sensor to be scanned */
2579:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_FLASH_SNS_STRUCT const *curFlashSnsPtr;
2580:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2581:Generated_Source\PSoC4/CapSense_Sensing.c ****         CapSense_FLASH_IO_STRUCT const *curSnsIOPtr;
2582:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         for (wdgtIndex = 0u; wdgtIndex < CapSense_TOTAL_WIDGETS; wdgtIndex++)
 1093              		.loc 1 2583 0
 1094 0002 0025     		movs	r5, #0
 1095 0004 10E0     		b	.L87
 1096              	.LVL97:
 1097              	.L90:
2584:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2585:Generated_Source\PSoC4/CapSense_Sensing.c ****             if (CapSense_SENSE_METHOD_CSD_E ==
2586:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_GET_SENSE_METHOD(&CapSense_dsFlash.wdgtArray[wdgtIndex]))
2587:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2588:Generated_Source\PSoC4/CapSense_Sensing.c ****                 curSnsIOPtr = (CapSense_FLASH_IO_STRUCT const *)
 1098              		.loc 1 2588 0
 1099 0006 6B01     		lsls	r3, r5, #5
 1100 0008 094A     		ldr	r2, .L91
 1101 000a 9E58     		ldr	r6, [r3, r2]
 1102              	.LVL98:
2589:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                 CapSense_dsFlash.wdgtArray[wdgtIndex].ptr2SnsFlash;
2590:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2591:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Go through all the sensors in widget */
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****                 for (snsIndex = 0u; snsIndex < (uint8)CapSense_dsFlash.wdgtArray[wdgtIndex].totalNu
 1103              		.loc 1 2592 0
 1104 000c 0024     		movs	r4, #0
 1105 000e 04E0     		b	.L88
 1106              	.LVL99:
 1107              	.L89:
2593:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
2594:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #if (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN)
2595:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Check ganged sns flag */
2596:Generated_Source\PSoC4/CapSense_Sensing.c ****                         if (CapSense_GANGED_SNS_MASK == (CapSense_dsFlash.wdgtArray[wdgtIndex].stat
2597:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                  CapSense_GANGED_SNS_MASK))
2598:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2599:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Get sns pointer */
2600:Generated_Source\PSoC4/CapSense_Sensing.c ****                             curFlashSnsPtr = (CapSense_FLASH_SNS_STRUCT const *)
2601:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                CapSense_dsFlash.wdgtArray[wdgtIndex
2602:Generated_Source\PSoC4/CapSense_Sensing.c ****                                                                snsIndex;
2603:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2604:Generated_Source\PSoC4/CapSense_Sensing.c ****                             for(pinIndex = 0u; pinIndex < curFlashSnsPtr->numPins; pinIndex++)
2605:Generated_Source\PSoC4/CapSense_Sensing.c ****                             {
2606:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Get IO pointer for dedicated pin */
2607:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 curDedicatedSnsIOPtr = &CapSense_ioList[curFlashSnsPtr->firstPinId 
2608:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2609:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 /* Disconnect dedicated pin */
2610:Generated_Source\PSoC4/CapSense_Sensing.c ****                                 CapSense_CSDDisconnectSns(curDedicatedSnsIOPtr);
2611:Generated_Source\PSoC4/CapSense_Sensing.c ****                             }
2612:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2613:Generated_Source\PSoC4/CapSense_Sensing.c ****                         else
2614:Generated_Source\PSoC4/CapSense_Sensing.c ****                         {
2615:Generated_Source\PSoC4/CapSense_Sensing.c ****                             /* Disable sensor */
2616:Generated_Source\PSoC4/CapSense_Sensing.c ****                             CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 69


2617:Generated_Source\PSoC4/CapSense_Sensing.c ****                         }
2618:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #else
2619:Generated_Source\PSoC4/CapSense_Sensing.c ****                         /* Disable sensor */
2620:Generated_Source\PSoC4/CapSense_Sensing.c ****                         CapSense_CSDDisconnectSns(&curSnsIOPtr[snsIndex]);
 1108              		.loc 1 2620 0 discriminator 3
 1109 0010 6001     		lsls	r0, r4, #5
 1110 0012 3018     		adds	r0, r6, r0
 1111 0014 FFF7FEFF 		bl	CapSense_CSDDisconnectSns
 1112              	.LVL100:
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1113              		.loc 1 2592 0 discriminator 3
 1114 0018 0134     		adds	r4, r4, #1
 1115              	.LVL101:
 1116              	.L88:
2592:Generated_Source\PSoC4/CapSense_Sensing.c ****                 {
 1117              		.loc 1 2592 0 is_stmt 0 discriminator 1
 1118 001a 6B01     		lsls	r3, r5, #5
 1119 001c 044A     		ldr	r2, .L91
 1120 001e D318     		adds	r3, r2, r3
 1121 0020 1B7E     		ldrb	r3, [r3, #24]
 1122 0022 9C42     		cmp	r4, r3
 1123 0024 F4D3     		bcc	.L89
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1124              		.loc 1 2583 0 is_stmt 1 discriminator 2
 1125 0026 0135     		adds	r5, r5, #1
 1126              	.LVL102:
 1127              	.L87:
2583:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1128              		.loc 1 2583 0 is_stmt 0 discriminator 1
 1129 0028 0C2D     		cmp	r5, #12
 1130 002a ECD9     		bls	.L90
2621:Generated_Source\PSoC4/CapSense_Sensing.c ****                     #endif /* (CapSense_ENABLE == CapSense_CSD_GANGED_SNS_EN) */
2622:Generated_Source\PSoC4/CapSense_Sensing.c ****                 }
2623:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2624:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2625:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1131              		.loc 1 2625 0 is_stmt 1
 1132              		@ sp needed
 1133              	.LVL103:
 1134 002c 70BD     		pop	{r4, r5, r6, pc}
 1135              	.L92:
 1136 002e C046     		.align	2
 1137              	.L91:
 1138 0030 00000000 		.word	CapSense_dsFlash
 1139              		.cfi_endproc
 1140              	.LFE22:
 1141              		.size	CapSense_SsClearCSDSensors, .-CapSense_SsClearCSDSensors
 1142              		.section	.text.CapSense_SsCSDGetColSnsClkDivider,"ax",%progbits
 1143              		.align	2
 1144              		.global	CapSense_SsCSDGetColSnsClkDivider
 1145              		.code	16
 1146              		.thumb_func
 1147              		.type	CapSense_SsCSDGetColSnsClkDivider, %function
 1148              	CapSense_SsCSDGetColSnsClkDivider:
 1149              	.LFB23:
2626:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2627:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 70


2628:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDGetColSnsClkDivider
2629:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2630:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2631:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2632:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value for one-dimension widgets
2633:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2634:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2635:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2636:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function gets the Sense Clock Divider value based on the Component
2637:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2638:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2639:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2640:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param widgetId
2641:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Specifies the ID of the widget.
2642:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2643:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return
2644:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  Returns the Sense Clock Divider value for one-dimension widgets
2645:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and the Column Sense Clock divider value for two-dimension widgets.
2646:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2647:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2648:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 CapSense_SsCSDGetColSnsClkDivider(uint32 widgetId)
2649:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1150              		.loc 1 2649 0
 1151              		.cfi_startproc
 1152              		@ args = 0, pretend = 0, frame = 0
 1153              		@ frame_needed = 0, uses_anonymous_args = 0
 1154              		@ link register save eliminated.
 1155              	.LVL104:
2650:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 retVal;
2651:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2652:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2653:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2654:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2655:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2656:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2657:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2658:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2659:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)(ptrWdgt->snsClk);
2660:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2661:Generated_Source\PSoC4/CapSense_Sensing.c ****             retVal = (uint32)CapSense_dsRam.snsCsdClk;
 1156              		.loc 1 2661 0
 1157 0000 014B     		ldr	r3, .L94
 1158 0002 D88D     		ldrh	r0, [r3, #46]
 1159              	.LVL105:
2662:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2663:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2664:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2665:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2666:Generated_Source\PSoC4/CapSense_Sensing.c ****         return (retVal);
2667:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1160              		.loc 1 2667 0
 1161              		@ sp needed
 1162 0004 7047     		bx	lr
 1163              	.L95:
 1164 0006 C046     		.align	2
 1165              	.L94:
 1166 0008 00000000 		.word	CapSense_dsRam
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 71


 1167              		.cfi_endproc
 1168              	.LFE23:
 1169              		.size	CapSense_SsCSDGetColSnsClkDivider, .-CapSense_SsCSDGetColSnsClkDivider
 1170              		.section	.text.CapSense_SsCSDSetColSnsClkDivider,"ax",%progbits
 1171              		.align	2
 1172              		.global	CapSense_SsCSDSetColSnsClkDivider
 1173              		.code	16
 1174              		.thumb_func
 1175              		.type	CapSense_SsCSDSetColSnsClkDivider, %function
 1176              	CapSense_SsCSDSetColSnsClkDivider:
 1177              	.LFB24:
2668:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2669:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2670:Generated_Source\PSoC4/CapSense_Sensing.c ****     /*******************************************************************************
2671:Generated_Source\PSoC4/CapSense_Sensing.c ****     * Function Name: CapSense_SsCSDSetColSnsClkDivider
2672:Generated_Source\PSoC4/CapSense_Sensing.c ****     ****************************************************************************//**
2673:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2674:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \brief
2675:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function sets the Sense Clock Divider value for one-dimension widgets
2676:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  and Column Sense Clock divider value for two-dimension widgets.
2677:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2678:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \details
2679:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  This function sets the Sense Clock Divider value based on the Component
2680:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  configuration. The function is applicable for one-dimension widgets and for
2681:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  two-dimension widgets.
2682:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2683:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \param
2684:Generated_Source\PSoC4/CapSense_Sensing.c ****     *  widgetId Specifies the ID of the widget.
2685:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2686:Generated_Source\PSoC4/CapSense_Sensing.c ****     * \return The Sense Clock Divider value for one-dimension widgets
2687:Generated_Source\PSoC4/CapSense_Sensing.c ****     *        and the Column Sense Clock divider value for two-dimension widgets.
2688:Generated_Source\PSoC4/CapSense_Sensing.c ****     *
2689:Generated_Source\PSoC4/CapSense_Sensing.c ****     *******************************************************************************/
2690:Generated_Source\PSoC4/CapSense_Sensing.c ****     void CapSense_SsCSDSetColSnsClkDivider(uint32 widgetId, uint32 dividerVal)
2691:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1178              		.loc 1 2691 0
 1179              		.cfi_startproc
 1180              		@ args = 0, pretend = 0, frame = 0
 1181              		@ frame_needed = 0, uses_anonymous_args = 0
 1182              		@ link register save eliminated.
 1183              	.LVL106:
2692:Generated_Source\PSoC4/CapSense_Sensing.c ****         /* Get sense divider based on configuration */
2693:Generated_Source\PSoC4/CapSense_Sensing.c ****         #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2694:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2695:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2696:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2697:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2698:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2699:Generated_Source\PSoC4/CapSense_Sensing.c ****             ptrWdgt->snsClk = (uint16)dividerVal;
2700:Generated_Source\PSoC4/CapSense_Sensing.c ****         #else
2701:Generated_Source\PSoC4/CapSense_Sensing.c ****             CapSense_dsRam.snsCsdClk = (uint16)dividerVal;
 1184              		.loc 1 2701 0
 1185 0000 014B     		ldr	r3, .L97
 1186 0002 D985     		strh	r1, [r3, #46]
2702:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2703:Generated_Source\PSoC4/CapSense_Sensing.c ****             (void)widgetId; /* This parameter is unused in such configurations */
2704:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 72


2705:Generated_Source\PSoC4/CapSense_Sensing.c ****     }
 1187              		.loc 1 2705 0
 1188              		@ sp needed
 1189 0004 7047     		bx	lr
 1190              	.L98:
 1191 0006 C046     		.align	2
 1192              	.L97:
 1193 0008 00000000 		.word	CapSense_dsRam
 1194              		.cfi_endproc
 1195              	.LFE24:
 1196              		.size	CapSense_SsCSDSetColSnsClkDivider, .-CapSense_SsCSDSetColSnsClkDivider
 1197              		.section	.text.CapSense_SsCSDCalcPrsSize,"ax",%progbits
 1198              		.align	2
 1199              		.global	CapSense_SsCSDCalcPrsSize
 1200              		.code	16
 1201              		.thumb_func
 1202              		.type	CapSense_SsCSDCalcPrsSize, %function
 1203              	CapSense_SsCSDCalcPrsSize:
 1204              	.LFB25:
2706:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2707:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2708:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN)
2709:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2710:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDGetRowSnsClkDivider
2711:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2712:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2713:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2714:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value for one-dimension widgets
2715:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and the Column Sense Clock divider value for two-dimension widgets.
2716:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2717:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2718:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  This function gets the Sense Clock Divider value based on the Component
2719:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  configuration. The function is applicable for one-dimension widgets and for
2720:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  two-dimension widgets.
2721:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2722:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2723:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  widgetId Specifies the ID of the widget.
2724:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2725:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return
2726:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  Returns the sense clock divider value for one-dimension widgets
2727:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  and column sense clock divider value for two-dimension widgets.
2728:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2729:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2730:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint32 CapSense_SsCSDGetRowSnsClkDivider(uint32 widgetId)
2731:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
2732:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 retVal;
2733:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2734:Generated_Source\PSoC4/CapSense_Sensing.c ****             /* Get sense divider based on configuration */
2735:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if (CapSense_ENABLE != CapSense_CSD_COMMON_SNS_CLK_EN)
2736:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_RAM_WD_BASE_STRUCT *ptrWdgt;
2737:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2738:Generated_Source\PSoC4/CapSense_Sensing.c ****                 ptrWdgt = (CapSense_RAM_WD_BASE_STRUCT *)
2739:Generated_Source\PSoC4/CapSense_Sensing.c ****                 CapSense_dsFlash.wdgtArray[widgetId].ptr2WdgtRam;
2740:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2741:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = ptrWdgt->rowSnsClk;
2742:Generated_Source\PSoC4/CapSense_Sensing.c ****             #else
2743:Generated_Source\PSoC4/CapSense_Sensing.c ****                 retVal = (uint32)CapSense_dsRam.snsCsdClk;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 73


2744:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2745:Generated_Source\PSoC4/CapSense_Sensing.c ****                 (void)widgetId; /* This parameter is unused in such configurations */
2746:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif /* (CapSense_ENABLE == CapSense_CSD_COMMON_SNS_CLK_EN) */
2747:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2748:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (retVal);
2749:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
2750:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2751:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_CSD_MATRIX_WIDGET_EN || CapSense_CSD_TOUCHPAD_WIDGET_EN) */
2752:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2753:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2754:Generated_Source\PSoC4/CapSense_Sensing.c ****     #if (CapSense_CLK_SOURCE_PRSAUTO == CapSense_CSD_SNS_CLK_SOURCE)
2755:Generated_Source\PSoC4/CapSense_Sensing.c ****         /*******************************************************************************
2756:Generated_Source\PSoC4/CapSense_Sensing.c ****         * Function Name: CapSense_SsCSDCalcPrsSize
2757:Generated_Source\PSoC4/CapSense_Sensing.c ****         ****************************************************************************//**
2758:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2759:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \brief
2760:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The function finds PRS polynomial size in the Auto mode.
2761:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2762:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \details
2763:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  The PRS polynomial size in the Auto mode is found based on the following
2764:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  requirements:
2765:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  - at least one full spread spectrum polynomial should pass during scan time.
2766:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2767:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \param
2768:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  snsClkDivider The divider value for the sense clock.
2769:Generated_Source\PSoC4/CapSense_Sensing.c ****         *  resolution The widget resolution.
2770:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2771:Generated_Source\PSoC4/CapSense_Sensing.c ****         * \return prsSize PRS value for SENSE_PERIOD register.
2772:Generated_Source\PSoC4/CapSense_Sensing.c ****         *
2773:Generated_Source\PSoC4/CapSense_Sensing.c ****         *******************************************************************************/
2774:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 CapSense_SsCSDCalcPrsSize(uint32 snsClkDivider, uint32 resolution)
2775:Generated_Source\PSoC4/CapSense_Sensing.c ****         {
 1205              		.loc 1 2775 0
 1206              		.cfi_startproc
 1207              		@ args = 0, pretend = 0, frame = 0
 1208              		@ frame_needed = 0, uses_anonymous_args = 0
 1209              	.LVL107:
 1210 0000 10B5     		push	{r4, lr}
 1211              		.cfi_def_cfa_offset 8
 1212              		.cfi_offset 4, -8
 1213              		.cfi_offset 14, -4
 1214              	.LVL108:
2776:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 prsSize;
2777:Generated_Source\PSoC4/CapSense_Sensing.c ****             uint32 modClkDivider = 1u;
2778:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2779:Generated_Source\PSoC4/CapSense_Sensing.c ****             #if ((CapSense_ENABLE != CapSense_CSDV2) && \
2780:Generated_Source\PSoC4/CapSense_Sensing.c ****                  (CapSense_ENABLE == CapSense_IS_M0S8PERI_BLOCK))
2781:Generated_Source\PSoC4/CapSense_Sensing.c ****                     modClkDivider = (uint32)CapSense_dsRam.modCsdClk;
 1215              		.loc 1 2781 0
 1216 0002 2C23     		movs	r3, #44
 1217 0004 0A4A     		ldr	r2, .L103
 1218 0006 D45C     		ldrb	r4, [r2, r3]
 1219              	.LVL109:
2782:Generated_Source\PSoC4/CapSense_Sensing.c ****             #endif
2783:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2784:Generated_Source\PSoC4/CapSense_Sensing.c ****             if ((snsClkDivider * CapSense_PRS_LENGTH_12_BITS) <= (modClkDivider * ((0x00000001Lu <<
 1220              		.loc 1 2784 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 74


 1221 0008 0203     		lsls	r2, r0, #12
 1222 000a 121A     		subs	r2, r2, r0
 1223 000c 2B3B     		subs	r3, r3, #43
 1224 000e 8B40     		lsls	r3, r3, r1
 1225 0010 013B     		subs	r3, r3, #1
 1226 0012 6343     		muls	r3, r4
 1227 0014 9A42     		cmp	r2, r3
 1228 0016 05D9     		bls	.L101
2785:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2786:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS12 mode */
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_12_CONFIG;
2788:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2789:Generated_Source\PSoC4/CapSense_Sensing.c ****             else if ((snsClkDivider * CapSense_PRS_LENGTH_8_BITS) <= (modClkDivider * ((0x00000001L
 1229              		.loc 1 2789 0
 1230 0018 0202     		lsls	r2, r0, #8
 1231 001a 101A     		subs	r0, r2, r0
 1232              	.LVL110:
 1233 001c 8342     		cmp	r3, r0
 1234 001e 03D3     		bcc	.L102
2790:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2791:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set PRS8 mode */
2792:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_PRS_8_CONFIG;
 1235              		.loc 1 2792 0
 1236 0020 4020     		movs	r0, #64
 1237 0022 02E0     		b	.L100
 1238              	.LVL111:
 1239              	.L101:
2787:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
 1240              		.loc 1 2787 0
 1241 0024 C020     		movs	r0, #192
 1242              	.LVL112:
 1243 0026 00E0     		b	.L100
 1244              	.L102:
2793:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2794:Generated_Source\PSoC4/CapSense_Sensing.c ****             else
2795:Generated_Source\PSoC4/CapSense_Sensing.c ****             {
2796:Generated_Source\PSoC4/CapSense_Sensing.c ****                 /* Set Direct clock mode */
2797:Generated_Source\PSoC4/CapSense_Sensing.c ****                 prsSize = CapSense_CLK_SOURCE_DIRECT;
 1245              		.loc 1 2797 0
 1246 0028 0020     		movs	r0, #0
 1247              	.L100:
 1248              	.LVL113:
2798:Generated_Source\PSoC4/CapSense_Sensing.c ****             }
2799:Generated_Source\PSoC4/CapSense_Sensing.c **** 
2800:Generated_Source\PSoC4/CapSense_Sensing.c ****             return (uint8)prsSize;
 1249              		.loc 1 2800 0
 1250 002a C0B2     		uxtb	r0, r0
 1251              	.LVL114:
2801:Generated_Source\PSoC4/CapSense_Sensing.c ****         }
 1252              		.loc 1 2801 0
 1253              		@ sp needed
 1254              	.LVL115:
 1255 002c 10BD     		pop	{r4, pc}
 1256              	.L104:
 1257 002e C046     		.align	2
 1258              	.L103:
 1259 0030 00000000 		.word	CapSense_dsRam
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 75


 1260              		.cfi_endproc
 1261              	.LFE25:
 1262              		.size	CapSense_SsCSDCalcPrsSize, .-CapSense_SsCSDCalcPrsSize
 1263              		.section	.text.CapSense_SsSetWidgetSenseClkSrc,"ax",%progbits
 1264              		.align	2
 1265              		.code	16
 1266              		.thumb_func
 1267              		.type	CapSense_SsSetWidgetSenseClkSrc, %function
 1268              	CapSense_SsSetWidgetSenseClkSrc:
 1269              	.LFB21:
2239:Generated_Source\PSoC4/CapSense_Sensing.c ****         uint8 lfsrSize;
 1270              		.loc 1 2239 0
 1271              		.cfi_startproc
 1272              		@ args = 0, pretend = 0, frame = 0
 1273              		@ frame_needed = 0, uses_anonymous_args = 0
 1274              	.LVL116:
 1275 0000 10B5     		push	{r4, lr}
 1276              		.cfi_def_cfa_offset 8
 1277              		.cfi_offset 4, -8
 1278              		.cfi_offset 14, -4
 1279 0002 0C00     		movs	r4, r1
2251:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1280              		.loc 1 2251 0
 1281 0004 FFF7FEFF 		bl	CapSense_SsCSDGetColSnsClkDivider
 1282              	.LVL117:
2271:Generated_Source\PSoC4/CapSense_Sensing.c ****                 lfsrScale = 0u;
 1283              		.loc 1 2271 0
 1284 0008 4000     		lsls	r0, r0, #1
 1285              	.LVL118:
 1286 000a 6188     		ldrh	r1, [r4, #2]
 1287 000c FFF7FEFF 		bl	CapSense_SsCSDCalcPrsSize
 1288              	.LVL119:
2280:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1289              		.loc 1 2280 0
 1290 0010 2073     		strb	r0, [r4, #12]
2315:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* (CapSense_ENABLE == CapSense_CSD_EN) */
 1291              		.loc 1 2315 0
 1292              		@ sp needed
 1293              	.LVL120:
 1294 0012 10BD     		pop	{r4, pc}
 1295              		.cfi_endproc
 1296              	.LFE21:
 1297              		.size	CapSense_SsSetWidgetSenseClkSrc, .-CapSense_SsSetWidgetSenseClkSrc
 1298              		.section	.text.CapSense_SsInitializeSourceSenseClk,"ax",%progbits
 1299              		.align	2
 1300              		.global	CapSense_SsInitializeSourceSenseClk
 1301              		.code	16
 1302              		.thumb_func
 1303              		.type	CapSense_SsInitializeSourceSenseClk, %function
 1304              	CapSense_SsInitializeSourceSenseClk:
 1305              	.LFB20:
2186:Generated_Source\PSoC4/CapSense_Sensing.c ****     uint32 wdgtIndex;
 1306              		.loc 1 2186 0
 1307              		.cfi_startproc
 1308              		@ args = 0, pretend = 0, frame = 0
 1309              		@ frame_needed = 0, uses_anonymous_args = 0
 1310 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 76


 1311              		.cfi_def_cfa_offset 8
 1312              		.cfi_offset 4, -8
 1313              		.cfi_offset 14, -4
 1314              	.LVL121:
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1315              		.loc 1 2190 0
 1316 0002 0024     		movs	r4, #0
 1317 0004 0AE0     		b	.L107
 1318              	.LVL122:
 1319              	.L108:
2192:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1320              		.loc 1 2192 0
 1321 0006 6301     		lsls	r3, r4, #5
 1322 0008 064A     		ldr	r2, .L109
 1323 000a D318     		adds	r3, r2, r3
 1324 000c 5968     		ldr	r1, [r3, #4]
 1325              	.LVL123:
2198:Generated_Source\PSoC4/CapSense_Sensing.c ****                 break;
 1326              		.loc 1 2198 0
 1327 000e 2000     		movs	r0, r4
 1328 0010 FFF7FEFF 		bl	CapSense_SsSetWidgetSenseClkSrc
 1329              	.LVL124:
2210:Generated_Source\PSoC4/CapSense_Sensing.c ****         #endif /* (CapSense_ENABLE == CapSense_TST_WDGT_CRC_EN) */
 1330              		.loc 1 2210 0
 1331 0014 2000     		movs	r0, r4
 1332 0016 FFF7FEFF 		bl	CapSense_DsUpdateWidgetCrc
 1333              	.LVL125:
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1334              		.loc 1 2190 0
 1335 001a 0134     		adds	r4, r4, #1
 1336              	.LVL126:
 1337              	.L107:
2190:Generated_Source\PSoC4/CapSense_Sensing.c ****     {
 1338              		.loc 1 2190 0 is_stmt 0 discriminator 1
 1339 001c 0C2C     		cmp	r4, #12
 1340 001e F2D9     		bls	.L108
2213:Generated_Source\PSoC4/CapSense_Sensing.c **** #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) || \
 1341              		.loc 1 2213 0 is_stmt 1
 1342              		@ sp needed
 1343              	.LVL127:
 1344 0020 10BD     		pop	{r4, pc}
 1345              	.L110:
 1346 0022 C046     		.align	2
 1347              	.L109:
 1348 0024 00000000 		.word	CapSense_dsFlash
 1349              		.cfi_endproc
 1350              	.LFE20:
 1351              		.size	CapSense_SsInitializeSourceSenseClk, .-CapSense_SsInitializeSourceSenseClk
 1352              		.section	.text.CapSense_SsInitialize,"ax",%progbits
 1353              		.align	2
 1354              		.global	CapSense_SsInitialize
 1355              		.code	16
 1356              		.thumb_func
 1357              		.type	CapSense_SsInitialize, %function
 1358              	CapSense_SsInitialize:
 1359              	.LFB6:
 517:Generated_Source\PSoC4/CapSense_Sensing.c ****     cystatus initStatus;
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 77


 1360              		.loc 1 517 0
 1361              		.cfi_startproc
 1362              		@ args = 0, pretend = 0, frame = 0
 1363              		@ frame_needed = 0, uses_anonymous_args = 0
 1364 0000 10B5     		push	{r4, lr}
 1365              		.cfi_def_cfa_offset 8
 1366              		.cfi_offset 4, -8
 1367              		.cfi_offset 14, -4
 1368              	.LVL128:
 551:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* (CapSense_ENABLE == CapSense_CSDV2) */
 1369              		.loc 1 551 0
 1370 0002 FFF7FEFF 		bl	CapSense_SsTrimIdacs
 1371              	.LVL129:
 556:Generated_Source\PSoC4/CapSense_Sensing.c ****     #endif /* ((CapSense_ENABLE == CapSense_CSD_EN) ||\
 1372              		.loc 1 556 0
 1373 0006 FFF7FEFF 		bl	CapSense_SsInitializeSourceSenseClk
 1374              	.LVL130:
 561:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1375              		.loc 1 561 0
 1376 000a FFF7FEFF 		bl	CapSense_SsSetIOsInDefaultState
 1377              	.LVL131:
 565:Generated_Source\PSoC4/CapSense_Sensing.c ****     #elif (CapSense_ENABLE == CapSense_CSD_EN)
 1378              		.loc 1 565 0
 1379 000e 0020     		movs	r0, #0
 1380 0010 FFF7FEFF 		bl	CapSense_SsSwitchSensingMode
 1381              	.LVL132:
 578:Generated_Source\PSoC4/CapSense_Sensing.c **** 
 1382              		.loc 1 578 0
 1383 0014 0020     		movs	r0, #0
 1384              		@ sp needed
 1385 0016 10BD     		pop	{r4, pc}
 1386              		.cfi_endproc
 1387              	.LFE6:
 1388              		.size	CapSense_SsInitialize, .-CapSense_SsInitialize
 1389              		.comm	CapSense_curSnsIOPtr,4,4
 1390              		.comm	CapSense_curRamSnsPtr,4,4
 1391              		.global	CapSense_requestScanAllWidget
 1392              		.global	CapSense_sensorIndex
 1393              		.global	CapSense_widgetIndex
 1394              		.global	CapSense_scanFreqIndex
 1395              		.global	CapSense_currentSenseMethod
 1396              		.section	.rodata
 1397              		.type	CapSense_scanFreqIndex, %object
 1398              		.size	CapSense_scanFreqIndex, 1
 1399              	CapSense_scanFreqIndex:
 1400 0000 00       		.space	1
 1401              		.bss
 1402              		.set	.LANCHOR0,. + 0
 1403              		.type	CapSense_currentSenseMethod, %object
 1404              		.size	CapSense_currentSenseMethod, 1
 1405              	CapSense_currentSenseMethod:
 1406 0000 00       		.space	1
 1407              		.type	CapSense_requestScanAllWidget, %object
 1408              		.size	CapSense_requestScanAllWidget, 1
 1409              	CapSense_requestScanAllWidget:
 1410 0001 00       		.space	1
 1411              		.type	CapSense_widgetIndex, %object
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 78


 1412              		.size	CapSense_widgetIndex, 1
 1413              	CapSense_widgetIndex:
 1414 0002 00       		.space	1
 1415              		.type	CapSense_sensorIndex, %object
 1416              		.size	CapSense_sensorIndex, 1
 1417              	CapSense_sensorIndex:
 1418 0003 00       		.space	1
 1419              		.text
 1420              	.Letext0:
 1421              		.file 2 "Generated_Source\\PSoC4/cytypes.h"
 1422              		.file 3 "Generated_Source\\PSoC4\\CapSense_Configuration.h"
 1423              		.file 4 "Generated_Source\\PSoC4\\CapSense_Structure.h"
 1424              		.file 5 "Generated_Source\\PSoC4\\CapSense_SensingCSD_LL.h"
 1425              		.file 6 "Generated_Source\\PSoC4/CyLib.h"
 1426              		.file 7 "Generated_Source\\PSoC4\\CapSense_SelfTest.h"
 1427              		.file 8 "Generated_Source\\PSoC4\\CapSense_ISR.h"
 1428              		.section	.debug_info,"",%progbits
 1429              	.Ldebug_info0:
 1430 0000 A9110000 		.4byte	0x11a9
 1431 0004 0400     		.2byte	0x4
 1432 0006 00000000 		.4byte	.Ldebug_abbrev0
 1433 000a 04       		.byte	0x4
 1434 000b 01       		.uleb128 0x1
 1435 000c E4020000 		.4byte	.LASF202
 1436 0010 0C       		.byte	0xc
 1437 0011 FA080000 		.4byte	.LASF203
 1438 0015 9F040000 		.4byte	.LASF204
 1439 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1440 001d 00000000 		.4byte	0
 1441 0021 00000000 		.4byte	.Ldebug_line0
 1442 0025 02       		.uleb128 0x2
 1443 0026 01       		.byte	0x1
 1444 0027 06       		.byte	0x6
 1445 0028 970B0000 		.4byte	.LASF0
 1446 002c 02       		.uleb128 0x2
 1447 002d 01       		.byte	0x1
 1448 002e 08       		.byte	0x8
 1449 002f 5E0A0000 		.4byte	.LASF1
 1450 0033 02       		.uleb128 0x2
 1451 0034 02       		.byte	0x2
 1452 0035 05       		.byte	0x5
 1453 0036 AA070000 		.4byte	.LASF2
 1454 003a 02       		.uleb128 0x2
 1455 003b 02       		.byte	0x2
 1456 003c 07       		.byte	0x7
 1457 003d BF0B0000 		.4byte	.LASF3
 1458 0041 02       		.uleb128 0x2
 1459 0042 04       		.byte	0x4
 1460 0043 05       		.byte	0x5
 1461 0044 E2070000 		.4byte	.LASF4
 1462 0048 02       		.uleb128 0x2
 1463 0049 04       		.byte	0x4
 1464 004a 07       		.byte	0x7
 1465 004b 96090000 		.4byte	.LASF5
 1466 004f 02       		.uleb128 0x2
 1467 0050 08       		.byte	0x8
 1468 0051 05       		.byte	0x5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 79


 1469 0052 7D050000 		.4byte	.LASF6
 1470 0056 02       		.uleb128 0x2
 1471 0057 08       		.byte	0x8
 1472 0058 07       		.byte	0x7
 1473 0059 4D020000 		.4byte	.LASF7
 1474 005d 03       		.uleb128 0x3
 1475 005e 04       		.byte	0x4
 1476 005f 05       		.byte	0x5
 1477 0060 696E7400 		.ascii	"int\000"
 1478 0064 02       		.uleb128 0x2
 1479 0065 04       		.byte	0x4
 1480 0066 07       		.byte	0x7
 1481 0067 DC000000 		.4byte	.LASF8
 1482 006b 04       		.uleb128 0x4
 1483 006c 1A0C0000 		.4byte	.LASF9
 1484 0070 02       		.byte	0x2
 1485 0071 E401     		.2byte	0x1e4
 1486 0073 2C000000 		.4byte	0x2c
 1487 0077 04       		.uleb128 0x4
 1488 0078 98040000 		.4byte	.LASF10
 1489 007c 02       		.byte	0x2
 1490 007d E501     		.2byte	0x1e5
 1491 007f 3A000000 		.4byte	0x3a
 1492 0083 04       		.uleb128 0x4
 1493 0084 90060000 		.4byte	.LASF11
 1494 0088 02       		.byte	0x2
 1495 0089 E601     		.2byte	0x1e6
 1496 008b 48000000 		.4byte	0x48
 1497 008f 02       		.uleb128 0x2
 1498 0090 04       		.byte	0x4
 1499 0091 04       		.byte	0x4
 1500 0092 06020000 		.4byte	.LASF12
 1501 0096 02       		.uleb128 0x2
 1502 0097 08       		.byte	0x8
 1503 0098 04       		.byte	0x4
 1504 0099 200C0000 		.4byte	.LASF13
 1505 009d 02       		.uleb128 0x2
 1506 009e 01       		.byte	0x1
 1507 009f 08       		.byte	0x8
 1508 00a0 54040000 		.4byte	.LASF14
 1509 00a4 04       		.uleb128 0x4
 1510 00a5 340A0000 		.4byte	.LASF15
 1511 00a9 02       		.byte	0x2
 1512 00aa 8602     		.2byte	0x286
 1513 00ac 48000000 		.4byte	0x48
 1514 00b0 04       		.uleb128 0x4
 1515 00b1 20010000 		.4byte	.LASF16
 1516 00b5 02       		.byte	0x2
 1517 00b6 8E02     		.2byte	0x28e
 1518 00b8 BC000000 		.4byte	0xbc
 1519 00bc 05       		.uleb128 0x5
 1520 00bd 6B000000 		.4byte	0x6b
 1521 00c1 04       		.uleb128 0x4
 1522 00c2 21070000 		.4byte	.LASF17
 1523 00c6 02       		.byte	0x2
 1524 00c7 9002     		.2byte	0x290
 1525 00c9 CD000000 		.4byte	0xcd
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 80


 1526 00cd 05       		.uleb128 0x5
 1527 00ce 83000000 		.4byte	0x83
 1528 00d2 04       		.uleb128 0x4
 1529 00d3 5E060000 		.4byte	.LASF18
 1530 00d7 02       		.byte	0x2
 1531 00d8 A002     		.2byte	0x2a0
 1532 00da DE000000 		.4byte	0xde
 1533 00de 06       		.uleb128 0x6
 1534 00df 04       		.byte	0x4
 1535 00e0 E4000000 		.4byte	0xe4
 1536 00e4 07       		.uleb128 0x7
 1537 00e5 04       		.uleb128 0x4
 1538 00e6 AA0A0000 		.4byte	.LASF19
 1539 00ea 03       		.byte	0x3
 1540 00eb 4D01     		.2byte	0x14d
 1541 00ed 77000000 		.4byte	0x77
 1542 00f1 04       		.uleb128 0x4
 1543 00f2 1A050000 		.4byte	.LASF20
 1544 00f6 03       		.byte	0x3
 1545 00f7 5101     		.2byte	0x151
 1546 00f9 6B000000 		.4byte	0x6b
 1547 00fd 08       		.uleb128 0x8
 1548 00fe 01       		.byte	0x1
 1549 00ff 2C000000 		.4byte	0x2c
 1550 0103 04       		.byte	0x4
 1551 0104 70       		.byte	0x70
 1552 0105 28010000 		.4byte	0x128
 1553 0109 09       		.uleb128 0x9
 1554 010a C7000000 		.4byte	.LASF21
 1555 010e 00       		.byte	0
 1556 010f 09       		.uleb128 0x9
 1557 0110 3B090000 		.4byte	.LASF22
 1558 0114 01       		.byte	0x1
 1559 0115 09       		.uleb128 0x9
 1560 0116 04080000 		.4byte	.LASF23
 1561 011a 02       		.byte	0x2
 1562 011b 09       		.uleb128 0x9
 1563 011c DC0A0000 		.4byte	.LASF24
 1564 0120 03       		.byte	0x3
 1565 0121 09       		.uleb128 0x9
 1566 0122 F9060000 		.4byte	.LASF25
 1567 0126 04       		.byte	0x4
 1568 0127 00       		.byte	0
 1569 0128 0A       		.uleb128 0xa
 1570 0129 53050000 		.4byte	.LASF26
 1571 012d 04       		.byte	0x4
 1572 012e 76       		.byte	0x76
 1573 012f FD000000 		.4byte	0xfd
 1574 0133 0B       		.uleb128 0xb
 1575 0134 0E       		.byte	0xe
 1576 0135 04       		.byte	0x4
 1577 0136 8E       		.byte	0x8e
 1578 0137 B4010000 		.4byte	0x1b4
 1579 013b 0C       		.uleb128 0xc
 1580 013c 63726300 		.ascii	"crc\000"
 1581 0140 04       		.byte	0x4
 1582 0141 93       		.byte	0x93
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 81


 1583 0142 77000000 		.4byte	0x77
 1584 0146 00       		.byte	0
 1585 0147 0D       		.uleb128 0xd
 1586 0148 EF040000 		.4byte	.LASF27
 1587 014c 04       		.byte	0x4
 1588 014d 98       		.byte	0x98
 1589 014e 77000000 		.4byte	0x77
 1590 0152 02       		.byte	0x2
 1591 0153 0D       		.uleb128 0xd
 1592 0154 050A0000 		.4byte	.LASF28
 1593 0158 04       		.byte	0x4
 1594 0159 9D       		.byte	0x9d
 1595 015a E5000000 		.4byte	0xe5
 1596 015e 04       		.byte	0x4
 1597 015f 0D       		.uleb128 0xd
 1598 0160 4C040000 		.4byte	.LASF29
 1599 0164 04       		.byte	0x4
 1600 0165 A2       		.byte	0xa2
 1601 0166 6B000000 		.4byte	0x6b
 1602 016a 06       		.byte	0x6
 1603 016b 0D       		.uleb128 0xd
 1604 016c 4A060000 		.4byte	.LASF30
 1605 0170 04       		.byte	0x4
 1606 0171 A7       		.byte	0xa7
 1607 0172 6B000000 		.4byte	0x6b
 1608 0176 07       		.byte	0x7
 1609 0177 0D       		.uleb128 0xd
 1610 0178 E9030000 		.4byte	.LASF31
 1611 017c 04       		.byte	0x4
 1612 017d AD       		.byte	0xad
 1613 017e 6B000000 		.4byte	0x6b
 1614 0182 08       		.byte	0x8
 1615 0183 0D       		.uleb128 0xd
 1616 0184 AC050000 		.4byte	.LASF32
 1617 0188 04       		.byte	0x4
 1618 0189 B3       		.byte	0xb3
 1619 018a 6B000000 		.4byte	0x6b
 1620 018e 09       		.byte	0x9
 1621 018f 0D       		.uleb128 0xd
 1622 0190 0D040000 		.4byte	.LASF33
 1623 0194 04       		.byte	0x4
 1624 0195 BA       		.byte	0xba
 1625 0196 F1000000 		.4byte	0xf1
 1626 019a 0A       		.byte	0xa
 1627 019b 0D       		.uleb128 0xd
 1628 019c B7090000 		.4byte	.LASF34
 1629 01a0 04       		.byte	0x4
 1630 01a1 C1       		.byte	0xc1
 1631 01a2 B4010000 		.4byte	0x1b4
 1632 01a6 0B       		.byte	0xb
 1633 01a7 0D       		.uleb128 0xd
 1634 01a8 67070000 		.4byte	.LASF35
 1635 01ac 04       		.byte	0x4
 1636 01ad C6       		.byte	0xc6
 1637 01ae 6B000000 		.4byte	0x6b
 1638 01b2 0C       		.byte	0xc
 1639 01b3 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 82


 1640 01b4 0E       		.uleb128 0xe
 1641 01b5 6B000000 		.4byte	0x6b
 1642 01b9 C4010000 		.4byte	0x1c4
 1643 01bd 0F       		.uleb128 0xf
 1644 01be C4010000 		.4byte	0x1c4
 1645 01c2 00       		.byte	0
 1646 01c3 00       		.byte	0
 1647 01c4 02       		.uleb128 0x2
 1648 01c5 04       		.byte	0x4
 1649 01c6 07       		.byte	0x7
 1650 01c7 7B090000 		.4byte	.LASF36
 1651 01cb 0A       		.uleb128 0xa
 1652 01cc 6B060000 		.4byte	.LASF37
 1653 01d0 04       		.byte	0x4
 1654 01d1 C7       		.byte	0xc7
 1655 01d2 33010000 		.4byte	0x133
 1656 01d6 0B       		.uleb128 0xb
 1657 01d7 0E       		.byte	0xe
 1658 01d8 04       		.byte	0x4
 1659 01d9 CC       		.byte	0xcc
 1660 01da 58020000 		.4byte	0x258
 1661 01de 0C       		.uleb128 0xc
 1662 01df 63726300 		.ascii	"crc\000"
 1663 01e3 04       		.byte	0x4
 1664 01e4 D1       		.byte	0xd1
 1665 01e5 77000000 		.4byte	0x77
 1666 01e9 00       		.byte	0
 1667 01ea 0D       		.uleb128 0xd
 1668 01eb EF040000 		.4byte	.LASF27
 1669 01ef 04       		.byte	0x4
 1670 01f0 D6       		.byte	0xd6
 1671 01f1 77000000 		.4byte	0x77
 1672 01f5 02       		.byte	0x2
 1673 01f6 0D       		.uleb128 0xd
 1674 01f7 050A0000 		.4byte	.LASF28
 1675 01fb 04       		.byte	0x4
 1676 01fc DB       		.byte	0xdb
 1677 01fd E5000000 		.4byte	0xe5
 1678 0201 04       		.byte	0x4
 1679 0202 0D       		.uleb128 0xd
 1680 0203 4C040000 		.4byte	.LASF29
 1681 0207 04       		.byte	0x4
 1682 0208 E0       		.byte	0xe0
 1683 0209 6B000000 		.4byte	0x6b
 1684 020d 06       		.byte	0x6
 1685 020e 0D       		.uleb128 0xd
 1686 020f 4A060000 		.4byte	.LASF30
 1687 0213 04       		.byte	0x4
 1688 0214 E5       		.byte	0xe5
 1689 0215 6B000000 		.4byte	0x6b
 1690 0219 07       		.byte	0x7
 1691 021a 0D       		.uleb128 0xd
 1692 021b E9030000 		.4byte	.LASF31
 1693 021f 04       		.byte	0x4
 1694 0220 EB       		.byte	0xeb
 1695 0221 6B000000 		.4byte	0x6b
 1696 0225 08       		.byte	0x8
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 83


 1697 0226 0D       		.uleb128 0xd
 1698 0227 AC050000 		.4byte	.LASF32
 1699 022b 04       		.byte	0x4
 1700 022c F1       		.byte	0xf1
 1701 022d 6B000000 		.4byte	0x6b
 1702 0231 09       		.byte	0x9
 1703 0232 0D       		.uleb128 0xd
 1704 0233 0D040000 		.4byte	.LASF33
 1705 0237 04       		.byte	0x4
 1706 0238 F8       		.byte	0xf8
 1707 0239 F1000000 		.4byte	0xf1
 1708 023d 0A       		.byte	0xa
 1709 023e 0D       		.uleb128 0xd
 1710 023f B7090000 		.4byte	.LASF34
 1711 0243 04       		.byte	0x4
 1712 0244 FF       		.byte	0xff
 1713 0245 B4010000 		.4byte	0x1b4
 1714 0249 0B       		.byte	0xb
 1715 024a 10       		.uleb128 0x10
 1716 024b 67070000 		.4byte	.LASF35
 1717 024f 04       		.byte	0x4
 1718 0250 0401     		.2byte	0x104
 1719 0252 6B000000 		.4byte	0x6b
 1720 0256 0C       		.byte	0xc
 1721 0257 00       		.byte	0
 1722 0258 04       		.uleb128 0x4
 1723 0259 160A0000 		.4byte	.LASF38
 1724 025d 04       		.byte	0x4
 1725 025e 0501     		.2byte	0x105
 1726 0260 D6010000 		.4byte	0x1d6
 1727 0264 11       		.uleb128 0x11
 1728 0265 10       		.byte	0x10
 1729 0266 04       		.byte	0x4
 1730 0267 0A01     		.2byte	0x10a
 1731 0269 FD020000 		.4byte	0x2fd
 1732 026d 12       		.uleb128 0x12
 1733 026e 63726300 		.ascii	"crc\000"
 1734 0272 04       		.byte	0x4
 1735 0273 0F01     		.2byte	0x10f
 1736 0275 77000000 		.4byte	0x77
 1737 0279 00       		.byte	0
 1738 027a 10       		.uleb128 0x10
 1739 027b EF040000 		.4byte	.LASF27
 1740 027f 04       		.byte	0x4
 1741 0280 1401     		.2byte	0x114
 1742 0282 77000000 		.4byte	0x77
 1743 0286 02       		.byte	0x2
 1744 0287 10       		.uleb128 0x10
 1745 0288 050A0000 		.4byte	.LASF28
 1746 028c 04       		.byte	0x4
 1747 028d 1901     		.2byte	0x119
 1748 028f E5000000 		.4byte	0xe5
 1749 0293 04       		.byte	0x4
 1750 0294 10       		.uleb128 0x10
 1751 0295 4C040000 		.4byte	.LASF29
 1752 0299 04       		.byte	0x4
 1753 029a 1E01     		.2byte	0x11e
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 84


 1754 029c 6B000000 		.4byte	0x6b
 1755 02a0 06       		.byte	0x6
 1756 02a1 10       		.uleb128 0x10
 1757 02a2 4A060000 		.4byte	.LASF30
 1758 02a6 04       		.byte	0x4
 1759 02a7 2301     		.2byte	0x123
 1760 02a9 6B000000 		.4byte	0x6b
 1761 02ad 07       		.byte	0x7
 1762 02ae 10       		.uleb128 0x10
 1763 02af E9030000 		.4byte	.LASF31
 1764 02b3 04       		.byte	0x4
 1765 02b4 2901     		.2byte	0x129
 1766 02b6 6B000000 		.4byte	0x6b
 1767 02ba 08       		.byte	0x8
 1768 02bb 10       		.uleb128 0x10
 1769 02bc AC050000 		.4byte	.LASF32
 1770 02c0 04       		.byte	0x4
 1771 02c1 2F01     		.2byte	0x12f
 1772 02c3 6B000000 		.4byte	0x6b
 1773 02c7 09       		.byte	0x9
 1774 02c8 10       		.uleb128 0x10
 1775 02c9 0D040000 		.4byte	.LASF33
 1776 02cd 04       		.byte	0x4
 1777 02ce 3601     		.2byte	0x136
 1778 02d0 F1000000 		.4byte	0xf1
 1779 02d4 0A       		.byte	0xa
 1780 02d5 10       		.uleb128 0x10
 1781 02d6 B7090000 		.4byte	.LASF34
 1782 02da 04       		.byte	0x4
 1783 02db 3D01     		.2byte	0x13d
 1784 02dd B4010000 		.4byte	0x1b4
 1785 02e1 0B       		.byte	0xb
 1786 02e2 10       		.uleb128 0x10
 1787 02e3 67070000 		.4byte	.LASF35
 1788 02e7 04       		.byte	0x4
 1789 02e8 4201     		.2byte	0x142
 1790 02ea 6B000000 		.4byte	0x6b
 1791 02ee 0C       		.byte	0xc
 1792 02ef 10       		.uleb128 0x10
 1793 02f0 7B000000 		.4byte	.LASF39
 1794 02f4 04       		.byte	0x4
 1795 02f5 4701     		.2byte	0x147
 1796 02f7 E5000000 		.4byte	0xe5
 1797 02fb 0E       		.byte	0xe
 1798 02fc 00       		.byte	0
 1799 02fd 04       		.uleb128 0x4
 1800 02fe 3D0A0000 		.4byte	.LASF40
 1801 0302 04       		.byte	0x4
 1802 0303 4801     		.2byte	0x148
 1803 0305 64020000 		.4byte	0x264
 1804 0309 11       		.uleb128 0x11
 1805 030a B8       		.byte	0xb8
 1806 030b 04       		.byte	0x4
 1807 030c 4E01     		.2byte	0x14e
 1808 030e BC030000 		.4byte	0x3bc
 1809 0312 10       		.uleb128 0x10
 1810 0313 3B080000 		.4byte	.LASF41
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 85


 1811 0317 04       		.byte	0x4
 1812 0318 5301     		.2byte	0x153
 1813 031a 58020000 		.4byte	0x258
 1814 031e 00       		.byte	0
 1815 031f 10       		.uleb128 0x10
 1816 0320 43080000 		.4byte	.LASF42
 1817 0324 04       		.byte	0x4
 1818 0325 5801     		.2byte	0x158
 1819 0327 58020000 		.4byte	0x258
 1820 032b 0E       		.byte	0xe
 1821 032c 10       		.uleb128 0x10
 1822 032d 4B080000 		.4byte	.LASF43
 1823 0331 04       		.byte	0x4
 1824 0332 5D01     		.2byte	0x15d
 1825 0334 58020000 		.4byte	0x258
 1826 0338 1C       		.byte	0x1c
 1827 0339 10       		.uleb128 0x10
 1828 033a 53080000 		.4byte	.LASF44
 1829 033e 04       		.byte	0x4
 1830 033f 6201     		.2byte	0x162
 1831 0341 58020000 		.4byte	0x258
 1832 0345 2A       		.byte	0x2a
 1833 0346 10       		.uleb128 0x10
 1834 0347 5B080000 		.4byte	.LASF45
 1835 034b 04       		.byte	0x4
 1836 034c 6701     		.2byte	0x167
 1837 034e 58020000 		.4byte	0x258
 1838 0352 38       		.byte	0x38
 1839 0353 10       		.uleb128 0x10
 1840 0354 63080000 		.4byte	.LASF46
 1841 0358 04       		.byte	0x4
 1842 0359 6C01     		.2byte	0x16c
 1843 035b 58020000 		.4byte	0x258
 1844 035f 46       		.byte	0x46
 1845 0360 10       		.uleb128 0x10
 1846 0361 6B080000 		.4byte	.LASF47
 1847 0365 04       		.byte	0x4
 1848 0366 7101     		.2byte	0x171
 1849 0368 58020000 		.4byte	0x258
 1850 036c 54       		.byte	0x54
 1851 036d 10       		.uleb128 0x10
 1852 036e 73080000 		.4byte	.LASF48
 1853 0372 04       		.byte	0x4
 1854 0373 7601     		.2byte	0x176
 1855 0375 58020000 		.4byte	0x258
 1856 0379 62       		.byte	0x62
 1857 037a 10       		.uleb128 0x10
 1858 037b 7B080000 		.4byte	.LASF49
 1859 037f 04       		.byte	0x4
 1860 0380 7B01     		.2byte	0x17b
 1861 0382 58020000 		.4byte	0x258
 1862 0386 70       		.byte	0x70
 1863 0387 10       		.uleb128 0x10
 1864 0388 83080000 		.4byte	.LASF50
 1865 038c 04       		.byte	0x4
 1866 038d 8001     		.2byte	0x180
 1867 038f 58020000 		.4byte	0x258
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 86


 1868 0393 7E       		.byte	0x7e
 1869 0394 10       		.uleb128 0x10
 1870 0395 84090000 		.4byte	.LASF51
 1871 0399 04       		.byte	0x4
 1872 039a 8501     		.2byte	0x185
 1873 039c 58020000 		.4byte	0x258
 1874 03a0 8C       		.byte	0x8c
 1875 03a1 10       		.uleb128 0x10
 1876 03a2 72030000 		.4byte	.LASF52
 1877 03a6 04       		.byte	0x4
 1878 03a7 8A01     		.2byte	0x18a
 1879 03a9 58020000 		.4byte	0x258
 1880 03ad 9A       		.byte	0x9a
 1881 03ae 10       		.uleb128 0x10
 1882 03af 5F0B0000 		.4byte	.LASF53
 1883 03b3 04       		.byte	0x4
 1884 03b4 8F01     		.2byte	0x18f
 1885 03b6 FD020000 		.4byte	0x2fd
 1886 03ba A8       		.byte	0xa8
 1887 03bb 00       		.byte	0
 1888 03bc 04       		.uleb128 0x4
 1889 03bd A4010000 		.4byte	.LASF54
 1890 03c1 04       		.byte	0x4
 1891 03c2 9001     		.2byte	0x190
 1892 03c4 09030000 		.4byte	0x309
 1893 03c8 11       		.uleb128 0x11
 1894 03c9 0C       		.byte	0xc
 1895 03ca 04       		.byte	0x4
 1896 03cb 9601     		.2byte	0x196
 1897 03cd 2D040000 		.4byte	0x42d
 1898 03d1 12       		.uleb128 0x12
 1899 03d2 72617700 		.ascii	"raw\000"
 1900 03d6 04       		.byte	0x4
 1901 03d7 9B01     		.2byte	0x19b
 1902 03d9 2D040000 		.4byte	0x42d
 1903 03dd 00       		.byte	0
 1904 03de 10       		.uleb128 0x10
 1905 03df BA0B0000 		.4byte	.LASF55
 1906 03e3 04       		.byte	0x4
 1907 03e4 A001     		.2byte	0x1a0
 1908 03e6 2D040000 		.4byte	0x42d
 1909 03ea 02       		.byte	0x2
 1910 03eb 10       		.uleb128 0x10
 1911 03ec FF0A0000 		.4byte	.LASF56
 1912 03f0 04       		.byte	0x4
 1913 03f1 A501     		.2byte	0x1a5
 1914 03f3 2D040000 		.4byte	0x42d
 1915 03f7 04       		.byte	0x4
 1916 03f8 10       		.uleb128 0x10
 1917 03f9 0E0A0000 		.4byte	.LASF57
 1918 03fd 04       		.byte	0x4
 1919 03fe AB01     		.2byte	0x1ab
 1920 0400 B4010000 		.4byte	0x1b4
 1921 0404 06       		.byte	0x6
 1922 0405 10       		.uleb128 0x10
 1923 0406 F6070000 		.4byte	.LASF58
 1924 040a 04       		.byte	0x4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 87


 1925 040b B001     		.2byte	0x1b0
 1926 040d E5000000 		.4byte	0xe5
 1927 0411 08       		.byte	0x8
 1928 0412 10       		.uleb128 0x10
 1929 0413 270C0000 		.4byte	.LASF59
 1930 0417 04       		.byte	0x4
 1931 0418 B501     		.2byte	0x1b5
 1932 041a 3D040000 		.4byte	0x43d
 1933 041e 0A       		.byte	0xa
 1934 041f 10       		.uleb128 0x10
 1935 0420 6E050000 		.4byte	.LASF60
 1936 0424 04       		.byte	0x4
 1937 0425 BA01     		.2byte	0x1ba
 1938 0427 B4010000 		.4byte	0x1b4
 1939 042b 0B       		.byte	0xb
 1940 042c 00       		.byte	0
 1941 042d 0E       		.uleb128 0xe
 1942 042e 77000000 		.4byte	0x77
 1943 0432 3D040000 		.4byte	0x43d
 1944 0436 0F       		.uleb128 0xf
 1945 0437 C4010000 		.4byte	0x1c4
 1946 043b 00       		.byte	0
 1947 043c 00       		.byte	0
 1948 043d 0E       		.uleb128 0xe
 1949 043e F1000000 		.4byte	0xf1
 1950 0442 4D040000 		.4byte	0x44d
 1951 0446 0F       		.uleb128 0xf
 1952 0447 C4010000 		.4byte	0x1c4
 1953 044b 00       		.byte	0
 1954 044c 00       		.byte	0
 1955 044d 04       		.uleb128 0x4
 1956 044e 87030000 		.4byte	.LASF61
 1957 0452 04       		.byte	0x4
 1958 0453 BB01     		.2byte	0x1bb
 1959 0455 C8030000 		.4byte	0x3c8
 1960 0459 11       		.uleb128 0x11
 1961 045a 9C       		.byte	0x9c
 1962 045b 04       		.byte	0x4
 1963 045c C101     		.2byte	0x1c1
 1964 045e 0C050000 		.4byte	0x50c
 1965 0462 10       		.uleb128 0x10
 1966 0463 3B080000 		.4byte	.LASF41
 1967 0467 04       		.byte	0x4
 1968 0468 C601     		.2byte	0x1c6
 1969 046a 0C050000 		.4byte	0x50c
 1970 046e 00       		.byte	0
 1971 046f 10       		.uleb128 0x10
 1972 0470 43080000 		.4byte	.LASF42
 1973 0474 04       		.byte	0x4
 1974 0475 CB01     		.2byte	0x1cb
 1975 0477 0C050000 		.4byte	0x50c
 1976 047b 0C       		.byte	0xc
 1977 047c 10       		.uleb128 0x10
 1978 047d 4B080000 		.4byte	.LASF43
 1979 0481 04       		.byte	0x4
 1980 0482 D001     		.2byte	0x1d0
 1981 0484 0C050000 		.4byte	0x50c
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 88


 1982 0488 18       		.byte	0x18
 1983 0489 10       		.uleb128 0x10
 1984 048a 53080000 		.4byte	.LASF44
 1985 048e 04       		.byte	0x4
 1986 048f D501     		.2byte	0x1d5
 1987 0491 0C050000 		.4byte	0x50c
 1988 0495 24       		.byte	0x24
 1989 0496 10       		.uleb128 0x10
 1990 0497 5B080000 		.4byte	.LASF45
 1991 049b 04       		.byte	0x4
 1992 049c DA01     		.2byte	0x1da
 1993 049e 0C050000 		.4byte	0x50c
 1994 04a2 30       		.byte	0x30
 1995 04a3 10       		.uleb128 0x10
 1996 04a4 63080000 		.4byte	.LASF46
 1997 04a8 04       		.byte	0x4
 1998 04a9 DF01     		.2byte	0x1df
 1999 04ab 0C050000 		.4byte	0x50c
 2000 04af 3C       		.byte	0x3c
 2001 04b0 10       		.uleb128 0x10
 2002 04b1 6B080000 		.4byte	.LASF47
 2003 04b5 04       		.byte	0x4
 2004 04b6 E401     		.2byte	0x1e4
 2005 04b8 0C050000 		.4byte	0x50c
 2006 04bc 48       		.byte	0x48
 2007 04bd 10       		.uleb128 0x10
 2008 04be 73080000 		.4byte	.LASF48
 2009 04c2 04       		.byte	0x4
 2010 04c3 E901     		.2byte	0x1e9
 2011 04c5 0C050000 		.4byte	0x50c
 2012 04c9 54       		.byte	0x54
 2013 04ca 10       		.uleb128 0x10
 2014 04cb 7B080000 		.4byte	.LASF49
 2015 04cf 04       		.byte	0x4
 2016 04d0 EE01     		.2byte	0x1ee
 2017 04d2 0C050000 		.4byte	0x50c
 2018 04d6 60       		.byte	0x60
 2019 04d7 10       		.uleb128 0x10
 2020 04d8 83080000 		.4byte	.LASF50
 2021 04dc 04       		.byte	0x4
 2022 04dd F301     		.2byte	0x1f3
 2023 04df 0C050000 		.4byte	0x50c
 2024 04e3 6C       		.byte	0x6c
 2025 04e4 10       		.uleb128 0x10
 2026 04e5 84090000 		.4byte	.LASF51
 2027 04e9 04       		.byte	0x4
 2028 04ea F801     		.2byte	0x1f8
 2029 04ec 0C050000 		.4byte	0x50c
 2030 04f0 78       		.byte	0x78
 2031 04f1 10       		.uleb128 0x10
 2032 04f2 72030000 		.4byte	.LASF52
 2033 04f6 04       		.byte	0x4
 2034 04f7 FD01     		.2byte	0x1fd
 2035 04f9 0C050000 		.4byte	0x50c
 2036 04fd 84       		.byte	0x84
 2037 04fe 10       		.uleb128 0x10
 2038 04ff 5F0B0000 		.4byte	.LASF53
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 89


 2039 0503 04       		.byte	0x4
 2040 0504 0202     		.2byte	0x202
 2041 0506 0C050000 		.4byte	0x50c
 2042 050a 90       		.byte	0x90
 2043 050b 00       		.byte	0
 2044 050c 0E       		.uleb128 0xe
 2045 050d 4D040000 		.4byte	0x44d
 2046 0511 1C050000 		.4byte	0x51c
 2047 0515 0F       		.uleb128 0xf
 2048 0516 C4010000 		.4byte	0x1c4
 2049 051a 00       		.byte	0
 2050 051b 00       		.byte	0
 2051 051c 04       		.uleb128 0x4
 2052 051d C80C0000 		.4byte	.LASF62
 2053 0521 04       		.byte	0x4
 2054 0522 0302     		.2byte	0x203
 2055 0524 59040000 		.4byte	0x459
 2056 0528 11       		.uleb128 0x11
 2057 0529 14       		.byte	0x14
 2058 052a 04       		.byte	0x4
 2059 052b 0902     		.2byte	0x209
 2060 052d CE050000 		.4byte	0x5ce
 2061 0531 10       		.uleb128 0x10
 2062 0532 18040000 		.4byte	.LASF63
 2063 0536 04       		.byte	0x4
 2064 0537 0E02     		.2byte	0x20e
 2065 0539 83000000 		.4byte	0x83
 2066 053d 00       		.byte	0
 2067 053e 10       		.uleb128 0x10
 2068 053f 99080000 		.4byte	.LASF64
 2069 0543 04       		.byte	0x4
 2070 0544 1302     		.2byte	0x213
 2071 0546 2D040000 		.4byte	0x42d
 2072 054a 04       		.byte	0x4
 2073 054b 10       		.uleb128 0x10
 2074 054c EE080000 		.4byte	.LASF65
 2075 0550 04       		.byte	0x4
 2076 0551 1802     		.2byte	0x218
 2077 0553 77000000 		.4byte	0x77
 2078 0557 06       		.byte	0x6
 2079 0558 10       		.uleb128 0x10
 2080 0559 8D040000 		.4byte	.LASF66
 2081 055d 04       		.byte	0x4
 2082 055e 1D02     		.2byte	0x21d
 2083 0560 77000000 		.4byte	0x77
 2084 0564 08       		.byte	0x8
 2085 0565 10       		.uleb128 0x10
 2086 0566 D4090000 		.4byte	.LASF67
 2087 056a 04       		.byte	0x4
 2088 056b 2302     		.2byte	0x223
 2089 056d 77000000 		.4byte	0x77
 2090 0571 0A       		.byte	0xa
 2091 0572 10       		.uleb128 0x10
 2092 0573 B1080000 		.4byte	.LASF68
 2093 0577 04       		.byte	0x4
 2094 0578 2902     		.2byte	0x229
 2095 057a 6B000000 		.4byte	0x6b
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 90


 2096 057e 0C       		.byte	0xc
 2097 057f 10       		.uleb128 0x10
 2098 0580 8B080000 		.4byte	.LASF69
 2099 0584 04       		.byte	0x4
 2100 0585 2E02     		.2byte	0x22e
 2101 0587 6B000000 		.4byte	0x6b
 2102 058b 0D       		.byte	0xd
 2103 058c 10       		.uleb128 0x10
 2104 058d C5040000 		.4byte	.LASF70
 2105 0591 04       		.byte	0x4
 2106 0592 3302     		.2byte	0x233
 2107 0594 6B000000 		.4byte	0x6b
 2108 0598 0E       		.byte	0xe
 2109 0599 10       		.uleb128 0x10
 2110 059a D6020000 		.4byte	.LASF71
 2111 059e 04       		.byte	0x4
 2112 059f 3802     		.2byte	0x238
 2113 05a1 6B000000 		.4byte	0x6b
 2114 05a5 0F       		.byte	0xf
 2115 05a6 10       		.uleb128 0x10
 2116 05a7 3D060000 		.4byte	.LASF72
 2117 05ab 04       		.byte	0x4
 2118 05ac 3D02     		.2byte	0x23d
 2119 05ae 6B000000 		.4byte	0x6b
 2120 05b2 10       		.byte	0x10
 2121 05b3 10       		.uleb128 0x10
 2122 05b4 D20B0000 		.4byte	.LASF73
 2123 05b8 04       		.byte	0x4
 2124 05b9 4202     		.2byte	0x242
 2125 05bb 6B000000 		.4byte	0x6b
 2126 05bf 11       		.byte	0x11
 2127 05c0 10       		.uleb128 0x10
 2128 05c1 C20A0000 		.4byte	.LASF74
 2129 05c5 04       		.byte	0x4
 2130 05c6 4702     		.2byte	0x247
 2131 05c8 6B000000 		.4byte	0x6b
 2132 05cc 12       		.byte	0x12
 2133 05cd 00       		.byte	0
 2134 05ce 04       		.uleb128 0x4
 2135 05cf 6F040000 		.4byte	.LASF75
 2136 05d3 04       		.byte	0x4
 2137 05d4 4802     		.2byte	0x248
 2138 05d6 28050000 		.4byte	0x528
 2139 05da 11       		.uleb128 0x11
 2140 05db 0D       		.byte	0xd
 2141 05dc 04       		.byte	0x4
 2142 05dd 4E02     		.2byte	0x24e
 2143 05df 8D060000 		.4byte	0x68d
 2144 05e3 10       		.uleb128 0x10
 2145 05e4 3B080000 		.4byte	.LASF41
 2146 05e8 04       		.byte	0x4
 2147 05e9 5302     		.2byte	0x253
 2148 05eb B4010000 		.4byte	0x1b4
 2149 05ef 00       		.byte	0
 2150 05f0 10       		.uleb128 0x10
 2151 05f1 43080000 		.4byte	.LASF42
 2152 05f5 04       		.byte	0x4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 91


 2153 05f6 5702     		.2byte	0x257
 2154 05f8 B4010000 		.4byte	0x1b4
 2155 05fc 01       		.byte	0x1
 2156 05fd 10       		.uleb128 0x10
 2157 05fe 4B080000 		.4byte	.LASF43
 2158 0602 04       		.byte	0x4
 2159 0603 5B02     		.2byte	0x25b
 2160 0605 B4010000 		.4byte	0x1b4
 2161 0609 02       		.byte	0x2
 2162 060a 10       		.uleb128 0x10
 2163 060b 53080000 		.4byte	.LASF44
 2164 060f 04       		.byte	0x4
 2165 0610 5F02     		.2byte	0x25f
 2166 0612 B4010000 		.4byte	0x1b4
 2167 0616 03       		.byte	0x3
 2168 0617 10       		.uleb128 0x10
 2169 0618 5B080000 		.4byte	.LASF45
 2170 061c 04       		.byte	0x4
 2171 061d 6302     		.2byte	0x263
 2172 061f B4010000 		.4byte	0x1b4
 2173 0623 04       		.byte	0x4
 2174 0624 10       		.uleb128 0x10
 2175 0625 63080000 		.4byte	.LASF46
 2176 0629 04       		.byte	0x4
 2177 062a 6702     		.2byte	0x267
 2178 062c B4010000 		.4byte	0x1b4
 2179 0630 05       		.byte	0x5
 2180 0631 10       		.uleb128 0x10
 2181 0632 6B080000 		.4byte	.LASF47
 2182 0636 04       		.byte	0x4
 2183 0637 6B02     		.2byte	0x26b
 2184 0639 B4010000 		.4byte	0x1b4
 2185 063d 06       		.byte	0x6
 2186 063e 10       		.uleb128 0x10
 2187 063f 73080000 		.4byte	.LASF48
 2188 0643 04       		.byte	0x4
 2189 0644 6F02     		.2byte	0x26f
 2190 0646 B4010000 		.4byte	0x1b4
 2191 064a 07       		.byte	0x7
 2192 064b 10       		.uleb128 0x10
 2193 064c 7B080000 		.4byte	.LASF49
 2194 0650 04       		.byte	0x4
 2195 0651 7302     		.2byte	0x273
 2196 0653 B4010000 		.4byte	0x1b4
 2197 0657 08       		.byte	0x8
 2198 0658 10       		.uleb128 0x10
 2199 0659 83080000 		.4byte	.LASF50
 2200 065d 04       		.byte	0x4
 2201 065e 7702     		.2byte	0x277
 2202 0660 B4010000 		.4byte	0x1b4
 2203 0664 09       		.byte	0x9
 2204 0665 10       		.uleb128 0x10
 2205 0666 84090000 		.4byte	.LASF51
 2206 066a 04       		.byte	0x4
 2207 066b 7B02     		.2byte	0x27b
 2208 066d B4010000 		.4byte	0x1b4
 2209 0671 0A       		.byte	0xa
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 92


 2210 0672 10       		.uleb128 0x10
 2211 0673 72030000 		.4byte	.LASF52
 2212 0677 04       		.byte	0x4
 2213 0678 7F02     		.2byte	0x27f
 2214 067a B4010000 		.4byte	0x1b4
 2215 067e 0B       		.byte	0xb
 2216 067f 10       		.uleb128 0x10
 2217 0680 5F0B0000 		.4byte	.LASF53
 2218 0684 04       		.byte	0x4
 2219 0685 8302     		.2byte	0x283
 2220 0687 B4010000 		.4byte	0x1b4
 2221 068b 0C       		.byte	0xc
 2222 068c 00       		.byte	0
 2223 068d 04       		.uleb128 0x4
 2224 068e 5D010000 		.4byte	.LASF76
 2225 0692 04       		.byte	0x4
 2226 0693 8402     		.2byte	0x284
 2227 0695 DA050000 		.4byte	0x5da
 2228 0699 13       		.uleb128 0x13
 2229 069a B001     		.2byte	0x1b0
 2230 069c 04       		.byte	0x4
 2231 069d 8902     		.2byte	0x289
 2232 069f C8070000 		.4byte	0x7c8
 2233 06a3 10       		.uleb128 0x10
 2234 06a4 3A070000 		.4byte	.LASF77
 2235 06a8 04       		.byte	0x4
 2236 06a9 9002     		.2byte	0x290
 2237 06ab 77000000 		.4byte	0x77
 2238 06af 00       		.byte	0
 2239 06b0 10       		.uleb128 0x10
 2240 06b1 670C0000 		.4byte	.LASF78
 2241 06b5 04       		.byte	0x4
 2242 06b6 9502     		.2byte	0x295
 2243 06b8 77000000 		.4byte	0x77
 2244 06bc 02       		.byte	0x2
 2245 06bd 10       		.uleb128 0x10
 2246 06be F5000000 		.4byte	.LASF79
 2247 06c2 04       		.byte	0x4
 2248 06c3 9A02     		.2byte	0x29a
 2249 06c5 77000000 		.4byte	0x77
 2250 06c9 04       		.byte	0x4
 2251 06ca 10       		.uleb128 0x10
 2252 06cb FB070000 		.4byte	.LASF80
 2253 06cf 04       		.byte	0x4
 2254 06d0 A002     		.2byte	0x2a0
 2255 06d2 77000000 		.4byte	0x77
 2256 06d6 06       		.byte	0x6
 2257 06d7 10       		.uleb128 0x10
 2258 06d8 E9000000 		.4byte	.LASF81
 2259 06dc 04       		.byte	0x4
 2260 06dd A502     		.2byte	0x2a5
 2261 06df 77000000 		.4byte	0x77
 2262 06e3 08       		.byte	0x8
 2263 06e4 10       		.uleb128 0x10
 2264 06e5 FA040000 		.4byte	.LASF82
 2265 06e9 04       		.byte	0x4
 2266 06ea AA02     		.2byte	0x2aa
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 93


 2267 06ec CD000000 		.4byte	0xcd
 2268 06f0 0C       		.byte	0xc
 2269 06f1 10       		.uleb128 0x10
 2270 06f2 EB070000 		.4byte	.LASF83
 2271 06f6 04       		.byte	0x4
 2272 06f7 B002     		.2byte	0x2b0
 2273 06f9 C8070000 		.4byte	0x7c8
 2274 06fd 10       		.byte	0x10
 2275 06fe 10       		.uleb128 0x10
 2276 06ff FA010000 		.4byte	.LASF84
 2277 0703 04       		.byte	0x4
 2278 0704 B602     		.2byte	0x2b6
 2279 0706 C8070000 		.4byte	0x7c8
 2280 070a 14       		.byte	0x14
 2281 070b 10       		.uleb128 0x10
 2282 070c BB080000 		.4byte	.LASF85
 2283 0710 04       		.byte	0x4
 2284 0711 BD02     		.2byte	0x2bd
 2285 0713 C8070000 		.4byte	0x7c8
 2286 0717 18       		.byte	0x18
 2287 0718 10       		.uleb128 0x10
 2288 0719 4E070000 		.4byte	.LASF86
 2289 071d 04       		.byte	0x4
 2290 071e CD02     		.2byte	0x2cd
 2291 0720 D8070000 		.4byte	0x7d8
 2292 0724 1C       		.byte	0x1c
 2293 0725 10       		.uleb128 0x10
 2294 0726 53060000 		.4byte	.LASF87
 2295 072a 04       		.byte	0x4
 2296 072b D302     		.2byte	0x2d3
 2297 072d 77000000 		.4byte	0x77
 2298 0731 2A       		.byte	0x2a
 2299 0732 10       		.uleb128 0x10
 2300 0733 7D030000 		.4byte	.LASF88
 2301 0737 04       		.byte	0x4
 2302 0738 D802     		.2byte	0x2d8
 2303 073a 6B000000 		.4byte	0x6b
 2304 073e 2C       		.byte	0x2c
 2305 073f 10       		.uleb128 0x10
 2306 0740 00000000 		.4byte	.LASF89
 2307 0744 04       		.byte	0x4
 2308 0745 DD02     		.2byte	0x2dd
 2309 0747 77000000 		.4byte	0x77
 2310 074b 2E       		.byte	0x2e
 2311 074c 10       		.uleb128 0x10
 2312 074d 130C0000 		.4byte	.LASF90
 2313 0751 04       		.byte	0x4
 2314 0752 E202     		.2byte	0x2e2
 2315 0754 77000000 		.4byte	0x77
 2316 0758 30       		.byte	0x30
 2317 0759 10       		.uleb128 0x10
 2318 075a C7050000 		.4byte	.LASF91
 2319 075e 04       		.byte	0x4
 2320 075f E702     		.2byte	0x2e7
 2321 0761 BC030000 		.4byte	0x3bc
 2322 0765 32       		.byte	0x32
 2323 0766 10       		.uleb128 0x10
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 94


 2324 0767 45020000 		.4byte	.LASF92
 2325 076b 04       		.byte	0x4
 2326 076c EC02     		.2byte	0x2ec
 2327 076e 1C050000 		.4byte	0x51c
 2328 0772 EA       		.byte	0xea
 2329 0773 14       		.uleb128 0x14
 2330 0774 DD060000 		.4byte	.LASF93
 2331 0778 04       		.byte	0x4
 2332 0779 F102     		.2byte	0x2f1
 2333 077b CE050000 		.4byte	0x5ce
 2334 077f 8801     		.2byte	0x188
 2335 0781 14       		.uleb128 0x14
 2336 0782 E3030000 		.4byte	.LASF94
 2337 0786 04       		.byte	0x4
 2338 0787 F602     		.2byte	0x2f6
 2339 0789 8D060000 		.4byte	0x68d
 2340 078d 9C01     		.2byte	0x19c
 2341 078f 14       		.uleb128 0x14
 2342 0790 B7000000 		.4byte	.LASF95
 2343 0794 04       		.byte	0x4
 2344 0795 FB02     		.2byte	0x2fb
 2345 0797 6B000000 		.4byte	0x6b
 2346 079b A901     		.2byte	0x1a9
 2347 079d 14       		.uleb128 0x14
 2348 079e 92020000 		.4byte	.LASF96
 2349 07a2 04       		.byte	0x4
 2350 07a3 0003     		.2byte	0x300
 2351 07a5 6B000000 		.4byte	0x6b
 2352 07a9 AA01     		.2byte	0x1aa
 2353 07ab 14       		.uleb128 0x14
 2354 07ac 27070000 		.4byte	.LASF97
 2355 07b0 04       		.byte	0x4
 2356 07b1 0503     		.2byte	0x305
 2357 07b3 77000000 		.4byte	0x77
 2358 07b7 AC01     		.2byte	0x1ac
 2359 07b9 14       		.uleb128 0x14
 2360 07ba 2D060000 		.4byte	.LASF98
 2361 07be 04       		.byte	0x4
 2362 07bf 0A03     		.2byte	0x30a
 2363 07c1 2D040000 		.4byte	0x42d
 2364 07c5 AE01     		.2byte	0x1ae
 2365 07c7 00       		.byte	0
 2366 07c8 0E       		.uleb128 0xe
 2367 07c9 83000000 		.4byte	0x83
 2368 07cd D8070000 		.4byte	0x7d8
 2369 07d1 0F       		.uleb128 0xf
 2370 07d2 C4010000 		.4byte	0x1c4
 2371 07d6 00       		.byte	0
 2372 07d7 00       		.byte	0
 2373 07d8 0E       		.uleb128 0xe
 2374 07d9 6B000000 		.4byte	0x6b
 2375 07dd E8070000 		.4byte	0x7e8
 2376 07e1 0F       		.uleb128 0xf
 2377 07e2 C4010000 		.4byte	0x1c4
 2378 07e6 0C       		.byte	0xc
 2379 07e7 00       		.byte	0
 2380 07e8 04       		.uleb128 0x4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 95


 2381 07e9 B4070000 		.4byte	.LASF99
 2382 07ed 04       		.byte	0x4
 2383 07ee 0B03     		.2byte	0x30b
 2384 07f0 99060000 		.4byte	0x699
 2385 07f4 11       		.uleb128 0x11
 2386 07f5 20       		.byte	0x20
 2387 07f6 04       		.byte	0x4
 2388 07f7 1103     		.2byte	0x311
 2389 07f9 80080000 		.4byte	0x880
 2390 07fd 10       		.uleb128 0x10
 2391 07fe 87060000 		.4byte	.LASF100
 2392 0802 04       		.byte	0x4
 2393 0803 1603     		.2byte	0x316
 2394 0805 80080000 		.4byte	0x880
 2395 0809 00       		.byte	0
 2396 080a 10       		.uleb128 0x10
 2397 080b 77050000 		.4byte	.LASF101
 2398 080f 04       		.byte	0x4
 2399 0810 1B03     		.2byte	0x31b
 2400 0812 80080000 		.4byte	0x880
 2401 0816 04       		.byte	0x4
 2402 0817 10       		.uleb128 0x10
 2403 0818 25010000 		.4byte	.LASF102
 2404 081c 04       		.byte	0x4
 2405 081d 2003     		.2byte	0x320
 2406 081f 80080000 		.4byte	0x880
 2407 0823 08       		.byte	0x8
 2408 0824 10       		.uleb128 0x10
 2409 0825 B9030000 		.4byte	.LASF103
 2410 0829 04       		.byte	0x4
 2411 082a 2503     		.2byte	0x325
 2412 082c 80080000 		.4byte	0x880
 2413 0830 0C       		.byte	0xc
 2414 0831 10       		.uleb128 0x10
 2415 0832 20080000 		.4byte	.LASF104
 2416 0836 04       		.byte	0x4
 2417 0837 2A03     		.2byte	0x32a
 2418 0839 80080000 		.4byte	0x880
 2419 083d 10       		.byte	0x10
 2420 083e 10       		.uleb128 0x10
 2421 083f 290B0000 		.4byte	.LASF105
 2422 0843 04       		.byte	0x4
 2423 0844 2F03     		.2byte	0x32f
 2424 0846 83000000 		.4byte	0x83
 2425 084a 14       		.byte	0x14
 2426 084b 10       		.uleb128 0x10
 2427 084c BC060000 		.4byte	.LASF106
 2428 0850 04       		.byte	0x4
 2429 0851 3403     		.2byte	0x334
 2430 0853 83000000 		.4byte	0x83
 2431 0857 18       		.byte	0x18
 2432 0858 10       		.uleb128 0x10
 2433 0859 99010000 		.4byte	.LASF107
 2434 085d 04       		.byte	0x4
 2435 085e 3903     		.2byte	0x339
 2436 0860 6B000000 		.4byte	0x6b
 2437 0864 1C       		.byte	0x1c
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 96


 2438 0865 10       		.uleb128 0x10
 2439 0866 8E090000 		.4byte	.LASF108
 2440 086a 04       		.byte	0x4
 2441 086b 3E03     		.2byte	0x33e
 2442 086d 6B000000 		.4byte	0x6b
 2443 0871 1D       		.byte	0x1d
 2444 0872 10       		.uleb128 0x10
 2445 0873 0C020000 		.4byte	.LASF109
 2446 0877 04       		.byte	0x4
 2447 0878 4303     		.2byte	0x343
 2448 087a 6B000000 		.4byte	0x6b
 2449 087e 1E       		.byte	0x1e
 2450 087f 00       		.byte	0
 2451 0880 06       		.uleb128 0x6
 2452 0881 04       		.byte	0x4
 2453 0882 C1000000 		.4byte	0xc1
 2454 0886 04       		.uleb128 0x4
 2455 0887 79020000 		.4byte	.LASF110
 2456 088b 04       		.byte	0x4
 2457 088c 4403     		.2byte	0x344
 2458 088e F4070000 		.4byte	0x7f4
 2459 0892 11       		.uleb128 0x11
 2460 0893 20       		.byte	0x20
 2461 0894 04       		.byte	0x4
 2462 0895 7703     		.2byte	0x377
 2463 0897 1E090000 		.4byte	0x91e
 2464 089b 10       		.uleb128 0x10
 2465 089c FA0B0000 		.4byte	.LASF111
 2466 08a0 04       		.byte	0x4
 2467 08a1 8003     		.2byte	0x380
 2468 08a3 1E090000 		.4byte	0x91e
 2469 08a7 00       		.byte	0
 2470 08a8 10       		.uleb128 0x10
 2471 08a9 9E0A0000 		.4byte	.LASF112
 2472 08ad 04       		.byte	0x4
 2473 08ae 8703     		.2byte	0x387
 2474 08b0 25090000 		.4byte	0x925
 2475 08b4 04       		.byte	0x4
 2476 08b5 10       		.uleb128 0x10
 2477 08b6 43070000 		.4byte	.LASF113
 2478 08ba 04       		.byte	0x4
 2479 08bb 8D03     		.2byte	0x38d
 2480 08bd 27090000 		.4byte	0x927
 2481 08c1 08       		.byte	0x8
 2482 08c2 10       		.uleb128 0x10
 2483 08c3 97060000 		.4byte	.LASF114
 2484 08c7 04       		.byte	0x4
 2485 08c8 9303     		.2byte	0x393
 2486 08ca 25090000 		.4byte	0x925
 2487 08ce 0C       		.byte	0xc
 2488 08cf 10       		.uleb128 0x10
 2489 08d0 E0090000 		.4byte	.LASF115
 2490 08d4 04       		.byte	0x4
 2491 08d5 9A03     		.2byte	0x39a
 2492 08d7 2D090000 		.4byte	0x92d
 2493 08db 10       		.byte	0x10
 2494 08dc 10       		.uleb128 0x10
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 97


 2495 08dd 8B0A0000 		.4byte	.LASF116
 2496 08e1 04       		.byte	0x4
 2497 08e2 9F03     		.2byte	0x39f
 2498 08e4 83000000 		.4byte	0x83
 2499 08e8 14       		.byte	0x14
 2500 08e9 10       		.uleb128 0x10
 2501 08ea 27040000 		.4byte	.LASF117
 2502 08ee 04       		.byte	0x4
 2503 08ef A603     		.2byte	0x3a6
 2504 08f1 77000000 		.4byte	0x77
 2505 08f5 18       		.byte	0x18
 2506 08f6 10       		.uleb128 0x10
 2507 08f7 A2020000 		.4byte	.LASF118
 2508 08fb 04       		.byte	0x4
 2509 08fc AD03     		.2byte	0x3ad
 2510 08fe 6B000000 		.4byte	0x6b
 2511 0902 1A       		.byte	0x1a
 2512 0903 10       		.uleb128 0x10
 2513 0904 8B050000 		.4byte	.LASF119
 2514 0908 04       		.byte	0x4
 2515 0909 B703     		.2byte	0x3b7
 2516 090b 6B000000 		.4byte	0x6b
 2517 090f 1B       		.byte	0x1b
 2518 0910 10       		.uleb128 0x10
 2519 0911 11060000 		.4byte	.LASF120
 2520 0915 04       		.byte	0x4
 2521 0916 BC03     		.2byte	0x3bc
 2522 0918 2D090000 		.4byte	0x92d
 2523 091c 1C       		.byte	0x1c
 2524 091d 00       		.byte	0
 2525 091e 06       		.uleb128 0x6
 2526 091f 04       		.byte	0x4
 2527 0920 24090000 		.4byte	0x924
 2528 0924 15       		.uleb128 0x15
 2529 0925 16       		.uleb128 0x16
 2530 0926 04       		.byte	0x4
 2531 0927 06       		.uleb128 0x6
 2532 0928 04       		.byte	0x4
 2533 0929 4D040000 		.4byte	0x44d
 2534 092d 06       		.uleb128 0x6
 2535 092e 04       		.byte	0x4
 2536 092f 6B000000 		.4byte	0x6b
 2537 0933 04       		.uleb128 0x4
 2538 0934 F4030000 		.4byte	.LASF121
 2539 0938 04       		.byte	0x4
 2540 0939 BD03     		.2byte	0x3bd
 2541 093b 92080000 		.4byte	0x892
 2542 093f 13       		.uleb128 0x13
 2543 0940 A001     		.2byte	0x1a0
 2544 0942 04       		.byte	0x4
 2545 0943 C303     		.2byte	0x3c3
 2546 0945 57090000 		.4byte	0x957
 2547 0949 10       		.uleb128 0x10
 2548 094a E50C0000 		.4byte	.LASF122
 2549 094e 04       		.byte	0x4
 2550 094f C803     		.2byte	0x3c8
 2551 0951 57090000 		.4byte	0x957
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 98


 2552 0955 00       		.byte	0
 2553 0956 00       		.byte	0
 2554 0957 0E       		.uleb128 0xe
 2555 0958 33090000 		.4byte	0x933
 2556 095c 67090000 		.4byte	0x967
 2557 0960 0F       		.uleb128 0xf
 2558 0961 C4010000 		.4byte	0x1c4
 2559 0965 0C       		.byte	0xc
 2560 0966 00       		.byte	0
 2561 0967 04       		.uleb128 0x4
 2562 0968 ED050000 		.4byte	.LASF123
 2563 096c 04       		.byte	0x4
 2564 096d C903     		.2byte	0x3c9
 2565 096f 3F090000 		.4byte	0x93f
 2566 0973 02       		.uleb128 0x2
 2567 0974 08       		.byte	0x8
 2568 0975 04       		.byte	0x4
 2569 0976 15070000 		.4byte	.LASF124
 2570 097a 17       		.uleb128 0x17
 2571 097b D2040000 		.4byte	.LASF125
 2572 097f 01       		.byte	0x1
 2573 0980 6F07     		.2byte	0x76f
 2574 0982 00000000 		.4byte	.LFB18
 2575 0986 2C000000 		.4byte	.LFE18-.LFB18
 2576 098a 01       		.uleb128 0x1
 2577 098b 9C       		.byte	0x9c
 2578 098c A1090000 		.4byte	0x9a1
 2579 0990 18       		.uleb128 0x18
 2580 0991 6C0A0000 		.4byte	.LASF128
 2581 0995 01       		.byte	0x1
 2582 0996 7107     		.2byte	0x771
 2583 0998 83000000 		.4byte	0x83
 2584 099c 00000000 		.4byte	.LLST0
 2585 09a0 00       		.byte	0
 2586 09a1 17       		.uleb128 0x17
 2587 09a2 F0090000 		.4byte	.LASF126
 2588 09a6 01       		.byte	0x1
 2589 09a7 9507     		.2byte	0x795
 2590 09a9 00000000 		.4byte	.LFB19
 2591 09ad 08000000 		.4byte	.LFE19-.LFB19
 2592 09b1 01       		.uleb128 0x1
 2593 09b2 9C       		.byte	0x9c
 2594 09b3 C1090000 		.4byte	0x9c1
 2595 09b7 19       		.uleb128 0x19
 2596 09b8 06000000 		.4byte	.LVL4
 2597 09bc 7A090000 		.4byte	0x97a
 2598 09c0 00       		.byte	0
 2599 09c1 17       		.uleb128 0x17
 2600 09c2 45000000 		.4byte	.LASF127
 2601 09c6 01       		.byte	0x1
 2602 09c7 FA02     		.2byte	0x2fa
 2603 09c9 00000000 		.4byte	.LFB8
 2604 09cd 18000000 		.4byte	.LFE8-.LFB8
 2605 09d1 01       		.uleb128 0x1
 2606 09d2 9C       		.byte	0x9c
 2607 09d3 F1090000 		.4byte	0x9f1
 2608 09d7 18       		.uleb128 0x18
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 99


 2609 09d8 070C0000 		.4byte	.LASF129
 2610 09dc 01       		.byte	0x1
 2611 09dd FC02     		.2byte	0x2fc
 2612 09df 83000000 		.4byte	0x83
 2613 09e3 1E000000 		.4byte	.LLST1
 2614 09e7 19       		.uleb128 0x19
 2615 09e8 10000000 		.4byte	.LVL7
 2616 09ec 16110000 		.4byte	0x1116
 2617 09f0 00       		.byte	0
 2618 09f1 1A       		.uleb128 0x1a
 2619 09f2 4D010000 		.4byte	.LASF205
 2620 09f6 01       		.byte	0x1
 2621 09f7 E9       		.byte	0xe9
 2622 09f8 83000000 		.4byte	0x83
 2623 09fc 00000000 		.4byte	.LFB2
 2624 0a00 10000000 		.4byte	.LFE2-.LFB2
 2625 0a04 01       		.uleb128 0x1
 2626 0a05 9C       		.byte	0x9c
 2627 0a06 1B       		.uleb128 0x1b
 2628 0a07 26080000 		.4byte	.LASF131
 2629 0a0b 01       		.byte	0x1
 2630 0a0c 1D01     		.2byte	0x11d
 2631 0a0e A4000000 		.4byte	0xa4
 2632 0a12 00000000 		.4byte	.LFB3
 2633 0a16 4C000000 		.4byte	.LFE3-.LFB3
 2634 0a1a 01       		.uleb128 0x1
 2635 0a1b 9C       		.byte	0x9c
 2636 0a1c 4A0A0000 		.4byte	0xa4a
 2637 0a20 1C       		.uleb128 0x1c
 2638 0a21 7D0C0000 		.4byte	.LASF136
 2639 0a25 01       		.byte	0x1
 2640 0a26 1D01     		.2byte	0x11d
 2641 0a28 83000000 		.4byte	0x83
 2642 0a2c 31000000 		.4byte	.LLST2
 2643 0a30 18       		.uleb128 0x18
 2644 0a31 700C0000 		.4byte	.LASF130
 2645 0a35 01       		.byte	0x1
 2646 0a36 1F01     		.2byte	0x11f
 2647 0a38 A4000000 		.4byte	0xa4
 2648 0a3c 52000000 		.4byte	.LLST3
 2649 0a40 19       		.uleb128 0x19
 2650 0a41 42000000 		.4byte	.LVL10
 2651 0a45 22110000 		.4byte	0x1122
 2652 0a49 00       		.byte	0
 2653 0a4a 1B       		.uleb128 0x1b
 2654 0a4b 03060000 		.4byte	.LASF132
 2655 0a4f 01       		.byte	0x1
 2656 0a50 7001     		.2byte	0x170
 2657 0a52 A4000000 		.4byte	0xa4
 2658 0a56 00000000 		.4byte	.LFB4
 2659 0a5a 2C000000 		.4byte	.LFE4-.LFB4
 2660 0a5e 01       		.uleb128 0x1
 2661 0a5f 9C       		.byte	0x9c
 2662 0a60 7E0A0000 		.4byte	0xa7e
 2663 0a64 18       		.uleb128 0x18
 2664 0a65 3A000000 		.4byte	.LASF133
 2665 0a69 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 100


 2666 0a6a 7201     		.2byte	0x172
 2667 0a6c A4000000 		.4byte	0xa4
 2668 0a70 70000000 		.4byte	.LLST4
 2669 0a74 19       		.uleb128 0x19
 2670 0a75 16000000 		.4byte	.LVL13
 2671 0a79 2E110000 		.4byte	0x112e
 2672 0a7d 00       		.byte	0
 2673 0a7e 1B       		.uleb128 0x1b
 2674 0a7f 110B0000 		.4byte	.LASF134
 2675 0a83 01       		.byte	0x1
 2676 0a84 AE01     		.2byte	0x1ae
 2677 0a86 A4000000 		.4byte	0xa4
 2678 0a8a 00000000 		.4byte	.LFB5
 2679 0a8e 48000000 		.4byte	.LFE5-.LFB5
 2680 0a92 01       		.uleb128 0x1
 2681 0a93 9C       		.byte	0x9c
 2682 0a94 D60A0000 		.4byte	0xad6
 2683 0a98 18       		.uleb128 0x18
 2684 0a99 3A000000 		.4byte	.LASF133
 2685 0a9d 01       		.byte	0x1
 2686 0a9e B001     		.2byte	0x1b0
 2687 0aa0 A4000000 		.4byte	0xa4
 2688 0aa4 8F000000 		.4byte	.LLST5
 2689 0aa8 18       		.uleb128 0x18
 2690 0aa9 E6060000 		.4byte	.LASF135
 2691 0aad 01       		.byte	0x1
 2692 0aae B201     		.2byte	0x1b2
 2693 0ab0 83000000 		.4byte	0x83
 2694 0ab4 DD000000 		.4byte	.LLST6
 2695 0ab8 1D       		.uleb128 0x1d
 2696 0ab9 18000000 		.4byte	.LVL18
 2697 0abd 060A0000 		.4byte	0xa06
 2698 0ac1 CC0A0000 		.4byte	0xacc
 2699 0ac5 1E       		.uleb128 0x1e
 2700 0ac6 01       		.uleb128 0x1
 2701 0ac7 50       		.byte	0x50
 2702 0ac8 02       		.uleb128 0x2
 2703 0ac9 74       		.byte	0x74
 2704 0aca 00       		.sleb128 0
 2705 0acb 00       		.byte	0
 2706 0acc 19       		.uleb128 0x19
 2707 0acd 32000000 		.4byte	.LVL19
 2708 0ad1 4A0A0000 		.4byte	0xa4a
 2709 0ad5 00       		.byte	0
 2710 0ad6 1F       		.uleb128 0x1f
 2711 0ad7 760A0000 		.4byte	.LASF143
 2712 0adb 01       		.byte	0x1
 2713 0adc 8902     		.2byte	0x289
 2714 0ade 00000000 		.4byte	.LFB7
 2715 0ae2 98000000 		.4byte	.LFE7-.LFB7
 2716 0ae6 01       		.uleb128 0x1
 2717 0ae7 9C       		.byte	0x9c
 2718 0ae8 A00B0000 		.4byte	0xba0
 2719 0aec 1C       		.uleb128 0x1c
 2720 0aed 7D0C0000 		.4byte	.LASF136
 2721 0af1 01       		.byte	0x1
 2722 0af2 8902     		.2byte	0x289
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 101


 2723 0af4 83000000 		.4byte	0x83
 2724 0af8 F0000000 		.4byte	.LLST7
 2725 0afc 1C       		.uleb128 0x1c
 2726 0afd 2C000000 		.4byte	.LASF137
 2727 0b01 01       		.byte	0x1
 2728 0b02 8902     		.2byte	0x289
 2729 0b04 83000000 		.4byte	0x83
 2730 0b08 11010000 		.4byte	.LLST8
 2731 0b0c 1C       		.uleb128 0x1c
 2732 0b0d F90A0000 		.4byte	.LASF138
 2733 0b11 01       		.byte	0x1
 2734 0b12 8902     		.2byte	0x289
 2735 0b14 83000000 		.4byte	0x83
 2736 0b18 32010000 		.4byte	.LLST9
 2737 0b1c 20       		.uleb128 0x20
 2738 0b1d C0010000 		.4byte	.LASF139
 2739 0b21 01       		.byte	0x1
 2740 0b22 8B02     		.2byte	0x28b
 2741 0b24 83000000 		.4byte	0x83
 2742 0b28 01       		.byte	0x1
 2743 0b29 18       		.uleb128 0x18
 2744 0b2a 070B0000 		.4byte	.LASF140
 2745 0b2e 01       		.byte	0x1
 2746 0b2f 8C02     		.2byte	0x28c
 2747 0b31 83000000 		.4byte	0x83
 2748 0b35 5E010000 		.4byte	.LLST10
 2749 0b39 18       		.uleb128 0x18
 2750 0b3a 11010000 		.4byte	.LASF141
 2751 0b3e 01       		.byte	0x1
 2752 0b3f 8D02     		.2byte	0x28d
 2753 0b41 6B000000 		.4byte	0x6b
 2754 0b45 7D010000 		.4byte	.LLST11
 2755 0b49 18       		.uleb128 0x18
 2756 0b4a 980A0000 		.4byte	.LASF142
 2757 0b4e 01       		.byte	0x1
 2758 0b4f 8E02     		.2byte	0x28e
 2759 0b51 A00B0000 		.4byte	0xba0
 2760 0b55 A6010000 		.4byte	.LLST12
 2761 0b59 19       		.uleb128 0x19
 2762 0b5a 16000000 		.4byte	.LVL28
 2763 0b5e 3A110000 		.4byte	0x113a
 2764 0b62 19       		.uleb128 0x19
 2765 0b63 36000000 		.4byte	.LVL29
 2766 0b67 45110000 		.4byte	0x1145
 2767 0b6b 19       		.uleb128 0x19
 2768 0b6c 48000000 		.4byte	.LVL30
 2769 0b70 3A110000 		.4byte	0x113a
 2770 0b74 19       		.uleb128 0x19
 2771 0b75 68000000 		.4byte	.LVL31
 2772 0b79 45110000 		.4byte	0x1145
 2773 0b7d 19       		.uleb128 0x19
 2774 0b7e 6E000000 		.4byte	.LVL32
 2775 0b82 3A110000 		.4byte	0x113a
 2776 0b86 19       		.uleb128 0x19
 2777 0b87 80000000 		.4byte	.LVL33
 2778 0b8b 45110000 		.4byte	0x1145
 2779 0b8f 21       		.uleb128 0x21
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 102


 2780 0b90 88000000 		.4byte	.LVL34
 2781 0b94 50110000 		.4byte	0x1150
 2782 0b98 1E       		.uleb128 0x1e
 2783 0b99 01       		.uleb128 0x1
 2784 0b9a 50       		.byte	0x50
 2785 0b9b 02       		.uleb128 0x2
 2786 0b9c 74       		.byte	0x74
 2787 0b9d 00       		.sleb128 0
 2788 0b9e 00       		.byte	0
 2789 0b9f 00       		.byte	0
 2790 0ba0 06       		.uleb128 0x6
 2791 0ba1 04       		.byte	0x4
 2792 0ba2 A60B0000 		.4byte	0xba6
 2793 0ba6 22       		.uleb128 0x22
 2794 0ba7 86080000 		.4byte	0x886
 2795 0bab 1F       		.uleb128 0x1f
 2796 0bac BF030000 		.4byte	.LASF144
 2797 0bb0 01       		.byte	0x1
 2798 0bb1 8503     		.2byte	0x385
 2799 0bb3 00000000 		.4byte	.LFB9
 2800 0bb7 5C000000 		.4byte	.LFE9-.LFB9
 2801 0bbb 01       		.uleb128 0x1
 2802 0bbc 9C       		.byte	0x9c
 2803 0bbd F60B0000 		.4byte	0xbf6
 2804 0bc1 1C       		.uleb128 0x1c
 2805 0bc2 48010000 		.4byte	.LASF145
 2806 0bc6 01       		.byte	0x1
 2807 0bc7 8503     		.2byte	0x385
 2808 0bc9 28010000 		.4byte	0x128
 2809 0bcd B9010000 		.4byte	.LLST13
 2810 0bd1 19       		.uleb128 0x19
 2811 0bd2 14000000 		.4byte	.LVL41
 2812 0bd6 C1090000 		.4byte	0x9c1
 2813 0bda 19       		.uleb128 0x19
 2814 0bdb 26000000 		.4byte	.LVL43
 2815 0bdf 5C110000 		.4byte	0x115c
 2816 0be3 19       		.uleb128 0x19
 2817 0be4 2E000000 		.4byte	.LVL44
 2818 0be8 67110000 		.4byte	0x1167
 2819 0bec 19       		.uleb128 0x19
 2820 0bed 46000000 		.4byte	.LVL45
 2821 0bf1 73110000 		.4byte	0x1173
 2822 0bf5 00       		.byte	0
 2823 0bf6 1F       		.uleb128 0x1f
 2824 0bf7 3F0B0000 		.4byte	.LASF146
 2825 0bfb 01       		.byte	0x1
 2826 0bfc E803     		.2byte	0x3e8
 2827 0bfe 00000000 		.4byte	.LFB10
 2828 0c02 40000000 		.4byte	.LFE10-.LFB10
 2829 0c06 01       		.uleb128 0x1
 2830 0c07 9C       		.byte	0x9c
 2831 0c08 3D0C0000 		.4byte	0xc3d
 2832 0c0c 18       		.uleb128 0x18
 2833 0c0d 980A0000 		.4byte	.LASF142
 2834 0c11 01       		.byte	0x1
 2835 0c12 EA03     		.2byte	0x3ea
 2836 0c14 A00B0000 		.4byte	0xba0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 103


 2837 0c18 F3010000 		.4byte	.LLST14
 2838 0c1c 18       		.uleb128 0x18
 2839 0c1d F0010000 		.4byte	.LASF147
 2840 0c21 01       		.byte	0x1
 2841 0c22 EB03     		.2byte	0x3eb
 2842 0c24 83000000 		.4byte	0x83
 2843 0c28 06020000 		.4byte	.LLST15
 2844 0c2c 18       		.uleb128 0x18
 2845 0c2d 08010000 		.4byte	.LASF148
 2846 0c31 01       		.byte	0x1
 2847 0c32 EC03     		.2byte	0x3ec
 2848 0c34 83000000 		.4byte	0x83
 2849 0c38 25020000 		.4byte	.LLST16
 2850 0c3c 00       		.byte	0
 2851 0c3d 1F       		.uleb128 0x1f
 2852 0c3e DC0B0000 		.4byte	.LASF149
 2853 0c42 01       		.byte	0x1
 2854 0c43 6204     		.2byte	0x462
 2855 0c45 00000000 		.4byte	.LFB11
 2856 0c49 78000000 		.4byte	.LFE11-.LFB11
 2857 0c4d 01       		.uleb128 0x1
 2858 0c4e 9C       		.byte	0x9c
 2859 0c4f 760C0000 		.4byte	0xc76
 2860 0c53 18       		.uleb128 0x18
 2861 0c54 58070000 		.4byte	.LASF150
 2862 0c58 01       		.byte	0x1
 2863 0c59 6A04     		.2byte	0x46a
 2864 0c5b A4000000 		.4byte	0xa4
 2865 0c5f 4E020000 		.4byte	.LLST17
 2866 0c63 19       		.uleb128 0x19
 2867 0c64 14000000 		.4byte	.LVL58
 2868 0c68 060A0000 		.4byte	0xa06
 2869 0c6c 19       		.uleb128 0x19
 2870 0c6d 2A000000 		.4byte	.LVL60
 2871 0c71 4A0A0000 		.4byte	0xa4a
 2872 0c75 00       		.byte	0
 2873 0c76 1F       		.uleb128 0x1f
 2874 0c77 91070000 		.4byte	.LASF151
 2875 0c7b 01       		.byte	0x1
 2876 0c7c AF04     		.2byte	0x4af
 2877 0c7e 00000000 		.4byte	.LFB12
 2878 0c82 08000000 		.4byte	.LFE12-.LFB12
 2879 0c86 01       		.uleb128 0x1
 2880 0c87 9C       		.byte	0x9c
 2881 0c88 AE0C0000 		.4byte	0xcae
 2882 0c8c 1C       		.uleb128 0x1c
 2883 0c8d AF090000 		.4byte	.LASF152
 2884 0c91 01       		.byte	0x1
 2885 0c92 AF04     		.2byte	0x4af
 2886 0c94 D2000000 		.4byte	0xd2
 2887 0c98 99020000 		.4byte	.LLST18
 2888 0c9c 21       		.uleb128 0x21
 2889 0c9d 06000000 		.4byte	.LVL67
 2890 0ca1 7E110000 		.4byte	0x117e
 2891 0ca5 1E       		.uleb128 0x1e
 2892 0ca6 01       		.uleb128 0x1
 2893 0ca7 50       		.byte	0x50
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 104


 2894 0ca8 03       		.uleb128 0x3
 2895 0ca9 F3       		.byte	0xf3
 2896 0caa 01       		.uleb128 0x1
 2897 0cab 50       		.byte	0x50
 2898 0cac 00       		.byte	0
 2899 0cad 00       		.byte	0
 2900 0cae 1F       		.uleb128 0x1f
 2901 0caf 78010000 		.4byte	.LASF153
 2902 0cb3 01       		.byte	0x1
 2903 0cb4 C604     		.2byte	0x4c6
 2904 0cb6 00000000 		.4byte	.LFB13
 2905 0cba 30000000 		.4byte	.LFE13-.LFB13
 2906 0cbe 01       		.uleb128 0x1
 2907 0cbf 9C       		.byte	0x9c
 2908 0cc0 D50C0000 		.4byte	0xcd5
 2909 0cc4 1C       		.uleb128 0x1c
 2910 0cc5 DC030000 		.4byte	.LASF154
 2911 0cc9 01       		.byte	0x1
 2912 0cca C604     		.2byte	0x4c6
 2913 0ccc 83000000 		.4byte	0x83
 2914 0cd0 BA020000 		.4byte	.LLST19
 2915 0cd4 00       		.byte	0
 2916 0cd5 1F       		.uleb128 0x1f
 2917 0cd6 35050000 		.4byte	.LASF155
 2918 0cda 01       		.byte	0x1
 2919 0cdb 0A05     		.2byte	0x50a
 2920 0cdd 00000000 		.4byte	.LFB14
 2921 0ce1 30000000 		.4byte	.LFE14-.LFB14
 2922 0ce5 01       		.uleb128 0x1
 2923 0ce6 9C       		.byte	0x9c
 2924 0ce7 FC0C0000 		.4byte	0xcfc
 2925 0ceb 1C       		.uleb128 0x1c
 2926 0cec 41010000 		.4byte	.LASF156
 2927 0cf0 01       		.byte	0x1
 2928 0cf1 0A05     		.2byte	0x50a
 2929 0cf3 83000000 		.4byte	0x83
 2930 0cf7 E8020000 		.4byte	.LLST20
 2931 0cfb 00       		.byte	0
 2932 0cfc 1F       		.uleb128 0x1f
 2933 0cfd C1060000 		.4byte	.LASF157
 2934 0d01 01       		.byte	0x1
 2935 0d02 5E05     		.2byte	0x55e
 2936 0d04 00000000 		.4byte	.LFB15
 2937 0d08 12000000 		.4byte	.LFE15-.LFB15
 2938 0d0c 01       		.uleb128 0x1
 2939 0d0d 9C       		.byte	0x9c
 2940 0d0e 580D0000 		.4byte	0xd58
 2941 0d12 1C       		.uleb128 0x1c
 2942 0d13 41010000 		.4byte	.LASF156
 2943 0d17 01       		.byte	0x1
 2944 0d18 5E05     		.2byte	0x55e
 2945 0d1a 83000000 		.4byte	0x83
 2946 0d1e 16030000 		.4byte	.LLST21
 2947 0d22 1C       		.uleb128 0x1c
 2948 0d23 DC030000 		.4byte	.LASF154
 2949 0d27 01       		.byte	0x1
 2950 0d28 5E05     		.2byte	0x55e
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 105


 2951 0d2a 83000000 		.4byte	0x83
 2952 0d2e 42030000 		.4byte	.LLST22
 2953 0d32 1D       		.uleb128 0x1d
 2954 0d33 0A000000 		.4byte	.LVL76
 2955 0d37 AE0C0000 		.4byte	0xcae
 2956 0d3b 470D0000 		.4byte	0xd47
 2957 0d3f 1E       		.uleb128 0x1e
 2958 0d40 01       		.uleb128 0x1
 2959 0d41 50       		.byte	0x50
 2960 0d42 03       		.uleb128 0x3
 2961 0d43 F3       		.byte	0xf3
 2962 0d44 01       		.uleb128 0x1
 2963 0d45 51       		.byte	0x51
 2964 0d46 00       		.byte	0
 2965 0d47 21       		.uleb128 0x21
 2966 0d48 10000000 		.4byte	.LVL77
 2967 0d4c D50C0000 		.4byte	0xcd5
 2968 0d50 1E       		.uleb128 0x1e
 2969 0d51 01       		.uleb128 0x1
 2970 0d52 50       		.byte	0x50
 2971 0d53 02       		.uleb128 0x2
 2972 0d54 74       		.byte	0x74
 2973 0d55 00       		.sleb128 0
 2974 0d56 00       		.byte	0
 2975 0d57 00       		.byte	0
 2976 0d58 1B       		.uleb128 0x1b
 2977 0d59 01050000 		.4byte	.LASF158
 2978 0d5d 01       		.byte	0x1
 2979 0d5e 9205     		.2byte	0x592
 2980 0d60 A4000000 		.4byte	0xa4
 2981 0d64 00000000 		.4byte	.LFB16
 2982 0d68 44000000 		.4byte	.LFE16-.LFB16
 2983 0d6c 01       		.uleb128 0x1
 2984 0d6d 9C       		.byte	0x9c
 2985 0d6e BD0D0000 		.4byte	0xdbd
 2986 0d72 1C       		.uleb128 0x1c
 2987 0d73 7D0C0000 		.4byte	.LASF136
 2988 0d77 01       		.byte	0x1
 2989 0d78 9205     		.2byte	0x592
 2990 0d7a 83000000 		.4byte	0x83
 2991 0d7e 63030000 		.4byte	.LLST23
 2992 0d82 18       		.uleb128 0x18
 2993 0d83 B7050000 		.4byte	.LASF159
 2994 0d87 01       		.byte	0x1
 2995 0d88 9405     		.2byte	0x594
 2996 0d8a A4000000 		.4byte	0xa4
 2997 0d8e 8F030000 		.4byte	.LLST24
 2998 0d92 1D       		.uleb128 0x1d
 2999 0d93 34000000 		.4byte	.LVL83
 3000 0d97 89110000 		.4byte	0x1189
 3001 0d9b AC0D0000 		.4byte	0xdac
 3002 0d9f 1E       		.uleb128 0x1e
 3003 0da0 01       		.uleb128 0x1
 3004 0da1 50       		.byte	0x50
 3005 0da2 02       		.uleb128 0x2
 3006 0da3 74       		.byte	0x74
 3007 0da4 00       		.sleb128 0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 106


 3008 0da5 1E       		.uleb128 0x1e
 3009 0da6 01       		.uleb128 0x1
 3010 0da7 51       		.byte	0x51
 3011 0da8 02       		.uleb128 0x2
 3012 0da9 08       		.byte	0x8
 3013 0daa 55       		.byte	0x55
 3014 0dab 00       		.byte	0
 3015 0dac 21       		.uleb128 0x21
 3016 0dad 3C000000 		.4byte	.LVL86
 3017 0db1 95110000 		.4byte	0x1195
 3018 0db5 1E       		.uleb128 0x1e
 3019 0db6 01       		.uleb128 0x1
 3020 0db7 50       		.byte	0x50
 3021 0db8 02       		.uleb128 0x2
 3022 0db9 74       		.byte	0x74
 3023 0dba 00       		.sleb128 0
 3024 0dbb 00       		.byte	0
 3025 0dbc 00       		.byte	0
 3026 0dbd 1B       		.uleb128 0x1b
 3027 0dbe D0050000 		.4byte	.LASF160
 3028 0dc2 01       		.byte	0x1
 3029 0dc3 0306     		.2byte	0x603
 3030 0dc5 A4000000 		.4byte	0xa4
 3031 0dc9 00000000 		.4byte	.LFB17
 3032 0dcd 1A000000 		.4byte	.LFE17-.LFB17
 3033 0dd1 01       		.uleb128 0x1
 3034 0dd2 9C       		.byte	0x9c
 3035 0dd3 080E0000 		.4byte	0xe08
 3036 0dd7 18       		.uleb128 0x18
 3037 0dd8 B7050000 		.4byte	.LASF159
 3038 0ddc 01       		.byte	0x1
 3039 0ddd 0506     		.2byte	0x605
 3040 0ddf A4000000 		.4byte	0xa4
 3041 0de3 CF030000 		.4byte	.LLST25
 3042 0de7 18       		.uleb128 0x18
 3043 0de8 E6060000 		.4byte	.LASF135
 3044 0dec 01       		.byte	0x1
 3045 0ded 0606     		.2byte	0x606
 3046 0def 83000000 		.4byte	0x83
 3047 0df3 F9030000 		.4byte	.LLST26
 3048 0df7 21       		.uleb128 0x21
 3049 0df8 0E000000 		.4byte	.LVL91
 3050 0dfc 580D0000 		.4byte	0xd58
 3051 0e00 1E       		.uleb128 0x1e
 3052 0e01 01       		.uleb128 0x1
 3053 0e02 50       		.byte	0x50
 3054 0e03 02       		.uleb128 0x2
 3055 0e04 74       		.byte	0x74
 3056 0e05 00       		.sleb128 0
 3057 0e06 00       		.byte	0
 3058 0e07 00       		.byte	0
 3059 0e08 1F       		.uleb128 0x1f
 3060 0e09 12020000 		.4byte	.LASF161
 3061 0e0d 01       		.byte	0x1
 3062 0e0e 060A     		.2byte	0xa06
 3063 0e10 00000000 		.4byte	.LFB22
 3064 0e14 34000000 		.4byte	.LFE22-.LFB22
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 107


 3065 0e18 01       		.uleb128 0x1
 3066 0e19 9C       		.byte	0x9c
 3067 0e1a 640E0000 		.4byte	0xe64
 3068 0e1e 18       		.uleb128 0x18
 3069 0e1f E6060000 		.4byte	.LASF135
 3070 0e23 01       		.byte	0x1
 3071 0e24 080A     		.2byte	0xa08
 3072 0e26 83000000 		.4byte	0x83
 3073 0e2a 18040000 		.4byte	.LLST27
 3074 0e2e 18       		.uleb128 0x18
 3075 0e2f F0060000 		.4byte	.LASF162
 3076 0e33 01       		.byte	0x1
 3077 0e34 090A     		.2byte	0xa09
 3078 0e36 83000000 		.4byte	0x83
 3079 0e3a 37040000 		.4byte	.LLST28
 3080 0e3e 18       		.uleb128 0x18
 3081 0e3f 330B0000 		.4byte	.LASF163
 3082 0e43 01       		.byte	0x1
 3083 0e44 150A     		.2byte	0xa15
 3084 0e46 A00B0000 		.4byte	0xba0
 3085 0e4a 56040000 		.4byte	.LLST29
 3086 0e4e 21       		.uleb128 0x21
 3087 0e4f 18000000 		.4byte	.LVL100
 3088 0e53 A0110000 		.4byte	0x11a0
 3089 0e57 1E       		.uleb128 0x1e
 3090 0e58 01       		.uleb128 0x1
 3091 0e59 50       		.byte	0x50
 3092 0e5a 07       		.uleb128 0x7
 3093 0e5b 74       		.byte	0x74
 3094 0e5c 00       		.sleb128 0
 3095 0e5d 35       		.byte	0x35
 3096 0e5e 24       		.byte	0x24
 3097 0e5f 76       		.byte	0x76
 3098 0e60 00       		.sleb128 0
 3099 0e61 22       		.byte	0x22
 3100 0e62 00       		.byte	0
 3101 0e63 00       		.byte	0
 3102 0e64 1B       		.uleb128 0x1b
 3103 0e65 0A000000 		.4byte	.LASF164
 3104 0e69 01       		.byte	0x1
 3105 0e6a 580A     		.2byte	0xa58
 3106 0e6c 83000000 		.4byte	0x83
 3107 0e70 00000000 		.4byte	.LFB23
 3108 0e74 0C000000 		.4byte	.LFE23-.LFB23
 3109 0e78 01       		.uleb128 0x1
 3110 0e79 9C       		.byte	0x9c
 3111 0e7a 9D0E0000 		.4byte	0xe9d
 3112 0e7e 1C       		.uleb128 0x1c
 3113 0e7f 7D0C0000 		.4byte	.LASF136
 3114 0e83 01       		.byte	0x1
 3115 0e84 580A     		.2byte	0xa58
 3116 0e86 83000000 		.4byte	0x83
 3117 0e8a 69040000 		.4byte	.LLST30
 3118 0e8e 23       		.uleb128 0x23
 3119 0e8f A8090000 		.4byte	.LASF165
 3120 0e93 01       		.byte	0x1
 3121 0e94 5A0A     		.2byte	0xa5a
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 108


 3122 0e96 83000000 		.4byte	0x83
 3123 0e9a 01       		.uleb128 0x1
 3124 0e9b 50       		.byte	0x50
 3125 0e9c 00       		.byte	0
 3126 0e9d 1F       		.uleb128 0x1f
 3127 0e9e B4020000 		.4byte	.LASF166
 3128 0ea2 01       		.byte	0x1
 3129 0ea3 820A     		.2byte	0xa82
 3130 0ea5 00000000 		.4byte	.LFB24
 3131 0ea9 0C000000 		.4byte	.LFE24-.LFB24
 3132 0ead 01       		.uleb128 0x1
 3133 0eae 9C       		.byte	0x9c
 3134 0eaf D00E0000 		.4byte	0xed0
 3135 0eb3 24       		.uleb128 0x24
 3136 0eb4 7D0C0000 		.4byte	.LASF136
 3137 0eb8 01       		.byte	0x1
 3138 0eb9 820A     		.2byte	0xa82
 3139 0ebb 83000000 		.4byte	0x83
 3140 0ebf 01       		.uleb128 0x1
 3141 0ec0 50       		.byte	0x50
 3142 0ec1 24       		.uleb128 0x24
 3143 0ec2 36010000 		.4byte	.LASF167
 3144 0ec6 01       		.byte	0x1
 3145 0ec7 820A     		.2byte	0xa82
 3146 0ec9 83000000 		.4byte	0x83
 3147 0ecd 01       		.uleb128 0x1
 3148 0ece 51       		.byte	0x51
 3149 0ecf 00       		.byte	0
 3150 0ed0 1B       		.uleb128 0x1b
 3151 0ed1 9F030000 		.4byte	.LASF168
 3152 0ed5 01       		.byte	0x1
 3153 0ed6 D60A     		.2byte	0xad6
 3154 0ed8 6B000000 		.4byte	0x6b
 3155 0edc 00000000 		.4byte	.LFB25
 3156 0ee0 34000000 		.4byte	.LFE25-.LFB25
 3157 0ee4 01       		.uleb128 0x1
 3158 0ee5 9C       		.byte	0x9c
 3159 0ee6 290F0000 		.4byte	0xf29
 3160 0eea 1C       		.uleb128 0x1c
 3161 0eeb 4B0C0000 		.4byte	.LASF169
 3162 0eef 01       		.byte	0x1
 3163 0ef0 D60A     		.2byte	0xad6
 3164 0ef2 83000000 		.4byte	0x83
 3165 0ef6 8A040000 		.4byte	.LLST31
 3166 0efa 24       		.uleb128 0x24
 3167 0efb EF040000 		.4byte	.LASF27
 3168 0eff 01       		.byte	0x1
 3169 0f00 D60A     		.2byte	0xad6
 3170 0f02 83000000 		.4byte	0x83
 3171 0f06 01       		.uleb128 0x1
 3172 0f07 51       		.byte	0x51
 3173 0f08 18       		.uleb128 0x18
 3174 0f09 73090000 		.4byte	.LASF170
 3175 0f0d 01       		.byte	0x1
 3176 0f0e D80A     		.2byte	0xad8
 3177 0f10 83000000 		.4byte	0x83
 3178 0f14 C4040000 		.4byte	.LLST32
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 109


 3179 0f18 18       		.uleb128 0x18
 3180 0f19 590C0000 		.4byte	.LASF171
 3181 0f1d 01       		.byte	0x1
 3182 0f1e D90A     		.2byte	0xad9
 3183 0f20 83000000 		.4byte	0x83
 3184 0f24 D7040000 		.4byte	.LLST33
 3185 0f28 00       		.byte	0
 3186 0f29 17       		.uleb128 0x17
 3187 0f2a D0010000 		.4byte	.LASF172
 3188 0f2e 01       		.byte	0x1
 3189 0f2f BE08     		.2byte	0x8be
 3190 0f31 00000000 		.4byte	.LFB21
 3191 0f35 14000000 		.4byte	.LFE21-.LFB21
 3192 0f39 01       		.uleb128 0x1
 3193 0f3a 9C       		.byte	0x9c
 3194 0f3b A90F0000 		.4byte	0xfa9
 3195 0f3f 1C       		.uleb128 0x1c
 3196 0f40 E6060000 		.4byte	.LASF135
 3197 0f44 01       		.byte	0x1
 3198 0f45 BE08     		.2byte	0x8be
 3199 0f47 83000000 		.4byte	0x83
 3200 0f4b F6040000 		.4byte	.LLST34
 3201 0f4f 1C       		.uleb128 0x1c
 3202 0f50 C8010000 		.4byte	.LASF173
 3203 0f54 01       		.byte	0x1
 3204 0f55 BE08     		.2byte	0x8be
 3205 0f57 A90F0000 		.4byte	0xfa9
 3206 0f5b 17050000 		.4byte	.LLST35
 3207 0f5f 23       		.uleb128 0x23
 3208 0f60 AB020000 		.4byte	.LASF174
 3209 0f64 01       		.byte	0x1
 3210 0f65 C008     		.2byte	0x8c0
 3211 0f67 6B000000 		.4byte	0x6b
 3212 0f6b 01       		.uleb128 0x1
 3213 0f6c 50       		.byte	0x50
 3214 0f6d 20       		.uleb128 0x20
 3215 0f6e 2C010000 		.4byte	.LASF175
 3216 0f72 01       		.byte	0x1
 3217 0f73 C108     		.2byte	0x8c1
 3218 0f75 6B000000 		.4byte	0x6b
 3219 0f79 00       		.byte	0
 3220 0f7a 18       		.uleb128 0x18
 3221 0f7b 4B0C0000 		.4byte	.LASF169
 3222 0f7f 01       		.byte	0x1
 3223 0f80 C708     		.2byte	0x8c7
 3224 0f82 83000000 		.4byte	0x83
 3225 0f86 43050000 		.4byte	.LLST36
 3226 0f8a 1D       		.uleb128 0x1d
 3227 0f8b 08000000 		.4byte	.LVL117
 3228 0f8f 640E0000 		.4byte	0xe64
 3229 0f93 9F0F0000 		.4byte	0xf9f
 3230 0f97 1E       		.uleb128 0x1e
 3231 0f98 01       		.uleb128 0x1
 3232 0f99 50       		.byte	0x50
 3233 0f9a 03       		.uleb128 0x3
 3234 0f9b F3       		.byte	0xf3
 3235 0f9c 01       		.uleb128 0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 110


 3236 0f9d 50       		.byte	0x50
 3237 0f9e 00       		.byte	0
 3238 0f9f 19       		.uleb128 0x19
 3239 0fa0 10000000 		.4byte	.LVL119
 3240 0fa4 D00E0000 		.4byte	0xed0
 3241 0fa8 00       		.byte	0
 3242 0fa9 06       		.uleb128 0x6
 3243 0faa 04       		.byte	0x4
 3244 0fab CB010000 		.4byte	0x1cb
 3245 0faf 1F       		.uleb128 0x1f
 3246 0fb0 A40C0000 		.4byte	.LASF176
 3247 0fb4 01       		.byte	0x1
 3248 0fb5 8908     		.2byte	0x889
 3249 0fb7 00000000 		.4byte	.LFB20
 3250 0fbb 28000000 		.4byte	.LFE20-.LFB20
 3251 0fbf 01       		.uleb128 0x1
 3252 0fc0 9C       		.byte	0x9c
 3253 0fc1 0A100000 		.4byte	0x100a
 3254 0fc5 18       		.uleb128 0x18
 3255 0fc6 E6060000 		.4byte	.LASF135
 3256 0fca 01       		.byte	0x1
 3257 0fcb 8B08     		.2byte	0x88b
 3258 0fcd 83000000 		.4byte	0x83
 3259 0fd1 56050000 		.4byte	.LLST37
 3260 0fd5 18       		.uleb128 0x18
 3261 0fd6 C8010000 		.4byte	.LASF173
 3262 0fda 01       		.byte	0x1
 3263 0fdb 8C08     		.2byte	0x88c
 3264 0fdd A90F0000 		.4byte	0xfa9
 3265 0fe1 75050000 		.4byte	.LLST38
 3266 0fe5 1D       		.uleb128 0x1d
 3267 0fe6 14000000 		.4byte	.LVL124
 3268 0fea 290F0000 		.4byte	0xf29
 3269 0fee F90F0000 		.4byte	0xff9
 3270 0ff2 1E       		.uleb128 0x1e
 3271 0ff3 01       		.uleb128 0x1
 3272 0ff4 50       		.byte	0x50
 3273 0ff5 02       		.uleb128 0x2
 3274 0ff6 74       		.byte	0x74
 3275 0ff7 00       		.sleb128 0
 3276 0ff8 00       		.byte	0
 3277 0ff9 21       		.uleb128 0x21
 3278 0ffa 1A000000 		.4byte	.LVL125
 3279 0ffe 95110000 		.4byte	0x1195
 3280 1002 1E       		.uleb128 0x1e
 3281 1003 01       		.uleb128 0x1
 3282 1004 50       		.byte	0x50
 3283 1005 02       		.uleb128 0x2
 3284 1006 74       		.byte	0x74
 3285 1007 00       		.sleb128 0
 3286 1008 00       		.byte	0
 3287 1009 00       		.byte	0
 3288 100a 1B       		.uleb128 0x1b
 3289 100b 350C0000 		.4byte	.LASF177
 3290 100f 01       		.byte	0x1
 3291 1010 0402     		.2byte	0x204
 3292 1012 A4000000 		.4byte	0xa4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 111


 3293 1016 00000000 		.4byte	.LFB6
 3294 101a 18000000 		.4byte	.LFE6-.LFB6
 3295 101e 01       		.uleb128 0x1
 3296 101f 9C       		.byte	0x9c
 3297 1020 5C100000 		.4byte	0x105c
 3298 1024 20       		.uleb128 0x20
 3299 1025 FD000000 		.4byte	.LASF178
 3300 1029 01       		.byte	0x1
 3301 102a 0602     		.2byte	0x206
 3302 102c A4000000 		.4byte	0xa4
 3303 1030 00       		.byte	0
 3304 1031 19       		.uleb128 0x19
 3305 1032 06000000 		.4byte	.LVL129
 3306 1036 A1090000 		.4byte	0x9a1
 3307 103a 19       		.uleb128 0x19
 3308 103b 0A000000 		.4byte	.LVL130
 3309 103f AF0F0000 		.4byte	0xfaf
 3310 1043 19       		.uleb128 0x19
 3311 1044 0E000000 		.4byte	.LVL131
 3312 1048 F60B0000 		.4byte	0xbf6
 3313 104c 21       		.uleb128 0x21
 3314 104d 14000000 		.4byte	.LVL132
 3315 1051 AB0B0000 		.4byte	0xbab
 3316 1055 1E       		.uleb128 0x1e
 3317 1056 01       		.uleb128 0x1
 3318 1057 50       		.byte	0x50
 3319 1058 01       		.uleb128 0x1
 3320 1059 30       		.byte	0x30
 3321 105a 00       		.byte	0
 3322 105b 00       		.byte	0
 3323 105c 25       		.uleb128 0x25
 3324 105d 1E060000 		.4byte	.LASF179
 3325 1061 04       		.byte	0x4
 3326 1062 9105     		.2byte	0x591
 3327 1064 E8070000 		.4byte	0x7e8
 3328 1068 25       		.uleb128 0x25
 3329 1069 A0080000 		.4byte	.LASF180
 3330 106d 04       		.byte	0x4
 3331 106e 9205     		.2byte	0x592
 3332 1070 74100000 		.4byte	0x1074
 3333 1074 22       		.uleb128 0x22
 3334 1075 67090000 		.4byte	0x967
 3335 1079 0E       		.uleb128 0xe
 3336 107a A60B0000 		.4byte	0xba6
 3337 107e 89100000 		.4byte	0x1089
 3338 1082 0F       		.uleb128 0xf
 3339 1083 C4010000 		.4byte	0x1c4
 3340 1087 0C       		.byte	0xc
 3341 1088 00       		.byte	0
 3342 1089 25       		.uleb128 0x25
 3343 108a C6080000 		.4byte	.LASF181
 3344 108e 04       		.byte	0x4
 3345 108f 9305     		.2byte	0x593
 3346 1091 95100000 		.4byte	0x1095
 3347 1095 22       		.uleb128 0x22
 3348 1096 79100000 		.4byte	0x1079
 3349 109a 26       		.uleb128 0x26
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 112


 3350 109b 87000000 		.4byte	.LASF182
 3351 109f 01       		.byte	0x1
 3352 10a0 BB       		.byte	0xbb
 3353 10a1 BC000000 		.4byte	0xbc
 3354 10a5 05       		.uleb128 0x5
 3355 10a6 03       		.byte	0x3
 3356 10a7 00000000 		.4byte	CapSense_widgetIndex
 3357 10ab 26       		.uleb128 0x26
 3358 10ac 64020000 		.4byte	.LASF183
 3359 10b0 01       		.byte	0x1
 3360 10b1 BC       		.byte	0xbc
 3361 10b2 BC000000 		.4byte	0xbc
 3362 10b6 05       		.uleb128 0x5
 3363 10b7 03       		.byte	0x3
 3364 10b8 00000000 		.4byte	CapSense_sensorIndex
 3365 10bc 26       		.uleb128 0x26
 3366 10bd 860C0000 		.4byte	.LASF184
 3367 10c1 01       		.byte	0x1
 3368 10c2 BD       		.byte	0xbd
 3369 10c3 6B000000 		.4byte	0x6b
 3370 10c7 05       		.uleb128 0x5
 3371 10c8 03       		.byte	0x3
 3372 10c9 00000000 		.4byte	CapSense_requestScanAllWidget
 3373 10cd 26       		.uleb128 0x26
 3374 10ce 810B0000 		.4byte	.LASF185
 3375 10d2 01       		.byte	0x1
 3376 10d3 C0       		.byte	0xc0
 3377 10d4 27090000 		.4byte	0x927
 3378 10d8 05       		.uleb128 0x5
 3379 10d9 03       		.byte	0x3
 3380 10da 00000000 		.4byte	CapSense_curRamSnsPtr
 3381 10de 26       		.uleb128 0x26
 3382 10df 57090000 		.4byte	.LASF186
 3383 10e3 01       		.byte	0x1
 3384 10e4 AE       		.byte	0xae
 3385 10e5 28010000 		.4byte	0x128
 3386 10e9 05       		.uleb128 0x5
 3387 10ea 03       		.byte	0x3
 3388 10eb 00000000 		.4byte	CapSense_currentSenseMethod
 3389 10ef 26       		.uleb128 0x26
 3390 10f0 A30B0000 		.4byte	.LASF187
 3391 10f4 01       		.byte	0x1
 3392 10f5 B7       		.byte	0xb7
 3393 10f6 00110000 		.4byte	0x1100
 3394 10fa 05       		.uleb128 0x5
 3395 10fb 03       		.byte	0x3
 3396 10fc 00000000 		.4byte	CapSense_scanFreqIndex
 3397 1100 22       		.uleb128 0x22
 3398 1101 6B000000 		.4byte	0x6b
 3399 1105 26       		.uleb128 0x26
 3400 1106 A7060000 		.4byte	.LASF188
 3401 110a 01       		.byte	0x1
 3402 110b CF       		.byte	0xcf
 3403 110c A00B0000 		.4byte	0xba0
 3404 1110 05       		.uleb128 0x5
 3405 1111 03       		.byte	0x3
 3406 1112 00000000 		.4byte	CapSense_curSnsIOPtr
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 113


 3407 1116 27       		.uleb128 0x27
 3408 1117 74070000 		.4byte	.LASF189
 3409 111b 74070000 		.4byte	.LASF189
 3410 111f 05       		.byte	0x5
 3411 1120 D401     		.2byte	0x1d4
 3412 1122 27       		.uleb128 0x27
 3413 1123 2D020000 		.4byte	.LASF190
 3414 1127 2D020000 		.4byte	.LASF190
 3415 112b 05       		.byte	0x5
 3416 112c B701     		.2byte	0x1b7
 3417 112e 27       		.uleb128 0x27
 3418 112f CB0A0000 		.4byte	.LASF191
 3419 1133 CB0A0000 		.4byte	.LASF191
 3420 1137 05       		.byte	0x5
 3421 1138 B901     		.2byte	0x1b9
 3422 113a 28       		.uleb128 0x28
 3423 113b 6A0B0000 		.4byte	.LASF192
 3424 113f 6A0B0000 		.4byte	.LASF192
 3425 1143 06       		.byte	0x6
 3426 1144 E5       		.byte	0xe5
 3427 1145 28       		.uleb128 0x28
 3428 1146 59040000 		.4byte	.LASF193
 3429 114a 59040000 		.4byte	.LASF193
 3430 114e 06       		.byte	0x6
 3431 114f E6       		.byte	0xe6
 3432 1150 27       		.uleb128 0x27
 3433 1151 24090000 		.4byte	.LASF194
 3434 1155 24090000 		.4byte	.LASF194
 3435 1159 05       		.byte	0x5
 3436 115a C001     		.2byte	0x1c0
 3437 115c 28       		.uleb128 0x28
 3438 115d 33040000 		.4byte	.LASF195
 3439 1161 33040000 		.4byte	.LASF195
 3440 1165 07       		.byte	0x7
 3441 1166 8A       		.byte	0x8a
 3442 1167 27       		.uleb128 0x27
 3443 1168 93050000 		.4byte	.LASF196
 3444 116c 93050000 		.4byte	.LASF196
 3445 1170 05       		.byte	0x5
 3446 1171 D001     		.2byte	0x1d0
 3447 1173 28       		.uleb128 0x28
 3448 1174 D6080000 		.4byte	.LASF197
 3449 1178 D6080000 		.4byte	.LASF197
 3450 117c 07       		.byte	0x7
 3451 117d 89       		.byte	0x89
 3452 117e 28       		.uleb128 0x28
 3453 117f BF090000 		.4byte	.LASF198
 3454 1183 BF090000 		.4byte	.LASF198
 3455 1187 08       		.byte	0x8
 3456 1188 18       		.byte	0x18
 3457 1189 27       		.uleb128 0x27
 3458 118a 5F000000 		.4byte	.LASF199
 3459 118e 5F000000 		.4byte	.LASF199
 3460 1192 05       		.byte	0x5
 3461 1193 BD01     		.2byte	0x1bd
 3462 1195 28       		.uleb128 0x28
 3463 1196 9C000000 		.4byte	.LASF200
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 114


 3464 119a 9C000000 		.4byte	.LASF200
 3465 119e 07       		.byte	0x7
 3466 119f 83       		.byte	0x83
 3467 11a0 27       		.uleb128 0x27
 3468 11a1 C8070000 		.4byte	.LASF201
 3469 11a5 C8070000 		.4byte	.LASF201
 3470 11a9 05       		.byte	0x5
 3471 11aa C101     		.2byte	0x1c1
 3472 11ac 00       		.byte	0
 3473              		.section	.debug_abbrev,"",%progbits
 3474              	.Ldebug_abbrev0:
 3475 0000 01       		.uleb128 0x1
 3476 0001 11       		.uleb128 0x11
 3477 0002 01       		.byte	0x1
 3478 0003 25       		.uleb128 0x25
 3479 0004 0E       		.uleb128 0xe
 3480 0005 13       		.uleb128 0x13
 3481 0006 0B       		.uleb128 0xb
 3482 0007 03       		.uleb128 0x3
 3483 0008 0E       		.uleb128 0xe
 3484 0009 1B       		.uleb128 0x1b
 3485 000a 0E       		.uleb128 0xe
 3486 000b 55       		.uleb128 0x55
 3487 000c 17       		.uleb128 0x17
 3488 000d 11       		.uleb128 0x11
 3489 000e 01       		.uleb128 0x1
 3490 000f 10       		.uleb128 0x10
 3491 0010 17       		.uleb128 0x17
 3492 0011 00       		.byte	0
 3493 0012 00       		.byte	0
 3494 0013 02       		.uleb128 0x2
 3495 0014 24       		.uleb128 0x24
 3496 0015 00       		.byte	0
 3497 0016 0B       		.uleb128 0xb
 3498 0017 0B       		.uleb128 0xb
 3499 0018 3E       		.uleb128 0x3e
 3500 0019 0B       		.uleb128 0xb
 3501 001a 03       		.uleb128 0x3
 3502 001b 0E       		.uleb128 0xe
 3503 001c 00       		.byte	0
 3504 001d 00       		.byte	0
 3505 001e 03       		.uleb128 0x3
 3506 001f 24       		.uleb128 0x24
 3507 0020 00       		.byte	0
 3508 0021 0B       		.uleb128 0xb
 3509 0022 0B       		.uleb128 0xb
 3510 0023 3E       		.uleb128 0x3e
 3511 0024 0B       		.uleb128 0xb
 3512 0025 03       		.uleb128 0x3
 3513 0026 08       		.uleb128 0x8
 3514 0027 00       		.byte	0
 3515 0028 00       		.byte	0
 3516 0029 04       		.uleb128 0x4
 3517 002a 16       		.uleb128 0x16
 3518 002b 00       		.byte	0
 3519 002c 03       		.uleb128 0x3
 3520 002d 0E       		.uleb128 0xe
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 115


 3521 002e 3A       		.uleb128 0x3a
 3522 002f 0B       		.uleb128 0xb
 3523 0030 3B       		.uleb128 0x3b
 3524 0031 05       		.uleb128 0x5
 3525 0032 49       		.uleb128 0x49
 3526 0033 13       		.uleb128 0x13
 3527 0034 00       		.byte	0
 3528 0035 00       		.byte	0
 3529 0036 05       		.uleb128 0x5
 3530 0037 35       		.uleb128 0x35
 3531 0038 00       		.byte	0
 3532 0039 49       		.uleb128 0x49
 3533 003a 13       		.uleb128 0x13
 3534 003b 00       		.byte	0
 3535 003c 00       		.byte	0
 3536 003d 06       		.uleb128 0x6
 3537 003e 0F       		.uleb128 0xf
 3538 003f 00       		.byte	0
 3539 0040 0B       		.uleb128 0xb
 3540 0041 0B       		.uleb128 0xb
 3541 0042 49       		.uleb128 0x49
 3542 0043 13       		.uleb128 0x13
 3543 0044 00       		.byte	0
 3544 0045 00       		.byte	0
 3545 0046 07       		.uleb128 0x7
 3546 0047 15       		.uleb128 0x15
 3547 0048 00       		.byte	0
 3548 0049 27       		.uleb128 0x27
 3549 004a 19       		.uleb128 0x19
 3550 004b 00       		.byte	0
 3551 004c 00       		.byte	0
 3552 004d 08       		.uleb128 0x8
 3553 004e 04       		.uleb128 0x4
 3554 004f 01       		.byte	0x1
 3555 0050 0B       		.uleb128 0xb
 3556 0051 0B       		.uleb128 0xb
 3557 0052 49       		.uleb128 0x49
 3558 0053 13       		.uleb128 0x13
 3559 0054 3A       		.uleb128 0x3a
 3560 0055 0B       		.uleb128 0xb
 3561 0056 3B       		.uleb128 0x3b
 3562 0057 0B       		.uleb128 0xb
 3563 0058 01       		.uleb128 0x1
 3564 0059 13       		.uleb128 0x13
 3565 005a 00       		.byte	0
 3566 005b 00       		.byte	0
 3567 005c 09       		.uleb128 0x9
 3568 005d 28       		.uleb128 0x28
 3569 005e 00       		.byte	0
 3570 005f 03       		.uleb128 0x3
 3571 0060 0E       		.uleb128 0xe
 3572 0061 1C       		.uleb128 0x1c
 3573 0062 0B       		.uleb128 0xb
 3574 0063 00       		.byte	0
 3575 0064 00       		.byte	0
 3576 0065 0A       		.uleb128 0xa
 3577 0066 16       		.uleb128 0x16
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 116


 3578 0067 00       		.byte	0
 3579 0068 03       		.uleb128 0x3
 3580 0069 0E       		.uleb128 0xe
 3581 006a 3A       		.uleb128 0x3a
 3582 006b 0B       		.uleb128 0xb
 3583 006c 3B       		.uleb128 0x3b
 3584 006d 0B       		.uleb128 0xb
 3585 006e 49       		.uleb128 0x49
 3586 006f 13       		.uleb128 0x13
 3587 0070 00       		.byte	0
 3588 0071 00       		.byte	0
 3589 0072 0B       		.uleb128 0xb
 3590 0073 13       		.uleb128 0x13
 3591 0074 01       		.byte	0x1
 3592 0075 0B       		.uleb128 0xb
 3593 0076 0B       		.uleb128 0xb
 3594 0077 3A       		.uleb128 0x3a
 3595 0078 0B       		.uleb128 0xb
 3596 0079 3B       		.uleb128 0x3b
 3597 007a 0B       		.uleb128 0xb
 3598 007b 01       		.uleb128 0x1
 3599 007c 13       		.uleb128 0x13
 3600 007d 00       		.byte	0
 3601 007e 00       		.byte	0
 3602 007f 0C       		.uleb128 0xc
 3603 0080 0D       		.uleb128 0xd
 3604 0081 00       		.byte	0
 3605 0082 03       		.uleb128 0x3
 3606 0083 08       		.uleb128 0x8
 3607 0084 3A       		.uleb128 0x3a
 3608 0085 0B       		.uleb128 0xb
 3609 0086 3B       		.uleb128 0x3b
 3610 0087 0B       		.uleb128 0xb
 3611 0088 49       		.uleb128 0x49
 3612 0089 13       		.uleb128 0x13
 3613 008a 38       		.uleb128 0x38
 3614 008b 0B       		.uleb128 0xb
 3615 008c 00       		.byte	0
 3616 008d 00       		.byte	0
 3617 008e 0D       		.uleb128 0xd
 3618 008f 0D       		.uleb128 0xd
 3619 0090 00       		.byte	0
 3620 0091 03       		.uleb128 0x3
 3621 0092 0E       		.uleb128 0xe
 3622 0093 3A       		.uleb128 0x3a
 3623 0094 0B       		.uleb128 0xb
 3624 0095 3B       		.uleb128 0x3b
 3625 0096 0B       		.uleb128 0xb
 3626 0097 49       		.uleb128 0x49
 3627 0098 13       		.uleb128 0x13
 3628 0099 38       		.uleb128 0x38
 3629 009a 0B       		.uleb128 0xb
 3630 009b 00       		.byte	0
 3631 009c 00       		.byte	0
 3632 009d 0E       		.uleb128 0xe
 3633 009e 01       		.uleb128 0x1
 3634 009f 01       		.byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 117


 3635 00a0 49       		.uleb128 0x49
 3636 00a1 13       		.uleb128 0x13
 3637 00a2 01       		.uleb128 0x1
 3638 00a3 13       		.uleb128 0x13
 3639 00a4 00       		.byte	0
 3640 00a5 00       		.byte	0
 3641 00a6 0F       		.uleb128 0xf
 3642 00a7 21       		.uleb128 0x21
 3643 00a8 00       		.byte	0
 3644 00a9 49       		.uleb128 0x49
 3645 00aa 13       		.uleb128 0x13
 3646 00ab 2F       		.uleb128 0x2f
 3647 00ac 0B       		.uleb128 0xb
 3648 00ad 00       		.byte	0
 3649 00ae 00       		.byte	0
 3650 00af 10       		.uleb128 0x10
 3651 00b0 0D       		.uleb128 0xd
 3652 00b1 00       		.byte	0
 3653 00b2 03       		.uleb128 0x3
 3654 00b3 0E       		.uleb128 0xe
 3655 00b4 3A       		.uleb128 0x3a
 3656 00b5 0B       		.uleb128 0xb
 3657 00b6 3B       		.uleb128 0x3b
 3658 00b7 05       		.uleb128 0x5
 3659 00b8 49       		.uleb128 0x49
 3660 00b9 13       		.uleb128 0x13
 3661 00ba 38       		.uleb128 0x38
 3662 00bb 0B       		.uleb128 0xb
 3663 00bc 00       		.byte	0
 3664 00bd 00       		.byte	0
 3665 00be 11       		.uleb128 0x11
 3666 00bf 13       		.uleb128 0x13
 3667 00c0 01       		.byte	0x1
 3668 00c1 0B       		.uleb128 0xb
 3669 00c2 0B       		.uleb128 0xb
 3670 00c3 3A       		.uleb128 0x3a
 3671 00c4 0B       		.uleb128 0xb
 3672 00c5 3B       		.uleb128 0x3b
 3673 00c6 05       		.uleb128 0x5
 3674 00c7 01       		.uleb128 0x1
 3675 00c8 13       		.uleb128 0x13
 3676 00c9 00       		.byte	0
 3677 00ca 00       		.byte	0
 3678 00cb 12       		.uleb128 0x12
 3679 00cc 0D       		.uleb128 0xd
 3680 00cd 00       		.byte	0
 3681 00ce 03       		.uleb128 0x3
 3682 00cf 08       		.uleb128 0x8
 3683 00d0 3A       		.uleb128 0x3a
 3684 00d1 0B       		.uleb128 0xb
 3685 00d2 3B       		.uleb128 0x3b
 3686 00d3 05       		.uleb128 0x5
 3687 00d4 49       		.uleb128 0x49
 3688 00d5 13       		.uleb128 0x13
 3689 00d6 38       		.uleb128 0x38
 3690 00d7 0B       		.uleb128 0xb
 3691 00d8 00       		.byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 118


 3692 00d9 00       		.byte	0
 3693 00da 13       		.uleb128 0x13
 3694 00db 13       		.uleb128 0x13
 3695 00dc 01       		.byte	0x1
 3696 00dd 0B       		.uleb128 0xb
 3697 00de 05       		.uleb128 0x5
 3698 00df 3A       		.uleb128 0x3a
 3699 00e0 0B       		.uleb128 0xb
 3700 00e1 3B       		.uleb128 0x3b
 3701 00e2 05       		.uleb128 0x5
 3702 00e3 01       		.uleb128 0x1
 3703 00e4 13       		.uleb128 0x13
 3704 00e5 00       		.byte	0
 3705 00e6 00       		.byte	0
 3706 00e7 14       		.uleb128 0x14
 3707 00e8 0D       		.uleb128 0xd
 3708 00e9 00       		.byte	0
 3709 00ea 03       		.uleb128 0x3
 3710 00eb 0E       		.uleb128 0xe
 3711 00ec 3A       		.uleb128 0x3a
 3712 00ed 0B       		.uleb128 0xb
 3713 00ee 3B       		.uleb128 0x3b
 3714 00ef 05       		.uleb128 0x5
 3715 00f0 49       		.uleb128 0x49
 3716 00f1 13       		.uleb128 0x13
 3717 00f2 38       		.uleb128 0x38
 3718 00f3 05       		.uleb128 0x5
 3719 00f4 00       		.byte	0
 3720 00f5 00       		.byte	0
 3721 00f6 15       		.uleb128 0x15
 3722 00f7 26       		.uleb128 0x26
 3723 00f8 00       		.byte	0
 3724 00f9 00       		.byte	0
 3725 00fa 00       		.byte	0
 3726 00fb 16       		.uleb128 0x16
 3727 00fc 0F       		.uleb128 0xf
 3728 00fd 00       		.byte	0
 3729 00fe 0B       		.uleb128 0xb
 3730 00ff 0B       		.uleb128 0xb
 3731 0100 00       		.byte	0
 3732 0101 00       		.byte	0
 3733 0102 17       		.uleb128 0x17
 3734 0103 2E       		.uleb128 0x2e
 3735 0104 01       		.byte	0x1
 3736 0105 03       		.uleb128 0x3
 3737 0106 0E       		.uleb128 0xe
 3738 0107 3A       		.uleb128 0x3a
 3739 0108 0B       		.uleb128 0xb
 3740 0109 3B       		.uleb128 0x3b
 3741 010a 05       		.uleb128 0x5
 3742 010b 27       		.uleb128 0x27
 3743 010c 19       		.uleb128 0x19
 3744 010d 11       		.uleb128 0x11
 3745 010e 01       		.uleb128 0x1
 3746 010f 12       		.uleb128 0x12
 3747 0110 06       		.uleb128 0x6
 3748 0111 40       		.uleb128 0x40
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 119


 3749 0112 18       		.uleb128 0x18
 3750 0113 9742     		.uleb128 0x2117
 3751 0115 19       		.uleb128 0x19
 3752 0116 01       		.uleb128 0x1
 3753 0117 13       		.uleb128 0x13
 3754 0118 00       		.byte	0
 3755 0119 00       		.byte	0
 3756 011a 18       		.uleb128 0x18
 3757 011b 34       		.uleb128 0x34
 3758 011c 00       		.byte	0
 3759 011d 03       		.uleb128 0x3
 3760 011e 0E       		.uleb128 0xe
 3761 011f 3A       		.uleb128 0x3a
 3762 0120 0B       		.uleb128 0xb
 3763 0121 3B       		.uleb128 0x3b
 3764 0122 05       		.uleb128 0x5
 3765 0123 49       		.uleb128 0x49
 3766 0124 13       		.uleb128 0x13
 3767 0125 02       		.uleb128 0x2
 3768 0126 17       		.uleb128 0x17
 3769 0127 00       		.byte	0
 3770 0128 00       		.byte	0
 3771 0129 19       		.uleb128 0x19
 3772 012a 898201   		.uleb128 0x4109
 3773 012d 00       		.byte	0
 3774 012e 11       		.uleb128 0x11
 3775 012f 01       		.uleb128 0x1
 3776 0130 31       		.uleb128 0x31
 3777 0131 13       		.uleb128 0x13
 3778 0132 00       		.byte	0
 3779 0133 00       		.byte	0
 3780 0134 1A       		.uleb128 0x1a
 3781 0135 2E       		.uleb128 0x2e
 3782 0136 00       		.byte	0
 3783 0137 3F       		.uleb128 0x3f
 3784 0138 19       		.uleb128 0x19
 3785 0139 03       		.uleb128 0x3
 3786 013a 0E       		.uleb128 0xe
 3787 013b 3A       		.uleb128 0x3a
 3788 013c 0B       		.uleb128 0xb
 3789 013d 3B       		.uleb128 0x3b
 3790 013e 0B       		.uleb128 0xb
 3791 013f 27       		.uleb128 0x27
 3792 0140 19       		.uleb128 0x19
 3793 0141 49       		.uleb128 0x49
 3794 0142 13       		.uleb128 0x13
 3795 0143 11       		.uleb128 0x11
 3796 0144 01       		.uleb128 0x1
 3797 0145 12       		.uleb128 0x12
 3798 0146 06       		.uleb128 0x6
 3799 0147 40       		.uleb128 0x40
 3800 0148 18       		.uleb128 0x18
 3801 0149 9742     		.uleb128 0x2117
 3802 014b 19       		.uleb128 0x19
 3803 014c 00       		.byte	0
 3804 014d 00       		.byte	0
 3805 014e 1B       		.uleb128 0x1b
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 120


 3806 014f 2E       		.uleb128 0x2e
 3807 0150 01       		.byte	0x1
 3808 0151 3F       		.uleb128 0x3f
 3809 0152 19       		.uleb128 0x19
 3810 0153 03       		.uleb128 0x3
 3811 0154 0E       		.uleb128 0xe
 3812 0155 3A       		.uleb128 0x3a
 3813 0156 0B       		.uleb128 0xb
 3814 0157 3B       		.uleb128 0x3b
 3815 0158 05       		.uleb128 0x5
 3816 0159 27       		.uleb128 0x27
 3817 015a 19       		.uleb128 0x19
 3818 015b 49       		.uleb128 0x49
 3819 015c 13       		.uleb128 0x13
 3820 015d 11       		.uleb128 0x11
 3821 015e 01       		.uleb128 0x1
 3822 015f 12       		.uleb128 0x12
 3823 0160 06       		.uleb128 0x6
 3824 0161 40       		.uleb128 0x40
 3825 0162 18       		.uleb128 0x18
 3826 0163 9742     		.uleb128 0x2117
 3827 0165 19       		.uleb128 0x19
 3828 0166 01       		.uleb128 0x1
 3829 0167 13       		.uleb128 0x13
 3830 0168 00       		.byte	0
 3831 0169 00       		.byte	0
 3832 016a 1C       		.uleb128 0x1c
 3833 016b 05       		.uleb128 0x5
 3834 016c 00       		.byte	0
 3835 016d 03       		.uleb128 0x3
 3836 016e 0E       		.uleb128 0xe
 3837 016f 3A       		.uleb128 0x3a
 3838 0170 0B       		.uleb128 0xb
 3839 0171 3B       		.uleb128 0x3b
 3840 0172 05       		.uleb128 0x5
 3841 0173 49       		.uleb128 0x49
 3842 0174 13       		.uleb128 0x13
 3843 0175 02       		.uleb128 0x2
 3844 0176 17       		.uleb128 0x17
 3845 0177 00       		.byte	0
 3846 0178 00       		.byte	0
 3847 0179 1D       		.uleb128 0x1d
 3848 017a 898201   		.uleb128 0x4109
 3849 017d 01       		.byte	0x1
 3850 017e 11       		.uleb128 0x11
 3851 017f 01       		.uleb128 0x1
 3852 0180 31       		.uleb128 0x31
 3853 0181 13       		.uleb128 0x13
 3854 0182 01       		.uleb128 0x1
 3855 0183 13       		.uleb128 0x13
 3856 0184 00       		.byte	0
 3857 0185 00       		.byte	0
 3858 0186 1E       		.uleb128 0x1e
 3859 0187 8A8201   		.uleb128 0x410a
 3860 018a 00       		.byte	0
 3861 018b 02       		.uleb128 0x2
 3862 018c 18       		.uleb128 0x18
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 121


 3863 018d 9142     		.uleb128 0x2111
 3864 018f 18       		.uleb128 0x18
 3865 0190 00       		.byte	0
 3866 0191 00       		.byte	0
 3867 0192 1F       		.uleb128 0x1f
 3868 0193 2E       		.uleb128 0x2e
 3869 0194 01       		.byte	0x1
 3870 0195 3F       		.uleb128 0x3f
 3871 0196 19       		.uleb128 0x19
 3872 0197 03       		.uleb128 0x3
 3873 0198 0E       		.uleb128 0xe
 3874 0199 3A       		.uleb128 0x3a
 3875 019a 0B       		.uleb128 0xb
 3876 019b 3B       		.uleb128 0x3b
 3877 019c 05       		.uleb128 0x5
 3878 019d 27       		.uleb128 0x27
 3879 019e 19       		.uleb128 0x19
 3880 019f 11       		.uleb128 0x11
 3881 01a0 01       		.uleb128 0x1
 3882 01a1 12       		.uleb128 0x12
 3883 01a2 06       		.uleb128 0x6
 3884 01a3 40       		.uleb128 0x40
 3885 01a4 18       		.uleb128 0x18
 3886 01a5 9742     		.uleb128 0x2117
 3887 01a7 19       		.uleb128 0x19
 3888 01a8 01       		.uleb128 0x1
 3889 01a9 13       		.uleb128 0x13
 3890 01aa 00       		.byte	0
 3891 01ab 00       		.byte	0
 3892 01ac 20       		.uleb128 0x20
 3893 01ad 34       		.uleb128 0x34
 3894 01ae 00       		.byte	0
 3895 01af 03       		.uleb128 0x3
 3896 01b0 0E       		.uleb128 0xe
 3897 01b1 3A       		.uleb128 0x3a
 3898 01b2 0B       		.uleb128 0xb
 3899 01b3 3B       		.uleb128 0x3b
 3900 01b4 05       		.uleb128 0x5
 3901 01b5 49       		.uleb128 0x49
 3902 01b6 13       		.uleb128 0x13
 3903 01b7 1C       		.uleb128 0x1c
 3904 01b8 0B       		.uleb128 0xb
 3905 01b9 00       		.byte	0
 3906 01ba 00       		.byte	0
 3907 01bb 21       		.uleb128 0x21
 3908 01bc 898201   		.uleb128 0x4109
 3909 01bf 01       		.byte	0x1
 3910 01c0 11       		.uleb128 0x11
 3911 01c1 01       		.uleb128 0x1
 3912 01c2 31       		.uleb128 0x31
 3913 01c3 13       		.uleb128 0x13
 3914 01c4 00       		.byte	0
 3915 01c5 00       		.byte	0
 3916 01c6 22       		.uleb128 0x22
 3917 01c7 26       		.uleb128 0x26
 3918 01c8 00       		.byte	0
 3919 01c9 49       		.uleb128 0x49
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 122


 3920 01ca 13       		.uleb128 0x13
 3921 01cb 00       		.byte	0
 3922 01cc 00       		.byte	0
 3923 01cd 23       		.uleb128 0x23
 3924 01ce 34       		.uleb128 0x34
 3925 01cf 00       		.byte	0
 3926 01d0 03       		.uleb128 0x3
 3927 01d1 0E       		.uleb128 0xe
 3928 01d2 3A       		.uleb128 0x3a
 3929 01d3 0B       		.uleb128 0xb
 3930 01d4 3B       		.uleb128 0x3b
 3931 01d5 05       		.uleb128 0x5
 3932 01d6 49       		.uleb128 0x49
 3933 01d7 13       		.uleb128 0x13
 3934 01d8 02       		.uleb128 0x2
 3935 01d9 18       		.uleb128 0x18
 3936 01da 00       		.byte	0
 3937 01db 00       		.byte	0
 3938 01dc 24       		.uleb128 0x24
 3939 01dd 05       		.uleb128 0x5
 3940 01de 00       		.byte	0
 3941 01df 03       		.uleb128 0x3
 3942 01e0 0E       		.uleb128 0xe
 3943 01e1 3A       		.uleb128 0x3a
 3944 01e2 0B       		.uleb128 0xb
 3945 01e3 3B       		.uleb128 0x3b
 3946 01e4 05       		.uleb128 0x5
 3947 01e5 49       		.uleb128 0x49
 3948 01e6 13       		.uleb128 0x13
 3949 01e7 02       		.uleb128 0x2
 3950 01e8 18       		.uleb128 0x18
 3951 01e9 00       		.byte	0
 3952 01ea 00       		.byte	0
 3953 01eb 25       		.uleb128 0x25
 3954 01ec 34       		.uleb128 0x34
 3955 01ed 00       		.byte	0
 3956 01ee 03       		.uleb128 0x3
 3957 01ef 0E       		.uleb128 0xe
 3958 01f0 3A       		.uleb128 0x3a
 3959 01f1 0B       		.uleb128 0xb
 3960 01f2 3B       		.uleb128 0x3b
 3961 01f3 05       		.uleb128 0x5
 3962 01f4 49       		.uleb128 0x49
 3963 01f5 13       		.uleb128 0x13
 3964 01f6 3F       		.uleb128 0x3f
 3965 01f7 19       		.uleb128 0x19
 3966 01f8 3C       		.uleb128 0x3c
 3967 01f9 19       		.uleb128 0x19
 3968 01fa 00       		.byte	0
 3969 01fb 00       		.byte	0
 3970 01fc 26       		.uleb128 0x26
 3971 01fd 34       		.uleb128 0x34
 3972 01fe 00       		.byte	0
 3973 01ff 03       		.uleb128 0x3
 3974 0200 0E       		.uleb128 0xe
 3975 0201 3A       		.uleb128 0x3a
 3976 0202 0B       		.uleb128 0xb
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 123


 3977 0203 3B       		.uleb128 0x3b
 3978 0204 0B       		.uleb128 0xb
 3979 0205 49       		.uleb128 0x49
 3980 0206 13       		.uleb128 0x13
 3981 0207 3F       		.uleb128 0x3f
 3982 0208 19       		.uleb128 0x19
 3983 0209 02       		.uleb128 0x2
 3984 020a 18       		.uleb128 0x18
 3985 020b 00       		.byte	0
 3986 020c 00       		.byte	0
 3987 020d 27       		.uleb128 0x27
 3988 020e 2E       		.uleb128 0x2e
 3989 020f 00       		.byte	0
 3990 0210 3F       		.uleb128 0x3f
 3991 0211 19       		.uleb128 0x19
 3992 0212 3C       		.uleb128 0x3c
 3993 0213 19       		.uleb128 0x19
 3994 0214 6E       		.uleb128 0x6e
 3995 0215 0E       		.uleb128 0xe
 3996 0216 03       		.uleb128 0x3
 3997 0217 0E       		.uleb128 0xe
 3998 0218 3A       		.uleb128 0x3a
 3999 0219 0B       		.uleb128 0xb
 4000 021a 3B       		.uleb128 0x3b
 4001 021b 05       		.uleb128 0x5
 4002 021c 00       		.byte	0
 4003 021d 00       		.byte	0
 4004 021e 28       		.uleb128 0x28
 4005 021f 2E       		.uleb128 0x2e
 4006 0220 00       		.byte	0
 4007 0221 3F       		.uleb128 0x3f
 4008 0222 19       		.uleb128 0x19
 4009 0223 3C       		.uleb128 0x3c
 4010 0224 19       		.uleb128 0x19
 4011 0225 6E       		.uleb128 0x6e
 4012 0226 0E       		.uleb128 0xe
 4013 0227 03       		.uleb128 0x3
 4014 0228 0E       		.uleb128 0xe
 4015 0229 3A       		.uleb128 0x3a
 4016 022a 0B       		.uleb128 0xb
 4017 022b 3B       		.uleb128 0x3b
 4018 022c 0B       		.uleb128 0xb
 4019 022d 00       		.byte	0
 4020 022e 00       		.byte	0
 4021 022f 00       		.byte	0
 4022              		.section	.debug_loc,"",%progbits
 4023              	.Ldebug_loc0:
 4024              	.LLST0:
 4025 0000 0C000000 		.4byte	.LVL0
 4026 0004 16000000 		.4byte	.LVL1
 4027 0008 0100     		.2byte	0x1
 4028 000a 51       		.byte	0x51
 4029 000b 16000000 		.4byte	.LVL1
 4030 000f 2C000000 		.4byte	.LFE18
 4031 0013 0100     		.2byte	0x1
 4032 0015 53       		.byte	0x53
 4033 0016 00000000 		.4byte	0
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 124


 4034 001a 00000000 		.4byte	0
 4035              	.LLST1:
 4036 001e 06000000 		.4byte	.LVL5
 4037 0022 0F000000 		.4byte	.LVL7-1
 4038 0026 0100     		.2byte	0x1
 4039 0028 53       		.byte	0x53
 4040 0029 00000000 		.4byte	0
 4041 002d 00000000 		.4byte	0
 4042              	.LLST2:
 4043 0031 00000000 		.4byte	.LVL8
 4044 0035 41000000 		.4byte	.LVL10-1
 4045 0039 0100     		.2byte	0x1
 4046 003b 50       		.byte	0x50
 4047 003c 41000000 		.4byte	.LVL10-1
 4048 0040 4C000000 		.4byte	.LFE3
 4049 0044 0400     		.2byte	0x4
 4050 0046 F3       		.byte	0xf3
 4051 0047 01       		.uleb128 0x1
 4052 0048 50       		.byte	0x50
 4053 0049 9F       		.byte	0x9f
 4054 004a 00000000 		.4byte	0
 4055 004e 00000000 		.4byte	0
 4056              	.LLST3:
 4057 0052 3A000000 		.4byte	.LVL9
 4058 0056 44000000 		.4byte	.LVL11
 4059 005a 0100     		.2byte	0x1
 4060 005c 54       		.byte	0x54
 4061 005d 44000000 		.4byte	.LVL11
 4062 0061 4C000000 		.4byte	.LFE3
 4063 0065 0100     		.2byte	0x1
 4064 0067 50       		.byte	0x50
 4065 0068 00000000 		.4byte	0
 4066 006c 00000000 		.4byte	0
 4067              	.LLST4:
 4068 0070 02000000 		.4byte	.LVL12
 4069 0074 22000000 		.4byte	.LVL14
 4070 0078 0200     		.2byte	0x2
 4071 007a 30       		.byte	0x30
 4072 007b 9F       		.byte	0x9f
 4073 007c 22000000 		.4byte	.LVL14
 4074 0080 2C000000 		.4byte	.LFE4
 4075 0084 0100     		.2byte	0x1
 4076 0086 50       		.byte	0x50
 4077 0087 00000000 		.4byte	0
 4078 008b 00000000 		.4byte	0
 4079              	.LLST5:
 4080 008f 02000000 		.4byte	.LVL15
 4081 0093 12000000 		.4byte	.LVL16
 4082 0097 0300     		.2byte	0x3
 4083 0099 09       		.byte	0x9
 4084 009a FF       		.byte	0xff
 4085 009b 9F       		.byte	0x9f
 4086 009c 12000000 		.4byte	.LVL16
 4087 00a0 14000000 		.4byte	.LVL17
 4088 00a4 0100     		.2byte	0x1
 4089 00a6 50       		.byte	0x50
 4090 00a7 18000000 		.4byte	.LVL18
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 125


 4091 00ab 31000000 		.4byte	.LVL19-1
 4092 00af 0100     		.2byte	0x1
 4093 00b1 50       		.byte	0x50
 4094 00b2 32000000 		.4byte	.LVL19
 4095 00b6 3C000000 		.4byte	.LVL21
 4096 00ba 0100     		.2byte	0x1
 4097 00bc 50       		.byte	0x50
 4098 00bd 3C000000 		.4byte	.LVL21
 4099 00c1 3E000000 		.4byte	.LVL22
 4100 00c5 0300     		.2byte	0x3
 4101 00c7 09       		.byte	0x9
 4102 00c8 FF       		.byte	0xff
 4103 00c9 9F       		.byte	0x9f
 4104 00ca 3E000000 		.4byte	.LVL22
 4105 00ce 48000000 		.4byte	.LFE5
 4106 00d2 0100     		.2byte	0x1
 4107 00d4 50       		.byte	0x50
 4108 00d5 00000000 		.4byte	0
 4109 00d9 00000000 		.4byte	0
 4110              	.LLST6:
 4111 00dd 12000000 		.4byte	.LVL16
 4112 00e1 3C000000 		.4byte	.LVL21
 4113 00e5 0100     		.2byte	0x1
 4114 00e7 54       		.byte	0x54
 4115 00e8 00000000 		.4byte	0
 4116 00ec 00000000 		.4byte	0
 4117              	.LLST7:
 4118 00f0 00000000 		.4byte	.LVL23
 4119 00f4 06000000 		.4byte	.LVL24
 4120 00f8 0100     		.2byte	0x1
 4121 00fa 50       		.byte	0x50
 4122 00fb 06000000 		.4byte	.LVL24
 4123 00ff 98000000 		.4byte	.LFE7
 4124 0103 0400     		.2byte	0x4
 4125 0105 F3       		.byte	0xf3
 4126 0106 01       		.uleb128 0x1
 4127 0107 50       		.byte	0x50
 4128 0108 9F       		.byte	0x9f
 4129 0109 00000000 		.4byte	0
 4130 010d 00000000 		.4byte	0
 4131              	.LLST8:
 4132 0111 00000000 		.4byte	.LVL23
 4133 0115 0C000000 		.4byte	.LVL25
 4134 0119 0100     		.2byte	0x1
 4135 011b 51       		.byte	0x51
 4136 011c 0C000000 		.4byte	.LVL25
 4137 0120 98000000 		.4byte	.LFE7
 4138 0124 0400     		.2byte	0x4
 4139 0126 F3       		.byte	0xf3
 4140 0127 01       		.uleb128 0x1
 4141 0128 51       		.byte	0x51
 4142 0129 9F       		.byte	0x9f
 4143 012a 00000000 		.4byte	0
 4144 012e 00000000 		.4byte	0
 4145              	.LLST9:
 4146 0132 00000000 		.4byte	.LVL23
 4147 0136 12000000 		.4byte	.LVL27
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 126


 4148 013a 0100     		.2byte	0x1
 4149 013c 52       		.byte	0x52
 4150 013d 12000000 		.4byte	.LVL27
 4151 0141 90000000 		.4byte	.LVL39
 4152 0145 0100     		.2byte	0x1
 4153 0147 56       		.byte	0x56
 4154 0148 90000000 		.4byte	.LVL39
 4155 014c 98000000 		.4byte	.LFE7
 4156 0150 0400     		.2byte	0x4
 4157 0152 F3       		.byte	0xf3
 4158 0153 01       		.uleb128 0x1
 4159 0154 52       		.byte	0x52
 4160 0155 9F       		.byte	0x9f
 4161 0156 00000000 		.4byte	0
 4162 015a 00000000 		.4byte	0
 4163              	.LLST10:
 4164 015e 0E000000 		.4byte	.LVL26
 4165 0162 12000000 		.4byte	.LVL27
 4166 0166 0200     		.2byte	0x2
 4167 0168 30       		.byte	0x30
 4168 0169 9F       		.byte	0x9f
 4169 016a 12000000 		.4byte	.LVL27
 4170 016e 90000000 		.4byte	.LVL38
 4171 0172 0100     		.2byte	0x1
 4172 0174 55       		.byte	0x55
 4173 0175 00000000 		.4byte	0
 4174 0179 00000000 		.4byte	0
 4175              	.LLST11:
 4176 017d 16000000 		.4byte	.LVL28
 4177 0181 35000000 		.4byte	.LVL29-1
 4178 0185 0100     		.2byte	0x1
 4179 0187 50       		.byte	0x50
 4180 0188 48000000 		.4byte	.LVL30
 4181 018c 67000000 		.4byte	.LVL31-1
 4182 0190 0100     		.2byte	0x1
 4183 0192 50       		.byte	0x50
 4184 0193 6E000000 		.4byte	.LVL32
 4185 0197 7F000000 		.4byte	.LVL33-1
 4186 019b 0100     		.2byte	0x1
 4187 019d 50       		.byte	0x50
 4188 019e 00000000 		.4byte	0
 4189 01a2 00000000 		.4byte	0
 4190              	.LLST12:
 4191 01a6 0E000000 		.4byte	.LVL26
 4192 01aa 90000000 		.4byte	.LVL37
 4193 01ae 0100     		.2byte	0x1
 4194 01b0 54       		.byte	0x54
 4195 01b1 00000000 		.4byte	0
 4196 01b5 00000000 		.4byte	0
 4197              	.LLST13:
 4198 01b9 00000000 		.4byte	.LVL40
 4199 01bd 13000000 		.4byte	.LVL41-1
 4200 01c1 0100     		.2byte	0x1
 4201 01c3 50       		.byte	0x50
 4202 01c4 13000000 		.4byte	.LVL41-1
 4203 01c8 16000000 		.4byte	.LVL42
 4204 01cc 0400     		.2byte	0x4
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 127


 4205 01ce F3       		.byte	0xf3
 4206 01cf 01       		.uleb128 0x1
 4207 01d0 50       		.byte	0x50
 4208 01d1 9F       		.byte	0x9f
 4209 01d2 16000000 		.4byte	.LVL42
 4210 01d6 25000000 		.4byte	.LVL43-1
 4211 01da 0100     		.2byte	0x1
 4212 01dc 50       		.byte	0x50
 4213 01dd 25000000 		.4byte	.LVL43-1
 4214 01e1 5C000000 		.4byte	.LFE9
 4215 01e5 0400     		.2byte	0x4
 4216 01e7 F3       		.byte	0xf3
 4217 01e8 01       		.uleb128 0x1
 4218 01e9 50       		.byte	0x50
 4219 01ea 9F       		.byte	0x9f
 4220 01eb 00000000 		.4byte	0
 4221 01ef 00000000 		.4byte	0
 4222              	.LLST14:
 4223 01f3 08000000 		.4byte	.LVL47
 4224 01f7 40000000 		.4byte	.LFE10
 4225 01fb 0100     		.2byte	0x1
 4226 01fd 53       		.byte	0x53
 4227 01fe 00000000 		.4byte	0
 4228 0202 00000000 		.4byte	0
 4229              	.LLST15:
 4230 0206 02000000 		.4byte	.LVL46
 4231 020a 08000000 		.4byte	.LVL47
 4232 020e 0200     		.2byte	0x2
 4233 0210 30       		.byte	0x30
 4234 0211 9F       		.byte	0x9f
 4235 0212 08000000 		.4byte	.LVL47
 4236 0216 40000000 		.4byte	.LFE10
 4237 021a 0100     		.2byte	0x1
 4238 021c 50       		.byte	0x50
 4239 021d 00000000 		.4byte	0
 4240 0221 00000000 		.4byte	0
 4241              	.LLST16:
 4242 0225 0C000000 		.4byte	.LVL48
 4243 0229 1E000000 		.4byte	.LVL51
 4244 022d 0100     		.2byte	0x1
 4245 022f 52       		.byte	0x52
 4246 0230 20000000 		.4byte	.LVL52
 4247 0234 26000000 		.4byte	.LVL53
 4248 0238 0100     		.2byte	0x1
 4249 023a 51       		.byte	0x51
 4250 023b 26000000 		.4byte	.LVL53
 4251 023f 36000000 		.4byte	.LVL57
 4252 0243 0100     		.2byte	0x1
 4253 0245 52       		.byte	0x52
 4254 0246 00000000 		.4byte	0
 4255 024a 00000000 		.4byte	0
 4256              	.LLST17:
 4257 024e 16000000 		.4byte	.LVL59
 4258 0252 29000000 		.4byte	.LVL60-1
 4259 0256 0100     		.2byte	0x1
 4260 0258 50       		.byte	0x50
 4261 0259 29000000 		.4byte	.LVL60-1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 128


 4262 025d 2C000000 		.4byte	.LVL61
 4263 0261 0100     		.2byte	0x1
 4264 0263 54       		.byte	0x54
 4265 0264 2C000000 		.4byte	.LVL61
 4266 0268 54000000 		.4byte	.LVL62
 4267 026c 0100     		.2byte	0x1
 4268 026e 50       		.byte	0x50
 4269 026f 54000000 		.4byte	.LVL62
 4270 0273 58000000 		.4byte	.LVL63
 4271 0277 0200     		.2byte	0x2
 4272 0279 30       		.byte	0x30
 4273 027a 9F       		.byte	0x9f
 4274 027b 58000000 		.4byte	.LVL63
 4275 027f 6A000000 		.4byte	.LVL64
 4276 0283 0100     		.2byte	0x1
 4277 0285 50       		.byte	0x50
 4278 0286 6A000000 		.4byte	.LVL64
 4279 028a 6E000000 		.4byte	.LVL65
 4280 028e 0100     		.2byte	0x1
 4281 0290 54       		.byte	0x54
 4282 0291 00000000 		.4byte	0
 4283 0295 00000000 		.4byte	0
 4284              	.LLST18:
 4285 0299 00000000 		.4byte	.LVL66
 4286 029d 05000000 		.4byte	.LVL67-1
 4287 02a1 0100     		.2byte	0x1
 4288 02a3 50       		.byte	0x50
 4289 02a4 05000000 		.4byte	.LVL67-1
 4290 02a8 08000000 		.4byte	.LFE12
 4291 02ac 0400     		.2byte	0x4
 4292 02ae F3       		.byte	0xf3
 4293 02af 01       		.uleb128 0x1
 4294 02b0 50       		.byte	0x50
 4295 02b1 9F       		.byte	0x9f
 4296 02b2 00000000 		.4byte	0
 4297 02b6 00000000 		.4byte	0
 4298              	.LLST19:
 4299 02ba 00000000 		.4byte	.LVL68
 4300 02be 08000000 		.4byte	.LVL69
 4301 02c2 0100     		.2byte	0x1
 4302 02c4 50       		.byte	0x50
 4303 02c5 08000000 		.4byte	.LVL69
 4304 02c9 0A000000 		.4byte	.LVL70
 4305 02cd 0300     		.2byte	0x3
 4306 02cf 70       		.byte	0x70
 4307 02d0 01       		.sleb128 1
 4308 02d1 9F       		.byte	0x9f
 4309 02d2 0A000000 		.4byte	.LVL70
 4310 02d6 30000000 		.4byte	.LFE13
 4311 02da 0400     		.2byte	0x4
 4312 02dc F3       		.byte	0xf3
 4313 02dd 01       		.uleb128 0x1
 4314 02de 50       		.byte	0x50
 4315 02df 9F       		.byte	0x9f
 4316 02e0 00000000 		.4byte	0
 4317 02e4 00000000 		.4byte	0
 4318              	.LLST20:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 129


 4319 02e8 00000000 		.4byte	.LVL71
 4320 02ec 08000000 		.4byte	.LVL72
 4321 02f0 0100     		.2byte	0x1
 4322 02f2 50       		.byte	0x50
 4323 02f3 08000000 		.4byte	.LVL72
 4324 02f7 0A000000 		.4byte	.LVL73
 4325 02fb 0300     		.2byte	0x3
 4326 02fd 70       		.byte	0x70
 4327 02fe 01       		.sleb128 1
 4328 02ff 9F       		.byte	0x9f
 4329 0300 0A000000 		.4byte	.LVL73
 4330 0304 30000000 		.4byte	.LFE14
 4331 0308 0400     		.2byte	0x4
 4332 030a F3       		.byte	0xf3
 4333 030b 01       		.uleb128 0x1
 4334 030c 50       		.byte	0x50
 4335 030d 9F       		.byte	0x9f
 4336 030e 00000000 		.4byte	0
 4337 0312 00000000 		.4byte	0
 4338              	.LLST21:
 4339 0316 00000000 		.4byte	.LVL74
 4340 031a 06000000 		.4byte	.LVL75
 4341 031e 0100     		.2byte	0x1
 4342 0320 50       		.byte	0x50
 4343 0321 06000000 		.4byte	.LVL75
 4344 0325 10000000 		.4byte	.LVL78
 4345 0329 0100     		.2byte	0x1
 4346 032b 54       		.byte	0x54
 4347 032c 10000000 		.4byte	.LVL78
 4348 0330 12000000 		.4byte	.LFE15
 4349 0334 0400     		.2byte	0x4
 4350 0336 F3       		.byte	0xf3
 4351 0337 01       		.uleb128 0x1
 4352 0338 50       		.byte	0x50
 4353 0339 9F       		.byte	0x9f
 4354 033a 00000000 		.4byte	0
 4355 033e 00000000 		.4byte	0
 4356              	.LLST22:
 4357 0342 00000000 		.4byte	.LVL74
 4358 0346 09000000 		.4byte	.LVL76-1
 4359 034a 0100     		.2byte	0x1
 4360 034c 51       		.byte	0x51
 4361 034d 09000000 		.4byte	.LVL76-1
 4362 0351 12000000 		.4byte	.LFE15
 4363 0355 0400     		.2byte	0x4
 4364 0357 F3       		.byte	0xf3
 4365 0358 01       		.uleb128 0x1
 4366 0359 51       		.byte	0x51
 4367 035a 9F       		.byte	0x9f
 4368 035b 00000000 		.4byte	0
 4369 035f 00000000 		.4byte	0
 4370              	.LLST23:
 4371 0363 00000000 		.4byte	.LVL79
 4372 0367 12000000 		.4byte	.LVL81
 4373 036b 0100     		.2byte	0x1
 4374 036d 50       		.byte	0x50
 4375 036e 12000000 		.4byte	.LVL81
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 130


 4376 0372 3E000000 		.4byte	.LVL87
 4377 0376 0100     		.2byte	0x1
 4378 0378 54       		.byte	0x54
 4379 0379 3E000000 		.4byte	.LVL87
 4380 037d 44000000 		.4byte	.LFE16
 4381 0381 0400     		.2byte	0x4
 4382 0383 F3       		.byte	0xf3
 4383 0384 01       		.uleb128 0x1
 4384 0385 50       		.byte	0x50
 4385 0386 9F       		.byte	0x9f
 4386 0387 00000000 		.4byte	0
 4387 038b 00000000 		.4byte	0
 4388              	.LLST24:
 4389 038f 04000000 		.4byte	.LVL80
 4390 0393 28000000 		.4byte	.LVL82
 4391 0397 0200     		.2byte	0x2
 4392 0399 30       		.byte	0x30
 4393 039a 9F       		.byte	0x9f
 4394 039b 28000000 		.4byte	.LVL82
 4395 039f 36000000 		.4byte	.LVL84
 4396 03a3 0100     		.2byte	0x1
 4397 03a5 55       		.byte	0x55
 4398 03a6 36000000 		.4byte	.LVL84
 4399 03aa 38000000 		.4byte	.LVL85
 4400 03ae 0100     		.2byte	0x1
 4401 03b0 50       		.byte	0x50
 4402 03b1 38000000 		.4byte	.LVL85
 4403 03b5 3E000000 		.4byte	.LVL88
 4404 03b9 0100     		.2byte	0x1
 4405 03bb 55       		.byte	0x55
 4406 03bc 3E000000 		.4byte	.LVL88
 4407 03c0 44000000 		.4byte	.LFE16
 4408 03c4 0100     		.2byte	0x1
 4409 03c6 50       		.byte	0x50
 4410 03c7 00000000 		.4byte	0
 4411 03cb 00000000 		.4byte	0
 4412              	.LLST25:
 4413 03cf 02000000 		.4byte	.LVL89
 4414 03d3 08000000 		.4byte	.LVL90
 4415 03d7 0200     		.2byte	0x2
 4416 03d9 30       		.byte	0x30
 4417 03da 9F       		.byte	0x9f
 4418 03db 08000000 		.4byte	.LVL90
 4419 03df 18000000 		.4byte	.LVL95
 4420 03e3 0100     		.2byte	0x1
 4421 03e5 55       		.byte	0x55
 4422 03e6 18000000 		.4byte	.LVL95
 4423 03ea 1A000000 		.4byte	.LFE17
 4424 03ee 0100     		.2byte	0x1
 4425 03f0 50       		.byte	0x50
 4426 03f1 00000000 		.4byte	0
 4427 03f5 00000000 		.4byte	0
 4428              	.LLST26:
 4429 03f9 02000000 		.4byte	.LVL89
 4430 03fd 08000000 		.4byte	.LVL90
 4431 0401 0200     		.2byte	0x2
 4432 0403 30       		.byte	0x30
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 131


 4433 0404 9F       		.byte	0x9f
 4434 0405 08000000 		.4byte	.LVL90
 4435 0409 18000000 		.4byte	.LVL94
 4436 040d 0100     		.2byte	0x1
 4437 040f 54       		.byte	0x54
 4438 0410 00000000 		.4byte	0
 4439 0414 00000000 		.4byte	0
 4440              	.LLST27:
 4441 0418 02000000 		.4byte	.LVL96
 4442 041c 06000000 		.4byte	.LVL97
 4443 0420 0200     		.2byte	0x2
 4444 0422 30       		.byte	0x30
 4445 0423 9F       		.byte	0x9f
 4446 0424 06000000 		.4byte	.LVL97
 4447 0428 2C000000 		.4byte	.LVL103
 4448 042c 0100     		.2byte	0x1
 4449 042e 55       		.byte	0x55
 4450 042f 00000000 		.4byte	0
 4451 0433 00000000 		.4byte	0
 4452              	.LLST28:
 4453 0437 0C000000 		.4byte	.LVL98
 4454 043b 10000000 		.4byte	.LVL99
 4455 043f 0200     		.2byte	0x2
 4456 0441 30       		.byte	0x30
 4457 0442 9F       		.byte	0x9f
 4458 0443 10000000 		.4byte	.LVL99
 4459 0447 28000000 		.4byte	.LVL102
 4460 044b 0100     		.2byte	0x1
 4461 044d 54       		.byte	0x54
 4462 044e 00000000 		.4byte	0
 4463 0452 00000000 		.4byte	0
 4464              	.LLST29:
 4465 0456 0C000000 		.4byte	.LVL98
 4466 045a 28000000 		.4byte	.LVL102
 4467 045e 0100     		.2byte	0x1
 4468 0460 56       		.byte	0x56
 4469 0461 00000000 		.4byte	0
 4470 0465 00000000 		.4byte	0
 4471              	.LLST30:
 4472 0469 00000000 		.4byte	.LVL104
 4473 046d 04000000 		.4byte	.LVL105
 4474 0471 0100     		.2byte	0x1
 4475 0473 50       		.byte	0x50
 4476 0474 04000000 		.4byte	.LVL105
 4477 0478 0C000000 		.4byte	.LFE23
 4478 047c 0400     		.2byte	0x4
 4479 047e F3       		.byte	0xf3
 4480 047f 01       		.uleb128 0x1
 4481 0480 50       		.byte	0x50
 4482 0481 9F       		.byte	0x9f
 4483 0482 00000000 		.4byte	0
 4484 0486 00000000 		.4byte	0
 4485              	.LLST31:
 4486 048a 00000000 		.4byte	.LVL107
 4487 048e 1C000000 		.4byte	.LVL110
 4488 0492 0100     		.2byte	0x1
 4489 0494 50       		.byte	0x50
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 132


 4490 0495 1C000000 		.4byte	.LVL110
 4491 0499 24000000 		.4byte	.LVL111
 4492 049d 0400     		.2byte	0x4
 4493 049f F3       		.byte	0xf3
 4494 04a0 01       		.uleb128 0x1
 4495 04a1 50       		.byte	0x50
 4496 04a2 9F       		.byte	0x9f
 4497 04a3 24000000 		.4byte	.LVL111
 4498 04a7 26000000 		.4byte	.LVL112
 4499 04ab 0100     		.2byte	0x1
 4500 04ad 50       		.byte	0x50
 4501 04ae 26000000 		.4byte	.LVL112
 4502 04b2 34000000 		.4byte	.LFE25
 4503 04b6 0400     		.2byte	0x4
 4504 04b8 F3       		.byte	0xf3
 4505 04b9 01       		.uleb128 0x1
 4506 04ba 50       		.byte	0x50
 4507 04bb 9F       		.byte	0x9f
 4508 04bc 00000000 		.4byte	0
 4509 04c0 00000000 		.4byte	0
 4510              	.LLST32:
 4511 04c4 2A000000 		.4byte	.LVL113
 4512 04c8 2C000000 		.4byte	.LVL114
 4513 04cc 0100     		.2byte	0x1
 4514 04ce 50       		.byte	0x50
 4515 04cf 00000000 		.4byte	0
 4516 04d3 00000000 		.4byte	0
 4517              	.LLST33:
 4518 04d7 02000000 		.4byte	.LVL108
 4519 04db 08000000 		.4byte	.LVL109
 4520 04df 0200     		.2byte	0x2
 4521 04e1 31       		.byte	0x31
 4522 04e2 9F       		.byte	0x9f
 4523 04e3 08000000 		.4byte	.LVL109
 4524 04e7 2C000000 		.4byte	.LVL115
 4525 04eb 0100     		.2byte	0x1
 4526 04ed 54       		.byte	0x54
 4527 04ee 00000000 		.4byte	0
 4528 04f2 00000000 		.4byte	0
 4529              	.LLST34:
 4530 04f6 00000000 		.4byte	.LVL116
 4531 04fa 07000000 		.4byte	.LVL117-1
 4532 04fe 0100     		.2byte	0x1
 4533 0500 50       		.byte	0x50
 4534 0501 07000000 		.4byte	.LVL117-1
 4535 0505 14000000 		.4byte	.LFE21
 4536 0509 0400     		.2byte	0x4
 4537 050b F3       		.byte	0xf3
 4538 050c 01       		.uleb128 0x1
 4539 050d 50       		.byte	0x50
 4540 050e 9F       		.byte	0x9f
 4541 050f 00000000 		.4byte	0
 4542 0513 00000000 		.4byte	0
 4543              	.LLST35:
 4544 0517 00000000 		.4byte	.LVL116
 4545 051b 07000000 		.4byte	.LVL117-1
 4546 051f 0100     		.2byte	0x1
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 133


 4547 0521 51       		.byte	0x51
 4548 0522 07000000 		.4byte	.LVL117-1
 4549 0526 12000000 		.4byte	.LVL120
 4550 052a 0100     		.2byte	0x1
 4551 052c 54       		.byte	0x54
 4552 052d 12000000 		.4byte	.LVL120
 4553 0531 14000000 		.4byte	.LFE21
 4554 0535 0400     		.2byte	0x4
 4555 0537 F3       		.byte	0xf3
 4556 0538 01       		.uleb128 0x1
 4557 0539 51       		.byte	0x51
 4558 053a 9F       		.byte	0x9f
 4559 053b 00000000 		.4byte	0
 4560 053f 00000000 		.4byte	0
 4561              	.LLST36:
 4562 0543 08000000 		.4byte	.LVL117
 4563 0547 0A000000 		.4byte	.LVL118
 4564 054b 0100     		.2byte	0x1
 4565 054d 50       		.byte	0x50
 4566 054e 00000000 		.4byte	0
 4567 0552 00000000 		.4byte	0
 4568              	.LLST37:
 4569 0556 02000000 		.4byte	.LVL121
 4570 055a 06000000 		.4byte	.LVL122
 4571 055e 0200     		.2byte	0x2
 4572 0560 30       		.byte	0x30
 4573 0561 9F       		.byte	0x9f
 4574 0562 06000000 		.4byte	.LVL122
 4575 0566 20000000 		.4byte	.LVL127
 4576 056a 0100     		.2byte	0x1
 4577 056c 54       		.byte	0x54
 4578 056d 00000000 		.4byte	0
 4579 0571 00000000 		.4byte	0
 4580              	.LLST38:
 4581 0575 0E000000 		.4byte	.LVL123
 4582 0579 13000000 		.4byte	.LVL124-1
 4583 057d 0100     		.2byte	0x1
 4584 057f 51       		.byte	0x51
 4585 0580 00000000 		.4byte	0
 4586 0584 00000000 		.4byte	0
 4587              		.section	.debug_aranges,"",%progbits
 4588 0000 D4000000 		.4byte	0xd4
 4589 0004 0200     		.2byte	0x2
 4590 0006 00000000 		.4byte	.Ldebug_info0
 4591 000a 04       		.byte	0x4
 4592 000b 00       		.byte	0
 4593 000c 0000     		.2byte	0
 4594 000e 0000     		.2byte	0
 4595 0010 00000000 		.4byte	.LFB18
 4596 0014 2C000000 		.4byte	.LFE18-.LFB18
 4597 0018 00000000 		.4byte	.LFB19
 4598 001c 08000000 		.4byte	.LFE19-.LFB19
 4599 0020 00000000 		.4byte	.LFB8
 4600 0024 18000000 		.4byte	.LFE8-.LFB8
 4601 0028 00000000 		.4byte	.LFB2
 4602 002c 10000000 		.4byte	.LFE2-.LFB2
 4603 0030 00000000 		.4byte	.LFB3
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 134


 4604 0034 4C000000 		.4byte	.LFE3-.LFB3
 4605 0038 00000000 		.4byte	.LFB4
 4606 003c 2C000000 		.4byte	.LFE4-.LFB4
 4607 0040 00000000 		.4byte	.LFB5
 4608 0044 48000000 		.4byte	.LFE5-.LFB5
 4609 0048 00000000 		.4byte	.LFB7
 4610 004c 98000000 		.4byte	.LFE7-.LFB7
 4611 0050 00000000 		.4byte	.LFB9
 4612 0054 5C000000 		.4byte	.LFE9-.LFB9
 4613 0058 00000000 		.4byte	.LFB10
 4614 005c 40000000 		.4byte	.LFE10-.LFB10
 4615 0060 00000000 		.4byte	.LFB11
 4616 0064 78000000 		.4byte	.LFE11-.LFB11
 4617 0068 00000000 		.4byte	.LFB12
 4618 006c 08000000 		.4byte	.LFE12-.LFB12
 4619 0070 00000000 		.4byte	.LFB13
 4620 0074 30000000 		.4byte	.LFE13-.LFB13
 4621 0078 00000000 		.4byte	.LFB14
 4622 007c 30000000 		.4byte	.LFE14-.LFB14
 4623 0080 00000000 		.4byte	.LFB15
 4624 0084 12000000 		.4byte	.LFE15-.LFB15
 4625 0088 00000000 		.4byte	.LFB16
 4626 008c 44000000 		.4byte	.LFE16-.LFB16
 4627 0090 00000000 		.4byte	.LFB17
 4628 0094 1A000000 		.4byte	.LFE17-.LFB17
 4629 0098 00000000 		.4byte	.LFB22
 4630 009c 34000000 		.4byte	.LFE22-.LFB22
 4631 00a0 00000000 		.4byte	.LFB23
 4632 00a4 0C000000 		.4byte	.LFE23-.LFB23
 4633 00a8 00000000 		.4byte	.LFB24
 4634 00ac 0C000000 		.4byte	.LFE24-.LFB24
 4635 00b0 00000000 		.4byte	.LFB25
 4636 00b4 34000000 		.4byte	.LFE25-.LFB25
 4637 00b8 00000000 		.4byte	.LFB21
 4638 00bc 14000000 		.4byte	.LFE21-.LFB21
 4639 00c0 00000000 		.4byte	.LFB20
 4640 00c4 28000000 		.4byte	.LFE20-.LFB20
 4641 00c8 00000000 		.4byte	.LFB6
 4642 00cc 18000000 		.4byte	.LFE6-.LFB6
 4643 00d0 00000000 		.4byte	0
 4644 00d4 00000000 		.4byte	0
 4645              		.section	.debug_ranges,"",%progbits
 4646              	.Ldebug_ranges0:
 4647 0000 00000000 		.4byte	.LFB18
 4648 0004 2C000000 		.4byte	.LFE18
 4649 0008 00000000 		.4byte	.LFB19
 4650 000c 08000000 		.4byte	.LFE19
 4651 0010 00000000 		.4byte	.LFB8
 4652 0014 18000000 		.4byte	.LFE8
 4653 0018 00000000 		.4byte	.LFB2
 4654 001c 10000000 		.4byte	.LFE2
 4655 0020 00000000 		.4byte	.LFB3
 4656 0024 4C000000 		.4byte	.LFE3
 4657 0028 00000000 		.4byte	.LFB4
 4658 002c 2C000000 		.4byte	.LFE4
 4659 0030 00000000 		.4byte	.LFB5
 4660 0034 48000000 		.4byte	.LFE5
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 135


 4661 0038 00000000 		.4byte	.LFB7
 4662 003c 98000000 		.4byte	.LFE7
 4663 0040 00000000 		.4byte	.LFB9
 4664 0044 5C000000 		.4byte	.LFE9
 4665 0048 00000000 		.4byte	.LFB10
 4666 004c 40000000 		.4byte	.LFE10
 4667 0050 00000000 		.4byte	.LFB11
 4668 0054 78000000 		.4byte	.LFE11
 4669 0058 00000000 		.4byte	.LFB12
 4670 005c 08000000 		.4byte	.LFE12
 4671 0060 00000000 		.4byte	.LFB13
 4672 0064 30000000 		.4byte	.LFE13
 4673 0068 00000000 		.4byte	.LFB14
 4674 006c 30000000 		.4byte	.LFE14
 4675 0070 00000000 		.4byte	.LFB15
 4676 0074 12000000 		.4byte	.LFE15
 4677 0078 00000000 		.4byte	.LFB16
 4678 007c 44000000 		.4byte	.LFE16
 4679 0080 00000000 		.4byte	.LFB17
 4680 0084 1A000000 		.4byte	.LFE17
 4681 0088 00000000 		.4byte	.LFB22
 4682 008c 34000000 		.4byte	.LFE22
 4683 0090 00000000 		.4byte	.LFB23
 4684 0094 0C000000 		.4byte	.LFE23
 4685 0098 00000000 		.4byte	.LFB24
 4686 009c 0C000000 		.4byte	.LFE24
 4687 00a0 00000000 		.4byte	.LFB25
 4688 00a4 34000000 		.4byte	.LFE25
 4689 00a8 00000000 		.4byte	.LFB21
 4690 00ac 14000000 		.4byte	.LFE21
 4691 00b0 00000000 		.4byte	.LFB20
 4692 00b4 28000000 		.4byte	.LFE20
 4693 00b8 00000000 		.4byte	.LFB6
 4694 00bc 18000000 		.4byte	.LFE6
 4695 00c0 00000000 		.4byte	0
 4696 00c4 00000000 		.4byte	0
 4697              		.section	.debug_line,"",%progbits
 4698              	.Ldebug_line0:
 4699 0000 FB030000 		.section	.debug_str,"MS",%progbits,1
 4699      0200D100 
 4699      00000201 
 4699      FB0E0D00 
 4699      01010101 
 4700              	.LASF89:
 4701 0000 736E7343 		.ascii	"snsCsdClk\000"
 4701      7364436C 
 4701      6B00
 4702              	.LASF164:
 4703 000a 43617053 		.ascii	"CapSense_SsCSDGetColSnsClkDivider\000"
 4703      656E7365 
 4703      5F537343 
 4703      53444765 
 4703      74436F6C 
 4704              	.LASF137:
 4705 002c 73656E73 		.ascii	"sensorElement\000"
 4705      6F72456C 
 4705      656D656E 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 136


 4705      7400
 4706              	.LASF133:
 4707 003a 7363616E 		.ascii	"scanStatus\000"
 4707      53746174 
 4707      757300
 4708              	.LASF127:
 4709 0045 43617053 		.ascii	"CapSense_SsCSDDisableMode\000"
 4709      656E7365 
 4709      5F537343 
 4709      53444469 
 4709      7361626C 
 4710              	.LASF199:
 4711 005f 43617053 		.ascii	"CapSense_CSDCalibrateWidget\000"
 4711      656E7365 
 4711      5F435344 
 4711      43616C69 
 4711      62726174 
 4712              	.LASF39:
 4713 007b 70726F78 		.ascii	"proxTouchTh\000"
 4713      546F7563 
 4713      68546800 
 4714              	.LASF182:
 4715 0087 43617053 		.ascii	"CapSense_widgetIndex\000"
 4715      656E7365 
 4715      5F776964 
 4715      67657449 
 4715      6E646578 
 4716              	.LASF200:
 4717 009c 43617053 		.ascii	"CapSense_DsUpdateWidgetCrc\000"
 4717      656E7365 
 4717      5F447355 
 4717      70646174 
 4717      65576964 
 4718              	.LASF95:
 4719 00b7 736E7254 		.ascii	"snrTestWidgetId\000"
 4719      65737457 
 4719      69646765 
 4719      74496400 
 4720              	.LASF21:
 4721 00c7 43617053 		.ascii	"CapSense_UNDEFINED_E\000"
 4721      656E7365 
 4721      5F554E44 
 4721      4546494E 
 4721      45445F45 
 4722              	.LASF8:
 4723 00dc 756E7369 		.ascii	"unsigned int\000"
 4723      676E6564 
 4723      20696E74 
 4723      00
 4724              	.LASF81:
 4725 00e9 7363616E 		.ascii	"scanCounter\000"
 4725      436F756E 
 4725      74657200 
 4726              	.LASF79:
 4727 00f5 6877436C 		.ascii	"hwClock\000"
 4727      6F636B00 
 4728              	.LASF178:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 137


 4729 00fd 696E6974 		.ascii	"initStatus\000"
 4729      53746174 
 4729      757300
 4730              	.LASF148:
 4731 0108 72656756 		.ascii	"regValue\000"
 4731      616C7565 
 4731      00
 4732              	.LASF141:
 4733 0111 696E7465 		.ascii	"interruptState\000"
 4733      72727570 
 4733      74537461 
 4733      746500
 4734              	.LASF16:
 4735 0120 72656738 		.ascii	"reg8\000"
 4735      00
 4736              	.LASF102:
 4737 0125 70633250 		.ascii	"pc2Ptr\000"
 4737      747200
 4738              	.LASF175:
 4739 012c 6C667372 		.ascii	"lfsrScale\000"
 4739      5363616C 
 4739      6500
 4740              	.LASF167:
 4741 0136 64697669 		.ascii	"dividerVal\000"
 4741      64657256 
 4741      616C00
 4742              	.LASF156:
 4743 0141 736E7343 		.ascii	"snsClk\000"
 4743      6C6B00
 4744              	.LASF145:
 4745 0148 6D6F6465 		.ascii	"mode\000"
 4745      00
 4746              	.LASF205:
 4747 014d 43617053 		.ascii	"CapSense_IsBusy\000"
 4747      656E7365 
 4747      5F497342 
 4747      75737900 
 4748              	.LASF76:
 4749 015d 43617053 		.ascii	"CapSense_RAM_SNS_CP_STRUCT\000"
 4749      656E7365 
 4749      5F52414D 
 4749      5F534E53 
 4749      5F43505F 
 4750              	.LASF153:
 4751 0178 43617053 		.ascii	"CapSense_SsSetModClkClockDivider\000"
 4751      656E7365 
 4751      5F537353 
 4751      65744D6F 
 4751      64436C6B 
 4752              	.LASF107:
 4753 0199 6873696F 		.ascii	"hsiomShift\000"
 4753      6D536869 
 4753      667400
 4754              	.LASF54:
 4755 01a4 43617053 		.ascii	"CapSense_RAM_WD_LIST_STRUCT\000"
 4755      656E7365 
 4755      5F52414D 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 138


 4755      5F57445F 
 4755      4C495354 
 4756              	.LASF139:
 4757 01c0 656C7464 		.ascii	"eltdNum\000"
 4757      4E756D00 
 4758              	.LASF173:
 4759 01c8 70747257 		.ascii	"ptrWdgt\000"
 4759      64677400 
 4760              	.LASF172:
 4761 01d0 43617053 		.ascii	"CapSense_SsSetWidgetSenseClkSrc\000"
 4761      656E7365 
 4761      5F537353 
 4761      65745769 
 4761      64676574 
 4762              	.LASF147:
 4763 01f0 6C6F6F70 		.ascii	"loopIndex\000"
 4763      496E6465 
 4763      7800
 4764              	.LASF84:
 4765 01fa 77646774 		.ascii	"wdgtWorking\000"
 4765      576F726B 
 4765      696E6700 
 4766              	.LASF12:
 4767 0206 666C6F61 		.ascii	"float\000"
 4767      7400
 4768              	.LASF109:
 4769 020c 73686966 		.ascii	"shift\000"
 4769      7400
 4770              	.LASF161:
 4771 0212 43617053 		.ascii	"CapSense_SsClearCSDSensors\000"
 4771      656E7365 
 4771      5F537343 
 4771      6C656172 
 4771      43534453 
 4772              	.LASF190:
 4773 022d 43617053 		.ascii	"CapSense_CSDSetupWidget\000"
 4773      656E7365 
 4773      5F435344 
 4773      53657475 
 4773      70576964 
 4774              	.LASF92:
 4775 0245 736E734C 		.ascii	"snsList\000"
 4775      69737400 
 4776              	.LASF7:
 4777 024d 6C6F6E67 		.ascii	"long long unsigned int\000"
 4777      206C6F6E 
 4777      6720756E 
 4777      7369676E 
 4777      65642069 
 4778              	.LASF183:
 4779 0264 43617053 		.ascii	"CapSense_sensorIndex\000"
 4779      656E7365 
 4779      5F73656E 
 4779      736F7249 
 4779      6E646578 
 4780              	.LASF110:
 4781 0279 43617053 		.ascii	"CapSense_FLASH_IO_STRUCT\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 139


 4781      656E7365 
 4781      5F464C41 
 4781      53485F49 
 4781      4F5F5354 
 4782              	.LASF96:
 4783 0292 736E7254 		.ascii	"snrTestSensorId\000"
 4783      65737453 
 4783      656E736F 
 4783      72496400 
 4784              	.LASF118:
 4785 02a2 77646774 		.ascii	"wdgtType\000"
 4785      54797065 
 4785      00
 4786              	.LASF174:
 4787 02ab 6C667372 		.ascii	"lfsrSize\000"
 4787      53697A65 
 4787      00
 4788              	.LASF166:
 4789 02b4 43617053 		.ascii	"CapSense_SsCSDSetColSnsClkDivider\000"
 4789      656E7365 
 4789      5F537343 
 4789      53445365 
 4789      74436F6C 
 4790              	.LASF71:
 4791 02d6 73686F72 		.ascii	"shortedWdgtId\000"
 4791      74656457 
 4791      64677449 
 4791      6400
 4792              	.LASF202:
 4793 02e4 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 4793      43313120 
 4793      352E342E 
 4793      31203230 
 4793      31363036 
 4794 0317 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m0 -mthumb -g -O"
 4794      20726576 
 4794      6973696F 
 4794      6E203233 
 4794      37373135 
 4795 034a 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4795      66756E63 
 4795      74696F6E 
 4795      2D736563 
 4795      74696F6E 
 4796              	.LASF52:
 4797 0372 62757474 		.ascii	"buttonentr\000"
 4797      6F6E656E 
 4797      747200
 4798              	.LASF88:
 4799 037d 6D6F6443 		.ascii	"modCsdClk\000"
 4799      7364436C 
 4799      6B00
 4800              	.LASF61:
 4801 0387 43617053 		.ascii	"CapSense_RAM_SNS_STRUCT\000"
 4801      656E7365 
 4801      5F52414D 
 4801      5F534E53 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 140


 4801      5F535452 
 4802              	.LASF168:
 4803 039f 43617053 		.ascii	"CapSense_SsCSDCalcPrsSize\000"
 4803      656E7365 
 4803      5F537343 
 4803      53444361 
 4803      6C635072 
 4804              	.LASF103:
 4805 03b9 64725074 		.ascii	"drPtr\000"
 4805      7200
 4806              	.LASF144:
 4807 03bf 43617053 		.ascii	"CapSense_SsSwitchSensingMode\000"
 4807      656E7365 
 4807      5F537353 
 4807      77697463 
 4807      6853656E 
 4808              	.LASF154:
 4809 03dc 6D6F6443 		.ascii	"modClk\000"
 4809      6C6B00
 4810              	.LASF94:
 4811 03e3 736E7343 		.ascii	"snsCp\000"
 4811      7000
 4812              	.LASF31:
 4813 03e9 68797374 		.ascii	"hysteresis\000"
 4813      65726573 
 4813      697300
 4814              	.LASF121:
 4815 03f4 43617053 		.ascii	"CapSense_FLASH_WD_STRUCT\000"
 4815      656E7365 
 4815      5F464C41 
 4815      53485F57 
 4815      445F5354 
 4816              	.LASF33:
 4817 040d 6C6F7742 		.ascii	"lowBslnRst\000"
 4817      736C6E52 
 4817      737400
 4818              	.LASF63:
 4819 0418 74657374 		.ascii	"testResultMask\000"
 4819      52657375 
 4819      6C744D61 
 4819      736B00
 4820              	.LASF117:
 4821 0427 746F7461 		.ascii	"totalNumSns\000"
 4821      6C4E756D 
 4821      536E7300 
 4822              	.LASF195:
 4823 0433 43617053 		.ascii	"CapSense_BistDisableMode\000"
 4823      656E7365 
 4823      5F426973 
 4823      74446973 
 4823      61626C65 
 4824              	.LASF29:
 4825 044c 6E6F6973 		.ascii	"noiseTh\000"
 4825      65546800 
 4826              	.LASF14:
 4827 0454 63686172 		.ascii	"char\000"
 4827      00
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 141


 4828              	.LASF193:
 4829 0459 43794578 		.ascii	"CyExitCriticalSection\000"
 4829      69744372 
 4829      69746963 
 4829      616C5365 
 4829      6374696F 
 4830              	.LASF75:
 4831 046f 43617053 		.ascii	"CapSense_RAM_SELF_TEST_STRUCT\000"
 4831      656E7365 
 4831      5F52414D 
 4831      5F53454C 
 4831      465F5445 
 4832              	.LASF66:
 4833 048d 676C6243 		.ascii	"glbCrcCalc\000"
 4833      72634361 
 4833      6C6300
 4834              	.LASF10:
 4835 0498 75696E74 		.ascii	"uint16\000"
 4835      313600
 4836              	.LASF204:
 4837 049f 443A5C43 		.ascii	"D:\\CYTEST\\MyELock\\eLock\\MyELock.cydsn\000"
 4837      59544553 
 4837      545C4D79 
 4837      454C6F63 
 4837      6B5C654C 
 4838              	.LASF70:
 4839 04c5 696E7642 		.ascii	"invBslnSnsId\000"
 4839      736C6E53 
 4839      6E734964 
 4839      00
 4840              	.LASF125:
 4841 04d2 43617053 		.ascii	"CapSense_SsTrimIdacsSourcing\000"
 4841      656E7365 
 4841      5F537354 
 4841      72696D49 
 4841      64616373 
 4842              	.LASF27:
 4843 04ef 7265736F 		.ascii	"resolution\000"
 4843      6C757469 
 4843      6F6E00
 4844              	.LASF82:
 4845 04fa 73746174 		.ascii	"status\000"
 4845      757300
 4846              	.LASF158:
 4847 0501 43617053 		.ascii	"CapSense_CalibrateWidget\000"
 4847      656E7365 
 4847      5F43616C 
 4847      69627261 
 4847      74655769 
 4848              	.LASF20:
 4849 051a 43617053 		.ascii	"CapSense_LOW_BSLN_RST_TYPE\000"
 4849      656E7365 
 4849      5F4C4F57 
 4849      5F42534C 
 4849      4E5F5253 
 4850              	.LASF155:
 4851 0535 43617053 		.ascii	"CapSense_SsSetSnsClockDivider\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 142


 4851      656E7365 
 4851      5F537353 
 4851      6574536E 
 4851      73436C6F 
 4852              	.LASF26:
 4853 0553 43617053 		.ascii	"CapSense_SENSE_METHOD_ENUM\000"
 4853      656E7365 
 4853      5F53454E 
 4853      53455F4D 
 4853      4554484F 
 4854              	.LASF60:
 4855 056e 69646163 		.ascii	"idacComp\000"
 4855      436F6D70 
 4855      00
 4856              	.LASF101:
 4857 0577 70635074 		.ascii	"pcPtr\000"
 4857      7200
 4858              	.LASF6:
 4859 057d 6C6F6E67 		.ascii	"long long int\000"
 4859      206C6F6E 
 4859      6720696E 
 4859      7400
 4860              	.LASF119:
 4861 058b 6E756D43 		.ascii	"numCols\000"
 4861      6F6C7300 
 4862              	.LASF196:
 4863 0593 43617053 		.ascii	"CapSense_SsCSDInitialize\000"
 4863      656E7365 
 4863      5F537343 
 4863      5344496E 
 4863      69746961 
 4864              	.LASF32:
 4865 05ac 6F6E4465 		.ascii	"onDebounce\000"
 4865      626F756E 
 4865      636500
 4866              	.LASF159:
 4867 05b7 63616C69 		.ascii	"calibrateStatus\000"
 4867      62726174 
 4867      65537461 
 4867      74757300 
 4868              	.LASF91:
 4869 05c7 77646774 		.ascii	"wdgtList\000"
 4869      4C697374 
 4869      00
 4870              	.LASF160:
 4871 05d0 43617053 		.ascii	"CapSense_CalibrateAllWidgets\000"
 4871      656E7365 
 4871      5F43616C 
 4871      69627261 
 4871      7465416C 
 4872              	.LASF123:
 4873 05ed 43617053 		.ascii	"CapSense_FLASH_STRUCT\000"
 4873      656E7365 
 4873      5F464C41 
 4873      53485F53 
 4873      54525543 
 4874              	.LASF132:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 143


 4875 0603 43617053 		.ascii	"CapSense_Scan\000"
 4875      656E7365 
 4875      5F536361 
 4875      6E00
 4876              	.LASF120:
 4877 0611 70747232 		.ascii	"ptr2SnsCpArr\000"
 4877      536E7343 
 4877      70417272 
 4877      00
 4878              	.LASF179:
 4879 061e 43617053 		.ascii	"CapSense_dsRam\000"
 4879      656E7365 
 4879      5F647352 
 4879      616D00
 4880              	.LASF98:
 4881 062d 736E7254 		.ascii	"snrTestRawCount\000"
 4881      65737452 
 4881      6177436F 
 4881      756E7400 
 4882              	.LASF72:
 4883 063d 73686F72 		.ascii	"shortedSnsId\000"
 4883      74656453 
 4883      6E734964 
 4883      00
 4884              	.LASF30:
 4885 064a 6E4E6F69 		.ascii	"nNoiseTh\000"
 4885      73655468 
 4885      00
 4886              	.LASF87:
 4887 0653 63736430 		.ascii	"csd0Config\000"
 4887      436F6E66 
 4887      696700
 4888              	.LASF18:
 4889 065e 63796973 		.ascii	"cyisraddress\000"
 4889      72616464 
 4889      72657373 
 4889      00
 4890              	.LASF37:
 4891 066b 43617053 		.ascii	"CapSense_RAM_WD_BASE_STRUCT\000"
 4891      656E7365 
 4891      5F52414D 
 4891      5F57445F 
 4891      42415345 
 4892              	.LASF100:
 4893 0687 6873696F 		.ascii	"hsiomPtr\000"
 4893      6D507472 
 4893      00
 4894              	.LASF11:
 4895 0690 75696E74 		.ascii	"uint32\000"
 4895      333200
 4896              	.LASF114:
 4897 0697 70747232 		.ascii	"ptr2FltrHistory\000"
 4897      466C7472 
 4897      48697374 
 4897      6F727900 
 4898              	.LASF188:
 4899 06a7 43617053 		.ascii	"CapSense_curSnsIOPtr\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 144


 4899      656E7365 
 4899      5F637572 
 4899      536E7349 
 4899      4F507472 
 4900              	.LASF106:
 4901 06bc 6D61736B 		.ascii	"mask\000"
 4901      00
 4902              	.LASF157:
 4903 06c1 43617053 		.ascii	"CapSense_SsSetClockDividers\000"
 4903      656E7365 
 4903      5F537353 
 4903      6574436C 
 4903      6F636B44 
 4904              	.LASF93:
 4905 06dd 73656C66 		.ascii	"selfTest\000"
 4905      54657374 
 4905      00
 4906              	.LASF135:
 4907 06e6 77646774 		.ascii	"wdgtIndex\000"
 4907      496E6465 
 4907      7800
 4908              	.LASF162:
 4909 06f0 736E7349 		.ascii	"snsIndex\000"
 4909      6E646578 
 4909      00
 4910              	.LASF25:
 4911 06f9 43617053 		.ascii	"CapSense_SENSE_METHOD_ISX_E\000"
 4911      656E7365 
 4911      5F53454E 
 4911      53455F4D 
 4911      4554484F 
 4912              	.LASF124:
 4913 0715 6C6F6E67 		.ascii	"long double\000"
 4913      20646F75 
 4913      626C6500 
 4914              	.LASF17:
 4915 0721 72656733 		.ascii	"reg32\000"
 4915      3200
 4916              	.LASF97:
 4917 0727 736E7254 		.ascii	"snrTestScanCounter\000"
 4917      65737453 
 4917      63616E43 
 4917      6F756E74 
 4917      657200
 4918              	.LASF77:
 4919 073a 636F6E66 		.ascii	"configId\000"
 4919      69674964 
 4919      00
 4920              	.LASF113:
 4921 0743 70747232 		.ascii	"ptr2SnsRam\000"
 4921      536E7352 
 4921      616D00
 4922              	.LASF86:
 4923 074e 736E7353 		.ascii	"snsStatus\000"
 4923      74617475 
 4923      7300
 4924              	.LASF150:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 145


 4925 0758 706F7374 		.ascii	"postScanStatus\000"
 4925      5363616E 
 4925      53746174 
 4925      757300
 4926              	.LASF35:
 4927 0767 736E7343 		.ascii	"snsClkSource\000"
 4927      6C6B536F 
 4927      75726365 
 4927      00
 4928              	.LASF189:
 4929 0774 43617053 		.ascii	"CapSense_SsCSDElectrodeCheck\000"
 4929      656E7365 
 4929      5F537343 
 4929      5344456C 
 4929      65637472 
 4930              	.LASF151:
 4931 0791 43617053 		.ascii	"CapSense_SsIsrInitialize\000"
 4931      656E7365 
 4931      5F537349 
 4931      7372496E 
 4931      69746961 
 4932              	.LASF2:
 4933 07aa 73686F72 		.ascii	"short int\000"
 4933      7420696E 
 4933      7400
 4934              	.LASF99:
 4935 07b4 43617053 		.ascii	"CapSense_RAM_STRUCT\000"
 4935      656E7365 
 4935      5F52414D 
 4935      5F535452 
 4935      55435400 
 4936              	.LASF201:
 4937 07c8 43617053 		.ascii	"CapSense_CSDDisconnectSns\000"
 4937      656E7365 
 4937      5F435344 
 4937      44697363 
 4937      6F6E6E65 
 4938              	.LASF4:
 4939 07e2 6C6F6E67 		.ascii	"long int\000"
 4939      20696E74 
 4939      00
 4940              	.LASF83:
 4941 07eb 77646774 		.ascii	"wdgtEnable\000"
 4941      456E6162 
 4941      6C6500
 4942              	.LASF58:
 4943 07f6 64696666 		.ascii	"diff\000"
 4943      00
 4944              	.LASF80:
 4945 07fb 74756E65 		.ascii	"tunerCmd\000"
 4945      72436D64 
 4945      00
 4946              	.LASF23:
 4947 0804 43617053 		.ascii	"CapSense_SENSE_METHOD_CSX_E\000"
 4947      656E7365 
 4947      5F53454E 
 4947      53455F4D 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 146


 4947      4554484F 
 4948              	.LASF104:
 4949 0820 70735074 		.ascii	"psPtr\000"
 4949      7200
 4950              	.LASF131:
 4951 0826 43617053 		.ascii	"CapSense_SetupWidget\000"
 4951      656E7365 
 4951      5F536574 
 4951      75705769 
 4951      64676574 
 4952              	.LASF41:
 4953 083b 62757474 		.ascii	"button0\000"
 4953      6F6E3000 
 4954              	.LASF42:
 4955 0843 62757474 		.ascii	"button1\000"
 4955      6F6E3100 
 4956              	.LASF43:
 4957 084b 62757474 		.ascii	"button2\000"
 4957      6F6E3200 
 4958              	.LASF44:
 4959 0853 62757474 		.ascii	"button3\000"
 4959      6F6E3300 
 4960              	.LASF45:
 4961 085b 62757474 		.ascii	"button4\000"
 4961      6F6E3400 
 4962              	.LASF46:
 4963 0863 62757474 		.ascii	"button5\000"
 4963      6F6E3500 
 4964              	.LASF47:
 4965 086b 62757474 		.ascii	"button6\000"
 4965      6F6E3600 
 4966              	.LASF48:
 4967 0873 62757474 		.ascii	"button7\000"
 4967      6F6E3700 
 4968              	.LASF49:
 4969 087b 62757474 		.ascii	"button8\000"
 4969      6F6E3800 
 4970              	.LASF50:
 4971 0883 62757474 		.ascii	"button9\000"
 4971      6F6E3900 
 4972              	.LASF69:
 4973 088b 696E7642 		.ascii	"invBslnWdgtId\000"
 4973      736C6E57 
 4973      64677449 
 4973      6400
 4974              	.LASF64:
 4975 0899 65787443 		.ascii	"extCap\000"
 4975      617000
 4976              	.LASF180:
 4977 08a0 43617053 		.ascii	"CapSense_dsFlash\000"
 4977      656E7365 
 4977      5F647346 
 4977      6C617368 
 4977      00
 4978              	.LASF68:
 4979 08b1 77646774 		.ascii	"wdgtCrcId\000"
 4979      43726349 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 147


 4979      6400
 4980              	.LASF85:
 4981 08bb 77646774 		.ascii	"wdgtStatus\000"
 4981      53746174 
 4981      757300
 4982              	.LASF181:
 4983 08c6 43617053 		.ascii	"CapSense_ioList\000"
 4983      656E7365 
 4983      5F696F4C 
 4983      69737400 
 4984              	.LASF197:
 4985 08d6 43617053 		.ascii	"CapSense_BistInitialize\000"
 4985      656E7365 
 4985      5F426973 
 4985      74496E69 
 4985      7469616C 
 4986              	.LASF65:
 4987 08ee 76646461 		.ascii	"vddaVoltage\000"
 4987      566F6C74 
 4987      61676500 
 4988              	.LASF203:
 4989 08fa 47656E65 		.ascii	"Generated_Source\\PSoC4\\CapSense_Sensing.c\000"
 4989      72617465 
 4989      645F536F 
 4989      75726365 
 4989      5C50536F 
 4990              	.LASF194:
 4991 0924 43617053 		.ascii	"CapSense_CSDConnectSns\000"
 4991      656E7365 
 4991      5F435344 
 4991      436F6E6E 
 4991      65637453 
 4992              	.LASF22:
 4993 093b 43617053 		.ascii	"CapSense_SENSE_METHOD_CSD_E\000"
 4993      656E7365 
 4993      5F53454E 
 4993      53455F4D 
 4993      4554484F 
 4994              	.LASF186:
 4995 0957 43617053 		.ascii	"CapSense_currentSenseMethod\000"
 4995      656E7365 
 4995      5F637572 
 4995      72656E74 
 4995      53656E73 
 4996              	.LASF170:
 4997 0973 70727353 		.ascii	"prsSize\000"
 4997      697A6500 
 4998              	.LASF36:
 4999 097b 73697A65 		.ascii	"sizetype\000"
 4999      74797065 
 4999      00
 5000              	.LASF51:
 5001 0984 62757474 		.ascii	"buttonclr\000"
 5001      6F6E636C 
 5001      7200
 5002              	.LASF108:
 5003 098e 64725368 		.ascii	"drShift\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 148


 5003      69667400 
 5004              	.LASF5:
 5005 0996 6C6F6E67 		.ascii	"long unsigned int\000"
 5005      20756E73 
 5005      69676E65 
 5005      6420696E 
 5005      7400
 5006              	.LASF165:
 5007 09a8 72657456 		.ascii	"retVal\000"
 5007      616C00
 5008              	.LASF152:
 5009 09af 61646472 		.ascii	"address\000"
 5009      65737300 
 5010              	.LASF34:
 5011 09b7 69646163 		.ascii	"idacMod\000"
 5011      4D6F6400 
 5012              	.LASF198:
 5013 09bf 43617053 		.ascii	"CapSense_ISR_StartEx\000"
 5013      656E7365 
 5013      5F495352 
 5013      5F537461 
 5013      72744578 
 5014              	.LASF67:
 5015 09d4 77646774 		.ascii	"wdgtCrcCalc\000"
 5015      43726343 
 5015      616C6300 
 5016              	.LASF115:
 5017 09e0 70747232 		.ascii	"ptr2DebounceArr\000"
 5017      4465626F 
 5017      756E6365 
 5017      41727200 
 5018              	.LASF126:
 5019 09f0 43617053 		.ascii	"CapSense_SsTrimIdacs\000"
 5019      656E7365 
 5019      5F537354 
 5019      72696D49 
 5019      64616373 
 5020              	.LASF28:
 5021 0a05 66696E67 		.ascii	"fingerTh\000"
 5021      65725468 
 5021      00
 5022              	.LASF57:
 5023 0a0e 62736C6E 		.ascii	"bslnExt\000"
 5023      45787400 
 5024              	.LASF38:
 5025 0a16 43617053 		.ascii	"CapSense_RAM_WD_BUTTON_STRUCT\000"
 5025      656E7365 
 5025      5F52414D 
 5025      5F57445F 
 5025      42555454 
 5026              	.LASF15:
 5027 0a34 63797374 		.ascii	"cystatus\000"
 5027      61747573 
 5027      00
 5028              	.LASF40:
 5029 0a3d 43617053 		.ascii	"CapSense_RAM_WD_PROXIMITY_STRUCT\000"
 5029      656E7365 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 149


 5029      5F52414D 
 5029      5F57445F 
 5029      50524F58 
 5030              	.LASF1:
 5031 0a5e 756E7369 		.ascii	"unsigned char\000"
 5031      676E6564 
 5031      20636861 
 5031      7200
 5032              	.LASF128:
 5033 0a6c 7472696D 		.ascii	"trimValue\000"
 5033      56616C75 
 5033      6500
 5034              	.LASF143:
 5035 0a76 43617053 		.ascii	"CapSense_SetPinState\000"
 5035      656E7365 
 5035      5F536574 
 5035      50696E53 
 5035      74617465 
 5036              	.LASF116:
 5037 0a8b 73746174 		.ascii	"staticConfig\000"
 5037      6963436F 
 5037      6E666967 
 5037      00
 5038              	.LASF142:
 5039 0a98 696F5074 		.ascii	"ioPtr\000"
 5039      7200
 5040              	.LASF112:
 5041 0a9e 70747232 		.ascii	"ptr2WdgtRam\000"
 5041      57646774 
 5041      52616D00 
 5042              	.LASF19:
 5043 0aaa 43617053 		.ascii	"CapSense_THRESHOLD_TYPE\000"
 5043      656E7365 
 5043      5F544852 
 5043      4553484F 
 5043      4C445F54 
 5044              	.LASF74:
 5045 0ac2 70327053 		.ascii	"p2pSnsId\000"
 5045      6E734964 
 5045      00
 5046              	.LASF191:
 5047 0acb 43617053 		.ascii	"CapSense_CSDScan\000"
 5047      656E7365 
 5047      5F435344 
 5047      5363616E 
 5047      00
 5048              	.LASF24:
 5049 0adc 43617053 		.ascii	"CapSense_SENSE_METHOD_BIST_E\000"
 5049      656E7365 
 5049      5F53454E 
 5049      53455F4D 
 5049      4554484F 
 5050              	.LASF138:
 5051 0af9 73746174 		.ascii	"state\000"
 5051      6500
 5052              	.LASF56:
 5053 0aff 62736C6E 		.ascii	"bslnInv\000"
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 150


 5053      496E7600 
 5054              	.LASF140:
 5055 0b07 656C7464 		.ascii	"eltdIndex\000"
 5055      496E6465 
 5055      7800
 5056              	.LASF134:
 5057 0b11 43617053 		.ascii	"CapSense_ScanAllWidgets\000"
 5057      656E7365 
 5057      5F536361 
 5057      6E416C6C 
 5057      57696467 
 5058              	.LASF105:
 5059 0b29 6873696F 		.ascii	"hsiomMask\000"
 5059      6D4D6173 
 5059      6B00
 5060              	.LASF163:
 5061 0b33 63757253 		.ascii	"curSnsIOPtr\000"
 5061      6E73494F 
 5061      50747200 
 5062              	.LASF146:
 5063 0b3f 43617053 		.ascii	"CapSense_SsSetIOsInDefaultState\000"
 5063      656E7365 
 5063      5F537353 
 5063      6574494F 
 5063      73496E44 
 5064              	.LASF53:
 5065 0b5f 70726F78 		.ascii	"proximity0\000"
 5065      696D6974 
 5065      793000
 5066              	.LASF192:
 5067 0b6a 4379456E 		.ascii	"CyEnterCriticalSection\000"
 5067      74657243 
 5067      72697469 
 5067      63616C53 
 5067      65637469 
 5068              	.LASF185:
 5069 0b81 43617053 		.ascii	"CapSense_curRamSnsPtr\000"
 5069      656E7365 
 5069      5F637572 
 5069      52616D53 
 5069      6E735074 
 5070              	.LASF0:
 5071 0b97 7369676E 		.ascii	"signed char\000"
 5071      65642063 
 5071      68617200 
 5072              	.LASF187:
 5073 0ba3 43617053 		.ascii	"CapSense_scanFreqIndex\000"
 5073      656E7365 
 5073      5F736361 
 5073      6E467265 
 5073      71496E64 
 5074              	.LASF55:
 5075 0bba 62736C6E 		.ascii	"bsln\000"
 5075      00
 5076              	.LASF3:
 5077 0bbf 73686F72 		.ascii	"short unsigned int\000"
 5077      7420756E 
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 151


 5077      7369676E 
 5077      65642069 
 5077      6E7400
 5078              	.LASF73:
 5079 0bd2 70327057 		.ascii	"p2pWdgtId\000"
 5079      64677449 
 5079      6400
 5080              	.LASF149:
 5081 0bdc 43617053 		.ascii	"CapSense_SsPostAllWidgetsScan\000"
 5081      656E7365 
 5081      5F537350 
 5081      6F737441 
 5081      6C6C5769 
 5082              	.LASF111:
 5083 0bfa 70747232 		.ascii	"ptr2SnsFlash\000"
 5083      536E7346 
 5083      6C617368 
 5083      00
 5084              	.LASF129:
 5085 0c07 6E657752 		.ascii	"newRegValue\000"
 5085      65675661 
 5085      6C756500 
 5086              	.LASF90:
 5087 0c13 676C6243 		.ascii	"glbCrc\000"
 5087      726300
 5088              	.LASF9:
 5089 0c1a 75696E74 		.ascii	"uint8\000"
 5089      3800
 5090              	.LASF13:
 5091 0c20 646F7562 		.ascii	"double\000"
 5091      6C6500
 5092              	.LASF59:
 5093 0c27 6E656742 		.ascii	"negBslnRstCnt\000"
 5093      736C6E52 
 5093      7374436E 
 5093      7400
 5094              	.LASF177:
 5095 0c35 43617053 		.ascii	"CapSense_SsInitialize\000"
 5095      656E7365 
 5095      5F537349 
 5095      6E697469 
 5095      616C697A 
 5096              	.LASF169:
 5097 0c4b 736E7343 		.ascii	"snsClkDivider\000"
 5097      6C6B4469 
 5097      76696465 
 5097      7200
 5098              	.LASF171:
 5099 0c59 6D6F6443 		.ascii	"modClkDivider\000"
 5099      6C6B4469 
 5099      76696465 
 5099      7200
 5100              	.LASF78:
 5101 0c67 64657669 		.ascii	"deviceId\000"
 5101      63654964 
 5101      00
 5102              	.LASF130:
ARM GAS  C:\Users\ADMINI~1\AppData\Local\Temp\ccPNEATA.s 			page 152


 5103 0c70 77696467 		.ascii	"widgetStatus\000"
 5103      65745374 
 5103      61747573 
 5103      00
 5104              	.LASF136:
 5105 0c7d 77696467 		.ascii	"widgetId\000"
 5105      65744964 
 5105      00
 5106              	.LASF184:
 5107 0c86 43617053 		.ascii	"CapSense_requestScanAllWidget\000"
 5107      656E7365 
 5107      5F726571 
 5107      75657374 
 5107      5363616E 
 5108              	.LASF176:
 5109 0ca4 43617053 		.ascii	"CapSense_SsInitializeSourceSenseClk\000"
 5109      656E7365 
 5109      5F537349 
 5109      6E697469 
 5109      616C697A 
 5110              	.LASF62:
 5111 0cc8 43617053 		.ascii	"CapSense_RAM_SNS_LIST_STRUCT\000"
 5111      656E7365 
 5111      5F52414D 
 5111      5F534E53 
 5111      5F4C4953 
 5112              	.LASF122:
 5113 0ce5 77646774 		.ascii	"wdgtArray\000"
 5113      41727261 
 5113      7900
 5114              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
